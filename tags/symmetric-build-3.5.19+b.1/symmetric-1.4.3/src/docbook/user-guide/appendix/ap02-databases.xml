<?xml version="1.0" encoding="UTF-8"?>
<appendix version="5.0" xml:id="xx-02-databases" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:ns="http://docbook.org/ns/docbook"
         xmlns:mml="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml">
    <title>Database Notes</title>
    <para>
        Each database management system has its own characteristics that results in
        feature coverage in SymmetricDS.  The following table shows which features are available
        by database.
    </para>
    <para>
        <table>
            <title>Support by Database</title>
            <tgroup cols="7">
                <colspec colwidth="75px" />
                <colspec colwidth="65px" />
                <colspec colwidth="50px" />
                <colspec colwidth="50px" />
                <colspec colwidth="50px" />
                <colspec colwidth="50px" />
                <colspec colwidth="50px" />
                <thead>
                    <row>
                        <entry>Database</entry>
                        <entry>Versions supported</entry>
                        <entry>Transaction Identifier</entry>
                        <entry>Fallback Update</entry>
                        <entry>Conditional Sync</entry>
                        <entry>BLOB Sync</entry>
                        <entry>CLOB Sync</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>Oracle</entry>
                        <entry>8.1.7 and above</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                    </row>
                    <row>
                        <entry>MySQL</entry>
                        <entry>5.0.2 and above</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                    </row>
                    <row>
                        <entry>PostgreSQL</entry>
                        <entry>8.2.5 and above</entry>
                        <entry>Y (8.3 and above only)</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                    </row>
                    <row>
                        <entry>SQL Server</entry>
                        <entry>2005</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                    </row>
                    <row>
                        <entry>HSQLDB</entry>
                        <entry>1.8</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                    </row>                    
                    <row>
                        <entry>Apache Derby</entry>
                        <entry>10.3.2.1</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                        <entry>Y</entry>
                    </row>                    
                </tbody>
            </tgroup>
        </table>
    </para>
    <section>
        <title>Oracle</title>
        <para>
            On Oracle Real Application Clusters (RAC), sequences should be ordered so data is processed 
            in the correct order.
            To offset the performance cost of ordering, the sequences should also be cached.
            <programlisting><![CDATA[
alter sequence SEQ_SYM_DATA_DATA_ID cache 1000 order;
alter sequence SEQ_SYM_OUTGOIN_BATCH_BATCH_ID cache 1000 order;
alter sequence SEQ_SYM_TRIGGER_RIGGER_HIST_ID cache 1000 order;
alter sequence SEQ_SYM_TRIGGER_TRIGGER_ID cache 1000 order;]]></programlisting>
        </para>
        <para>
            While BLOBs are supported on Oracle, the LONG data type is not.  LONG columns cannot be accessed from triggers.
        </para>
        <para>
            The SymmetricDS user generally needs privileges for connecting and creating 
            tables (including indexes), triggers, sequences, and procedures (including packages and functions).
            The following is an example of the needed grant statements:
            <programlisting><![CDATA[
GRANT CONNECT TO SYMMETRIC;
GRANT RESOURCE TO SYMMETRIC;
GRANT CREATE ANY TRIGGER TO SYMMETRIC;
GRANT EXECUTE ON UTL_RAW TO SYMMETRIC;]]></programlisting>
        </para>
    </section>
    <section>
        <title>MySQL</title>
        <para>
            MySQL supports several storage engines for different table types.  SymmetricDS requires
            a storage engine that handles transaction-safe tables.  The recommended storage engine
            is InnoDB, which is included by default in MySQL 5.0 distributions.
            Either select the InnoDB engine during installation or modify your server configuration.
            To make InnoDB the default storage engine, modify your MySQL server configuration file 
            (<filename>my.ini</filename> on Windows, <filename>my.cnf</filename> on Unix):
            <programlisting>default-storage_engine = innodb</programlisting>
            Alternatively, you can convert tables to the InnoDB storage engine with the following
            command:
            <programlisting>alter table t engine = innodb;</programlisting>            
        </para>
        <para>
            On MySQL 5.0, the SymmetricDS user needs the SUPER privilege in order to create triggers.

            <programlisting>grant super on *.* to symmetric;</programlisting>
            
            On MySQL 5.1, the SymmetricDS user needs the TRIGGER and CREATE ROUTINE privileges
            in order to create triggers and functions.

            <programlisting>grant trigger on *.* to symmetric;</programlisting>
            <programlisting>grant create routine on *.* to symmetric;</programlisting>

        </para>
    </section>
    <section>
        <title>PostgreSQL</title>
        <para>
            Starting with PostgreSQL 8.3, SymmetricDS supports the transaction identifier.
        </para>
        <para>
            Before database triggers can be created by in PostgreSQL,
            the plpgsql language handler must be installed on the database.
            The following statements should be run by the administrator on the database:
            
            <programlisting><![CDATA[
CREATE FUNCTION plpgsql_call_handler() RETURNS language_handler AS
    '$libdir/plpgsql' LANGUAGE C;

CREATE FUNCTION plpgsql_validator(oid) RETURNS void AS
    '$libdir/plpgsql' LANGUAGE C;

CREATE TRUSTED PROCEDURAL LANGUAGE plpgsql
    HANDLER plpgsql_call_handler
    VALIDATOR plpgsql_validator;]]></programlisting>
        </para>
    </section>
    <section>
        <title>MS SQL Server</title>
        <para>
            SQL Server was tested using the
            <ulink url="http://jtds.sourceforge.net/">
                jTDS
            </ulink>
            JDBC driver.
        </para>
    </section>
    <section>
        <title>HSQLDB</title>
        <para>
            HSQLDB was implemented with the intention that the database be run embedded in the same JVM process 
            as SymmetricDS.  Instead of dynamically generating static SQL-based triggers like the other databases, HSQLDB
            triggers are Java classes that re-use existing SymmetricDS services to read the configuration and insert data events
            accordingly.
        </para>
        <para>
            The transaction identifier support is based on SQL events that happen in a 'window' of time.  The trigger(s) track when the 
            last trigger fired.  If a trigger fired within X milliseconds of the previous firing, then the current event gets the same 
            transaction identifier as the last.  If the time window has passed, then a new transaction identifier is generated.
        </para>        
    </section>    
    <section>
        <title>Apache Derby</title>
        <para>
            The Derby database can be run as an embedded database that is accessed by an application
            or a standalone server that can be accessed from the network.
            This dialect implementation creates database triggers that make method calls into
            Java classes.  This means that the supporting JAR files need to be in the classpath when
            running Derby as a standalone database, which includes symmetric-ds.jar and
            commons-lang.jar.
        </para>
    </section>    

</appendix>
