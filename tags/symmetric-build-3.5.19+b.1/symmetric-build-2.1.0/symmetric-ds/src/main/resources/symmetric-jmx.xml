<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="mbeanserver" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true" />
        <property name="defaultDomain" value="$[sym.engine.name]" />
    </bean>

    <bean id="domainServerExporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="server" ref="mbeanserver" />
        <property name="assembler" ref="assembler" />
        <property name="beans">
            <map>
                <entry key="$[sym.engine.name]:name=Node" value-ref="nodeManagementService" />
                <entry key="$[sym.engine.name]:name=Incoming" value-ref="incomingManagementService" />
                <entry key="$[sym.engine.name]:name=Outgoing" value-ref="outgoingManagementService" />
                <entry key="$[sym.engine.name]:name=Parameters" value-ref="parameterManagementService" />
                <entry key="$[sym.engine.name]:name=RouterJob" value-ref="job.routing" />
                <entry key="$[sym.engine.name]:name=PullJob" value-ref="job.pull" />
                <entry key="$[sym.engine.name]:name=PushJob" value-ref="job.push" />
                <entry key="$[sym.engine.name]:name=PurgeJob" value-ref="job.purge" />                
                <entry key="$[sym.engine.name]:name=Notifications" value-ref="notificationService" />
            </map>
        </property>
        <property name="registrationBehaviorName" value="REGISTRATION_IGNORE_EXISTING" />
    </bean>

    <bean id="jmxAttributeSource" class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />

    <!-- will create management interface using annotation metadata -->
    <bean id="assembler" class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
        <property name="attributeSource" ref="jmxAttributeSource" />
    </bean>

    <bean id="nodeManagementService" class="org.jumpmind.symmetric.service.jmx.NodeManagementService">
        <property name="purgeService" ref="purgeService" />
        <property name="dataService" ref="dataService" />
        <property name="clusterService" ref="clusterService" />
        <property name="registrationService" ref="registrationService" />
        <property name="triggerRouterService" ref="triggerRouterService" />
        <property name="dataSource" ref="dataSource" />
        <property name="outgoingBatchService" ref="outgoingBatchService" />
        <property name="nodeService" ref="nodeService" />
        <property name="dataExtractorService" ref="dataExtractorService" />
        <property name="statisticManager" ref="statisticManager" />
        <property name="parameterService" ref="parameterService" />
        <property name="concurrentConnectionManager" ref="concurrentConnectionManager" />
        <property name="securityService" ref="securityService" />
        <property name="configurationService" ref="configurationService"/>
    </bean>

    <bean id="incomingManagementService" class="org.jumpmind.symmetric.service.jmx.IncomingManagementService">
        <property name="statisticManager" ref="statisticManager" />
    </bean>

    <bean id="notificationService" class="org.jumpmind.symmetric.service.jmx.NotificationService"></bean>

    <bean id="outgoingManagementService" class="org.jumpmind.symmetric.service.jmx.OutgoingManagementService">
        <property name="statisticManager" ref="statisticManager" />
        <property name="dataExtractorService" ref="dataExtractorService" />        
    </bean>

    <bean id="parameterManagementService" class="org.jumpmind.symmetric.service.jmx.ParameterManagementService">
        <property name="parameterService" ref="parameterService" />
    </bean>

</beans>