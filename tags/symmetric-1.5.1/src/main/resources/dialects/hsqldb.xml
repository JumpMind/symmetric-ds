<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd" default-lazy-init="true">

    <bean id="stringTemplate" class="java.lang.String">
        <constructor-arg>
            <value>
                <![CDATA[ case when $(tableAlias)."$(columnName)" is null then '' else concat(concat('"',replace(replace($(tableAlias)."$(columnName)",'\','\\'),'"','\"')),'"') end ||','||]]>
            </value>
        </constructor-arg>
    </bean>

    <bean id="hsqldbDialect" class="org.jumpmind.symmetric.db.hsqldb.HsqlDbDialect"
        scope="prototype">
        <property name="tablePrefix" value="${sync.table.prefix}" />
        <property name="initializeDatabase" value="${hsqldb.initialize.db}" />
        <property name="parameterService" ref="parameterService" />
        <property name="streamingResultsFetchSize" value="${db.jdbc.streaming.results.fetch.size}" />
        <property name="sqlTemplate">
            <bean class="org.jumpmind.symmetric.db.SqlTemplate">
                <property name="triggerPrefix" value="${trigger.prefix}" />
                <property name="stringColumnTemplate" ref="stringTemplate" />
                <property name="clobColumnTemplate" ref="stringTemplate" />
                <property name="blobColumnTemplate">
                    <value>
                        <![CDATA[ case when $(tableAlias)."$(columnName)" is null then '' else concat(concat('"',replace(replace(BASE64_ENCODE($(tableAlias)."$(columnName)"),'\','\\'),'"','\"')),'"') end ||','||]]>
                    </value>
                </property>
                <property name="numberColumnTemplate">
                    <value>
                        <![CDATA[ case when $(tableAlias)."$(columnName)" is null then '' else concat(concat('"',cast($(tableAlias)."$(columnName)" as varchar(50))),'"') end ||','||]]>
                    </value>
                </property>
                <property name="datetimeColumnTemplate">
                    <value>
                        <![CDATA[ case when $(tableAlias)."$(columnName)" is null then '' else concat(concat('"',to_char($(tableAlias)."$(columnName)", 'YYYY-MM-DD HH24:MI:SS')),'"') end ||','||]]>
                    </value>
                </property>
                <property name="booleanColumnTemplate">
                    <value>
                        <![CDATA[case when $(tableAlias)."$(columnName)" is null then '' when $(tableAlias)."$(columnName)" then '"1"' else '"0"' end||','||]]>
                    </value>
                </property>
                <property name="oldTriggerValue" value="t.old_" />
                <property name="newTriggerValue" value="t.new_" />
                <property name="triggerConcatCharacter" value="||" />
                <property name="sqlTemplates">

                    <map>
                        <entry key="insertTriggerTemplate">
                            <value>
                                <![CDATA[
                                CREATE TRIGGER $(triggerName)_$(engineName)_$(triggerHistoryId) AFTER INSERT ON $(tableName) FOR EACH ROW QUEUE 0 CALL "org.jumpmind.symmetric.db.hsqldb.HsqlDbTrigger"
                                ]]>
                            </value>
                        </entry>
                        <entry key="updateTriggerTemplate">
                            <value>
                                <![CDATA[
                                CREATE TRIGGER $(triggerName)_$(engineName)_$(triggerHistoryId) AFTER UPDATE ON $(tableName) FOR EACH ROW QUEUE 0 CALL "org.jumpmind.symmetric.db.hsqldb.HsqlDbTrigger"
                                ]]>
                            </value>
                        </entry>
                        <entry key="deleteTriggerTemplate">
                            <value>
                                <![CDATA[
                                CREATE TRIGGER $(triggerName)_$(engineName)_$(triggerHistoryId) AFTER DELETE ON $(tableName) FOR EACH ROW QUEUE 0 CALL "org.jumpmind.symmetric.db.hsqldb.HsqlDbTrigger"
                                ]]>
                            </value>
                        </entry>
                        <entry key="initialLoadSqlTemplate">
                            <value>
                                <![CDATA[select $(columns) from $(schemaName)$(tableName) t  where $(whereClause)]]>
                            </value>
                        </entry>
                    </map>
                </property>
            </bean>
        </property>
    </bean>

</beans>