%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: SymmetricDS.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Brian Hill
%%CreationDate: 5/22/09
%%BoundingBox: 0 0 429 96
%%HiResBoundingBox: 0 0 428.4585 95.2242
%%CropBox: 0 0 428.4585 95.2242
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1200 GradRes=300 Text=0 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-05-22T09:15:49-04:00</xap:CreateDate>
         <xap:ModifyDate>2009-05-22T09:15:49-04:00</xap:ModifyDate>
         <xap:MetadataDate>2009-05-22T09:15:49-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>60</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAPAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWO+b/zA8qeUII5t&#xA;evVthKaRxgF5G8SEWrEDvTJwxylyYymI82Kf9DH/AJSf9XWX/pFuf+aMs/LZO5r8eHe7/oY/8pP+&#xA;rrL/ANItz/zRj+Wydy+PDvd/0Mf+Un/V1l/6Rbn/AJox/LZO5fHh3u/6GP8Ayk/6usv/AEi3P/NG&#xA;P5bJ3L48O9P/ACl+a/kXzZdPa6LqIluEofRkRoXYH+VZArH7sjPDKPMM45Iy5Muypm7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXxp+f13d3f5pavFPI0kdmY4b&#xA;dT0VDEslB9LnNvpY/uw63US9bzv0cyKaLZbqf5Z6+F+u6NbPqmmSk8Gth6ksTD7UM0Qq6yRnY7Uy&#xA;kZo8jsW6WI8xuFDTvyy84XjkzadJp1rGOU95fqbWGNB1ZjKFNB7A4ZZoDrfuRHFI9KSTV7G2ttTu&#xA;be1ZpLaKRkhkYcWdBsrlTuvIb07ZZEWGEtimPke6urDzjo11bO0cq3kK8lJUlXcI61H8ysRkcsbi&#xA;U45VIPvJTVQT3AOaN2zeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2Kvjb8746/mnr5/4ti/5MR5u9IP3Y/HV1WpPrLBvR9syaaLezWNpb39rFqtraXtwGjVW1fy9c&#xA;rDfD4aCG7t2KcpFpQuPtdc10tjRI90uXwLnjcWL+Cs2lCVRd3Gn6tdRwfGbrzZdKlnbkH7ZgRv3n&#xA;T7NN8jfS4/5vNNeR/wA55Fr8sd3rl/dRStPHNPI6TuOLSAsaOVHQt1p2zYQjUQ4U5WSqeWIqeZdJ&#xA;NP8Aj8t/+Tq45B6T7lxn1D3vumW4itrN7iU8YoYzJI3gqrUn7hnPO5fJHmP84fPXnzzd+jdK19PL&#xA;GiSyMlo7ym1QIOjzTKOfJuw96YqreTZfz60XzlaiG51PWtNjvFiuZi813ZTwc+LssklRwK7q22FX&#xA;0LH+b3kCTzCPLyalXVzObX6r6UlfWDcSvLjx6++BVXzP+avkTyxqY0vWdTW3viiyegqSSMFckLXg&#xA;rUJp0xVDah+cv5eadqg0q91P0NQb0/8AR3ikqPWUMgY8aLUMOvTviqjY/nn+V97q8elW+tIbmVik&#xA;btHKsJYV/wB3Moj7eOKtQfnp+V0+sRaTFraPdTSCKNxHL6JdjxA9Xjw3PviqN1382/IOha2+ianq&#xA;Yh1NCgaARyNQyAFRVVI3DDviqDtPzy/K+61iPSYNaRruV/Tjb05RCXJoB6xX0+veuKtJ+ev5Wvq0&#xA;elJraPcyyCJJFjlMJcmg/fBfTpXvWmKsm8y+bvLflmzF3ruoRWMLGkfqH4nI7IgqzfQMVYrpf59/&#xA;lXqd/HY2+tBZ5mCRmaGaFCxNAOciKor7nFUF+cX50af5IsXs9PMV15lcRtDZyhyixyV/eOVp04/Z&#xA;qMVYt+Sf5tHUrTXtZ8462Zb+JTObVY2WC1soQKsoUcavI9KbsaDrirND+f8A+VIt3uP00PTjKqR6&#xA;M3Ilq04pw5N03IG3fqMVYd+en5gNd6Polv5Z8zx6J9dH183Tm6gklgoUjC+lDIwUtUmtOgwqy3yJ&#xA;qsPk78trC/8AOvmEXFxdcrh7+5lkcyCU1iSISBZSPTptxrgVdZf85BflPeXaWsetcJHbirywTxx1&#xA;O27ugUfScVZH598xLonk+/1SNxzERW2YVILyCiUI8exy7Bj45iLXlnwxJfPflu4/N7zHbXdxpWr3&#xA;ksdnT1azsta70Wu23zzc5o4MZAkObrMUs2QEgp9+U/5l+bP8VwaPrF495a3LNGzTtUxFASxr32Xv&#xA;/WtOs0cBDijs2aXUyM+GTXm/80fMfmPzM+jaPqSaPpSu8QuHPDmF+0XbfutFA6/TTHDo4whxyHEe&#xA;5OTUmU+GJoIPSoPzZ0fzFGNPuLrVLZHj5TxkywyREgndq0GGR084b1ErEZoy7w+koGkaGNpF4yMo&#xA;Lr4EjcZpXZL8VfG/50NOv5qeYSo5J60dVPQfuYxnTaDFeGJ9/wB5ef1uYxzSHu+4MZ0u3bULyK0j&#xA;j4yyk/ESOCqoLM7E0oqqCxPhmRkx8IstOPLxmgjru/0+DUCdGllt4YVEaTqXSSXj9qVqfZ59adht&#xA;75GOnkR6mctTEH0lTOr+rcQS6hNLfwxsGaCd5SGUHdak1FelRh/LbbbI/NC9za3W7S0sp0e15z2N&#xA;0vrWUxABMZJHFvB0YFWHiPCmDFAyG/Mc1y5BHluDyUfL7zv5j0qi8EN5B0/4yr3w5sNQl7ixxZyZ&#xA;x94fXX5h/mFoHk7SbVtZt5rqHUQ8CwwBWJAQc682QUo2ck9M+cL78tfJ+reW9Q81+XNYGnWVs8gG&#xA;kaqYxcHgoYLG0bNXlWigjCqd/wDOMUmuR+d57a1kk/RLWrvqEXWOooIia9G5Ham/XFWO+Z9TsfLP&#xA;55ajqs7IU0/VJLsxFgOZFZAu/TkTTFWUflP5XbzXrepfmf5sYT6XYvJdqz7pLPEC23b04QvTxoMV&#xA;Yh5H0i1/M/8AMq9uNRmZbFzPqeqyJVSkCmoQMdh1VfliqXeQfK+i+d/zGGi6ezw6OZprhzuXjsom&#xA;J+2w6leK1Pc4qs0DT/Lmq/mkNO0syJolteyzeo55FbK0Jld2f/jHH1xVMvJ9lb/mt+a13JeNJHZX&#xA;Ek2oahKBQpbRnZA29NiqDFUs8meW9H86fmYNA0lZIdIe4mk9UkMUsoWJ5cq9SoAB8Tiq/R9G0HWv&#xA;zej8u6Ckp0oaiyRSPR6W1sxaRy3gVjJG2Ku17zNrP5i/mJO8NlPqswlcWelowUC1gY0jUllIHEVa&#xA;m/U4qq6x5Y17XdaiTTvK8WkuqpbvZWk8TgOjFS7B55H5b0b5eOKpj+fs+kx/mMmk2wkn1KC2tbfU&#xA;LkuX9S5MaqB8TUXinHp9OKsn/NvS/Jf5efl5ZabogD6r5kEUepXMUplEsdmA8pUszBVMzLULiqaf&#xA;kj+RnlzXvKtr5m8xRSyNeSerZWofgghjegMgFeXqcT3+zgVgnmK/j/MX88xpFpHWyN2unwFBREs7&#xA;SodgOy8UdsKqd9rg/Mv844NGvrj6nowu3s7MSOqJDaW9QFRTsHkWP/gjirO9c8jf845v5pi0SLXp&#xA;bG8gVLZ7K1Lz+rOx2JlKTKWNaFVxVM/+cgNdg0TRtC8o2UjSpbxK0hkYmThEoSP1Bt8R65uOyMNy&#xA;Mz0dV2pm4YiI6qnlbzx5W8m/lRIWvbefXtQjZ/qUL825yqeCuAfh4qaN4YM+CebPyPCOrLFnhiw2&#xA;SOJhX5ZapbaNJP5z8wQvNp0LG3t0Vd5ZpftMD/k/xzN1w46xQ583E0UuEHLPkmjeTPK/nOx1PzJo&#xA;OqnRYIHdpra+KceQXmePErxG/j8hlI1WTARjnHi9zbLTQzAzhLhQn/OPl95hbzzHbWU8hsSjNfRk&#xA;lo+APuaBvDLu1ow8OyPV0aey5T4yL9L6pzmnfuxV8r+dbZbn87dat3tkvEkYq9o7cPUBtlqqsej/&#xA;AMn+VTOk08uHSRN15/534vydBljeqkKvbl8B+B5pFd+UfKAnYR+YJNMcV52Wo2siTx9uLMtFb6Mv&#xA;jqs1bw4vOJ2apaTFf18PlIbq8nl7QLPQNRutLM+qMsJV9YniNvbRhiBxgR/ieRvs9aAb/OIz5JZI&#xA;iVR3+kGz8fJl+XhHHIxuW31HYfBR8u6Npeo+VeWpQz+hDcSAahZr6ktsWVf76ICrQtx2YdGB8clq&#xA;MsoZfSRZHI9fce9GDDGeL1A8+Y6fsUU8qeTDKK+ahNH+xFDZzGZjt8ISpoThOpzV/d1/nCmA0uL/&#xA;AFS/hui9T0+10/XvLNta2kllb/WkeOK5I+tODNGPWmA+wXpQJ2A98hiyGcMhJs105cjsGzLjEJ4w&#xA;BQvrz5jcvpXz3+X+k+dtBi06/ke3eEiW1uouJeN+NOjAgg9xnLPRPJ0/5xJt3uK3Xmu6a2rvHDBH&#xA;E9PDlyYf8LirJNf8weRPyF0HTrW00ye5TU5XEro6tcyNGoJkkaSnLrSnbFXgNloGq/nb+bV/qVjZ&#xA;vp+l3kyS38/21t4I41j3boZHCbDxPhir6x138vrC9/L+XyVpc50jTpLdbRZIkDssII5ihK1LioJJ&#xA;74qxDyd/zj5p/lXy35i0iw1mZrrzDCttJqRhQSQxAMCqKG78zvXFXfl//wA496d5KttcFjrM019r&#xA;FobKO9eFFa3Vq8mRQ25JIO57YqlXlz/nF3SdCtNZittene41ezaw+tNboHhikYGXhR+rqvH5Yqmv&#xA;kf8A5x807yho3mCxsNZme9163FodRaFBJBHRgwReRBryxVr8u/8AnHvTfI7avPY6zNPf6naNZQ3b&#xA;wqrW6vuzoA25Jp92Krvyt/5x60TyD5gl1uPUpdTuXga3iE0SxiP1CCzCjNUkCmKsb8wf84kaDe63&#xA;PqWka5caVHPK0wthEJRGWNSI3DIwG+1emKsu/Lb/AJx98l+SLwaopk1bWV3jvbsLSImtTFGNlP8A&#xA;lGp98VY95+/5xe0rzZ5uvfMK63NYnUHEtxbeisoDhQp4MWWleNdwcVX+Z/8AnGDS9eg0e1bX7i2t&#xA;NFsY7C1hWBGrxJZ5WJYfFIzVPbFXrNvoMdl5Zj0LTZTax29oLO1nChjGFj9NX41WpHXFXnP5X/8A&#xA;OPOjeQ/Mkmvpqk2p3RgeCJZolQIZCCz1DNU0FPpxVI/Of/OJ/lrXNcudV0zVZtK+uSNNNa+ks0Yk&#xA;dizFPijKgk9O2Ksi/LX/AJx38m+SNQXVfUl1XV46+hc3IUJFUUJjjXbl/lGpxVvzv+Qth5v8wTa1&#xA;f63dRySAJHCiIVjjWtFWu/fM/T6+WKPCAHCz6KOWXESUt03/AJxf8nW1xHLd6hd3samrwtwjVvDd&#xA;ACPvyyfauUjagwh2bjB3ss88wflv5Z1jyqPLRtxa6elDD6IAMbL+0vv/AJ9Nsw8eonGfGDu5c8MZ&#xA;R4SNnmcf/OK2jCc89duTbH/dYjQP9LdP+FzPPa865C3B/kuHeXqfkvyF5d8n2BtNIg4s9DPO55SO&#xA;aCpJPy6Zr82eWQ3IudiwxxiohkWUtrsVfNX5v+X9U8v/AJiS+Z5LE6hpN/8AFMAGC0Kemy8lqUYL&#xA;Qq3Zs6DQZY5MPhXwyHL7/wAB0msxyx5vEriieaCh87aTNCoi82T2sS/Yt9S08Xkqbf79jHxU8WJw&#xA;HRzB3xg/1ZcP2JGshW2Qj+tG0k82+c9NurKW2gvLnWb2ZfTN7cosFvCh+19Xt1C0Zh8JZhWnzzJ0&#xA;uklEgkCAHQbk+8uPqdZExIBMiep2A9wS7yb5qsNNhNpfNc2lHMltqViVE0ZYAMkiNVZYjxBoeh6d&#xA;cu1emlM3Gj5Hl+wtWk1UYDhlY8x+Nwy5/O2nqHlPnSR+YHOOHS1juGFOnqsnCvvmANHLl4X+z2+T&#xA;nfnI/wCqf7Hf7kB5d0y/87edNM/RFnMml2EyzzX10xeSQq6s8k0u9XfgqhV+yPbLsshgxSEiOOQq&#xA;h09w7mnGDnyxMQeCJuz1fVygKoUdAKDOad+3iqC1HRNG1Ph+kbG3vPTr6ZniSQrXrx5A0xVVsdO0&#xA;+wgEFjbRWsA39KFFjWvjRQBiqIxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KqN39T9H/AEz0/RqP77jxr2+1thCoP/nW/wDlz/5JYFd/zrf/AC5/8ksVd/zrf/Ln/wAksVd/&#xA;zrf/AC5/8ksVRNl+jfj+pej1Hqejw69uXHCqJwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FX//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:08D35F008B47DE118499D411FC67768D</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:09D35F008B47DE118499D411FC67768D</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:9EFC26DD2645DE119302B3BB76C2E6C9</stRef:instanceID>
            <stRef:documentID>uuid:8094C3FAB33BDE11A403FDA758FC5417</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>11.000000</stDim:w>
            <stDim:h>8.500000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>True</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20 1</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=57 Y=0 K=2 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>57.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>1.999998</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=57 Y=0 K=41 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>57.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>40.999996</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Grayscale</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -95.2241 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 95.2241 li
428.458 95.2241 li
428.458 0 li
cp
clp
[1 0 0 1 0 0 ]ct
68.373 93.726 mo
14.076 93.726 li
11.142 93.726 8.469 92.538 6.534 90.63 cv
4.599 88.722 3.402 86.103 3.402 83.214 cv
3.402 54.6156 li
7.04716 57.1443 13.9858 60.6431 25.9016 62.3534 cv
23.328 66.042 li
23.04 66.456 23.139 67.032 23.562 67.32 cv
23.7218 67.4311 23.9043 67.4846 24.0854 67.4846 cv
24.3734 67.4846 24.6576 67.3492 24.84 67.095 cv
27.9525 62.6238 li
31.8915 63.0976 36.3337 63.378 41.337 63.378 cv
46.3567 63.378 50.8144 63.0954 54.7628 62.6184 cv
57.879 67.095 li
58.0558 67.3492 58.3413 67.4846 58.6311 67.4846 cv
58.8133 67.4846 58.9972 67.4312 59.157 67.32 cv
59.571 67.032 59.679 66.456 59.382 66.042 cv
56.8079 62.3477 li
68.4755 60.6671 75.3628 57.2713 79.056 54.758 cv
79.056 83.214 li
79.056 86.103 77.859 88.722 75.924 90.63 cv
73.98 92.538 71.316 93.726 68.373 93.726 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[-3.15012e-06 -72.0664 72.0664 -3.15012e-06 41.2266 94.4741 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9b
s,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9b
s,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9b
s,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9bs,d9b
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s,d9bs,d9ds,d9es,d9gs,d9hs,d9js,d9ls,d9ms,d9os,d9ps,d9rs,d9ss,d9us,d:"s,d:#s,d:%
s,d:&s,d:(s,d:*s,d:+s,d:-s,d:.s,d:0s,d:1s,d:3s,d:5s,d:6s,d:8s,d:9s,d:;s,d:<s,d:>
s,d:@s,d:As,d:Cs,d:Ds,d:Fs,d:Hs,d:Is,d:Ks,d:Ls,d:Ns,d:Os,d:Qs,d:Ss,d:Ts,d:Vs,d:W
s,d:Ys,d:Zs,d:\s,d:^s,d:_s,d:as,d:bs,d:ds,d:es,d:gs,d:is,d:js,d:ls,d:ms,d:os,d:q
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s,d:qs,d:rs,d:ss,d:ts,d:us,d;!s,d;#s,d;$s,d;%s,d;&s,d;'s,d;(s,d;*s,d;+s,d;,s,d;-
s,d;.s,d;0s,d;1s,d;2s,d;3s,d;4s,d;5s,d;7s,d;8s,d;9s,d;:s,d;;s,d;<s,d;>s,d;?s,d;@
s,d;As,d;Bs,d;Cs,d;Es,d;Fs,d;Gs,d;Hs,d;Is,d;Ks,d;Ls,d;Ms,d;Ns,d;Os,d;Ps,d;Rs,d;S
s,d;Ts,d;Us,d;Vs,d;Ws,d;Ys,d;Zs,d;[s,d;\s,d;]s,d;^s,d;`s,d;as,d;bs,d;cs,d;ds,d;e
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [0.4 0.6 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
np
79.803 83.214 mo
79.056 83.214 li
79.056 86.103 77.859 88.722 75.924 90.63 cv
73.98 92.538 71.316 93.726 68.373 93.726 cv
14.076 93.726 li
11.142 93.726 8.469 92.538 6.534 90.63 cv
4.599 88.722 3.402 86.103 3.402 83.214 cv
3.402 33.669 li
3.402 30.78 4.599 28.161 6.534 26.253 cv
8.469 24.345 11.142 23.157 14.076 23.157 cv
68.373 23.157 li
71.316 23.157 73.98 24.345 75.924 26.253 cv
77.859 28.161 79.056 30.78 79.056 33.669 cv
79.056 83.214 li
79.803 83.214 li
80.559 83.214 li
80.559 33.669 li
80.55 27.045 75.069 21.663 68.373 21.654 cv
14.076 21.654 li
7.38 21.663 1.899 27.045 1.899 33.669 cv
1.899 83.214 li
1.899 89.838 7.38 95.22 14.076 95.22 cv
68.373 95.22 li
75.069 95.22 80.55 89.838 80.559 83.214 cv
79.803 83.214 li
0 0 0 0.2 cmyk
f
88.668 62.55 mo
97.614 62.001 li
97.317 63.423 97.335 64.512 97.659 65.259 cv
98.199 66.465 99.342 67.068 101.106 67.068 cv
102.42 67.068 103.536 66.753 104.463 66.141 cv
105.381 65.52 105.984 64.809 106.263 63.999 cv
106.524 63.225 106.425 62.532 105.957 61.92 cv
105.489 61.308 104.112 60.741 101.835 60.192 cv
98.109 59.283 95.643 58.086 94.437 56.574 cv
93.213 55.071 93.006 53.154 93.807 50.823 cv
94.329 49.293 95.265 47.844 96.624 46.485 cv
97.974 45.126 99.675 44.055 101.727 43.272 cv
103.77 42.498 106.353 42.102 109.449 42.102 cv
113.256 42.102 115.92 42.813 117.432 44.226 cv
118.944 45.648 119.367 47.898 118.683 50.985 cv
109.836 51.498 li
110.061 50.157 109.908 49.176 109.386 48.573 cv
108.855 47.961 107.937 47.655 106.641 47.655 cv
105.57 47.655 104.679 47.88 103.986 48.339 cv
103.284 48.789 102.825 49.338 102.609 49.995 cv
102.438 50.463 102.519 50.895 102.834 51.273 cv
103.131 51.669 104.04 52.029 105.552 52.371 cv
109.278 53.235 111.861 54.117 113.301 54.999 cv
114.732 55.89 115.623 56.988 115.965 58.302 cv
116.307 59.616 116.199 61.092 115.65 62.712 cv
114.993 64.629 113.859 66.384 112.248 68.004 cv
110.637 69.615 108.747 70.839 106.56 71.667 cv
104.382 72.504 101.844 72.918 98.964 72.918 cv
93.888 72.918 90.72 71.946 89.433 69.993 cv
88.155 68.04 87.894 65.556 88.668 62.55 cv
0 0 0 1 cmyk
f
88.668 62.55 mo
88.74 63.702 li
97.686 63.162 li
97.614 62.001 li
96.489 61.767 li
96.336 62.505 96.246 63.18 96.246 63.81 cv
96.246 64.494 96.345 65.133 96.606 65.718 cv
96.606 65.727 li
96.966 66.546 97.596 67.23 98.388 67.635 cv
99.18 68.049 100.098 68.22 101.106 68.22 cv
102.6 68.22 103.968 67.86 105.102 67.104 cv
106.173 66.393 106.983 65.475 107.361 64.368 cv
107.487 63.99 107.559 63.594 107.559 63.189 cv
107.568 62.478 107.307 61.776 106.875 61.218 cv
106.641 60.921 106.371 60.696 106.065 60.498 cv
105.147 59.922 103.878 59.499 102.105 59.067 cv
100.305 58.635 98.829 58.122 97.695 57.573 cv
96.561 57.015 95.787 56.421 95.337 55.854 cv
95.337 55.845 li
94.761 55.134 94.491 54.378 94.482 53.397 cv
94.482 52.758 94.617 52.029 94.896 51.201 cv
95.355 49.86 96.183 48.564 97.443 47.304 cv
98.667 46.071 100.215 45.09 102.132 44.352 cv
104.004 43.641 106.443 43.263 109.449 43.263 cv
111.285 43.263 112.806 43.434 114.003 43.758 cv
115.209 44.073 116.064 44.532 116.64 45.072 cv
117.036 45.441 117.324 45.873 117.531 46.404 cv
117.729 46.935 117.846 47.583 117.846 48.357 cv
117.846 49.05 117.756 49.851 117.558 50.742 cv
118.683 50.985 li
118.62 49.833 li
109.764 50.337 li
109.836 51.498 li
110.97 51.687 li
111.051 51.237 111.096 50.796 111.096 50.382 cv
111.096 49.896 111.033 49.437 110.907 49.005 cv
110.772 48.564 110.556 48.159 110.259 47.808 cv
109.836 47.322 109.278 46.989 108.666 46.782 cv
108.054 46.584 107.379 46.503 106.641 46.494 cv
105.408 46.494 104.283 46.764 103.356 47.367 cv
102.492 47.916 101.826 48.69 101.511 49.617 cv
101.421 49.878 101.367 50.166 101.367 50.454 cv
101.358 51.03 101.592 51.597 101.952 52.011 cv
102.834 51.273 li
101.916 51.975 li
102.114 52.227 102.33 52.398 102.555 52.542 cv
102.906 52.758 103.284 52.92 103.734 53.073 cv
104.184 53.226 104.697 53.361 105.3 53.496 cv
105.291 53.496 li
107.127 53.928 108.666 54.351 109.908 54.774 cv
111.15 55.197 112.086 55.611 112.689 55.989 cv
113.949 56.772 114.588 57.618 114.849 58.599 cv
114.957 58.995 115.002 59.418 115.011 59.877 cv
115.011 60.615 114.867 61.434 114.552 62.343 cv
113.958 64.071 112.932 65.673 111.429 67.185 cv
109.935 68.679 108.189 69.813 106.146 70.587 cv
106.164 70.587 li
106.155 70.587 li
104.13 71.361 101.736 71.766 98.964 71.766 cv
96.498 71.766 94.536 71.523 93.114 71.082 cv
91.683 70.641 90.837 70.029 90.405 69.354 cv
89.73 68.337 89.388 67.158 89.388 65.718 cv
89.388 64.854 89.514 63.891 89.784 62.838 cv
88.668 62.55 li
88.74 63.702 li
88.668 62.55 li
87.552 62.262 li
87.237 63.477 87.075 64.62 87.075 65.718 cv
87.075 67.536 87.534 69.21 88.47 70.623 cv
89.307 71.901 90.693 72.756 92.439 73.296 cv
94.194 73.827 96.354 74.07 98.964 74.079 cv
101.952 74.079 104.634 73.638 106.974 72.747 cv
106.965 72.756 li
106.974 72.747 li
109.305 71.865 111.348 70.542 113.067 68.814 cv
114.786 67.104 116.028 65.187 116.739 63.09 cv
117.117 61.983 117.315 60.912 117.315 59.877 cv
117.315 59.238 117.243 58.617 117.09 58.014 cv
116.658 56.367 115.524 55.008 113.904 54.018 cv
113.067 53.505 111.996 53.037 110.655 52.587 cv
109.314 52.128 107.703 51.687 105.813 51.246 cv
105.804 51.246 li
105.084 51.084 104.535 50.913 104.175 50.769 cv
103.995 50.697 103.86 50.625 103.788 50.58 cv
103.725 50.544 li
103.725 50.535 li
103.545 50.733 li
103.752 50.571 li
103.725 50.535 li
103.545 50.733 li
103.752 50.571 li
103.743 50.553 li
103.725 50.535 li
103.68 50.454 li
103.698 50.364 li
103.689 50.391 li
103.698 50.364 li
103.833 49.995 104.076 49.662 104.616 49.302 cv
105.084 49.005 105.723 48.816 106.641 48.807 cv
107.199 48.807 107.631 48.879 107.937 48.978 cv
108.234 49.086 108.396 49.203 108.513 49.329 cv
108.576 49.41 108.639 49.509 108.693 49.68 cv
108.747 49.851 108.783 50.076 108.783 50.382 cv
108.783 50.643 108.756 50.949 108.693 51.3 cv
108.45 52.731 li
119.628 52.092 li
119.817 51.237 li
120.042 50.211 120.159 49.257 120.159 48.357 cv
120.159 47.358 120.006 46.431 119.691 45.585 cv
119.376 44.739 118.872 43.992 118.224 43.389 cv
117.288 42.507 116.064 41.904 114.597 41.517 cv
113.139 41.13 111.429 40.95 109.449 40.95 cv
106.254 40.95 103.545 41.346 101.313 42.192 cv
99.135 43.02 97.281 44.181 95.796 45.666 cv
94.347 47.133 93.294 48.726 92.709 50.454 cv
92.358 51.471 92.169 52.452 92.169 53.397 cv
92.169 54.846 92.637 56.205 93.537 57.303 cv
93.528 57.303 li
94.284 58.239 95.346 58.995 96.678 59.652 cv
98.019 60.3 99.639 60.849 101.565 61.317 cv
102.663 61.578 103.527 61.848 104.13 62.1 cv
104.427 62.226 104.661 62.343 104.814 62.442 cv
104.967 62.541 105.039 62.622 105.039 62.631 cv
105.039 62.622 li
105.039 62.631 li
105.201 62.847 105.246 62.991 105.255 63.189 cv
105.255 63.306 105.228 63.45 105.174 63.621 cv
104.994 64.143 104.598 64.656 103.824 65.178 cv
103.113 65.646 102.249 65.907 101.106 65.907 cv
100.359 65.907 99.819 65.772 99.459 65.592 cv
99.108 65.394 98.901 65.169 98.721 64.791 cv
98.631 64.593 98.559 64.269 98.559 63.81 cv
98.559 63.387 98.622 62.856 98.748 62.244 cv
99.063 60.759 li
87.759 61.452 li
87.552 62.262 li
88.668 62.55 li
0 0 0 0.2 cmyk
f
122.58 50.823 mo
131.31 50.823 li
130.842 65.196 li
139.896 50.823 li
148.05 50.823 li
131.589 73.89 li
129.708 76.518 128.106 78.3 126.774 79.218 cv
124.893 80.523 122.481 81.171 119.547 81.171 cv
118.35 81.171 116.568 81.009 114.183 80.685 cv
115.515 74.907 li
116.577 75.294 117.837 75.483 119.295 75.483 cv
120.276 75.483 121.14 75.258 121.896 74.808 cv
122.652 74.358 123.435 73.557 124.254 72.405 cv
122.58 50.823 li
0 0 0 1 cmyk
f
122.58 50.823 mo
122.58 51.984 li
130.113 51.984 li
129.546 69.417 li
140.535 51.984 li
145.8 51.984 li
130.644 73.215 li
128.817 75.798 127.242 77.499 126.117 78.264 cv
124.47 79.407 122.319 80.01 119.547 80.019 cv
118.458 80.019 116.694 79.857 114.345 79.533 cv
114.183 80.685 li
115.308 80.946 li
116.64 75.168 li
115.515 74.907 li
115.119 75.996 li
116.343 76.437 117.738 76.635 119.295 76.635 cv
120.447 76.635 121.536 76.365 122.481 75.807 cv
123.453 75.222 124.317 74.304 125.19 73.071 cv
125.433 72.738 li
123.732 50.733 li
122.58 50.823 li
122.58 51.984 li
122.58 50.823 li
121.428 50.913 li
123.093 72.495 li
124.254 72.405 li
123.309 71.739 li
122.553 72.819 121.842 73.503 121.302 73.809 cv
120.735 74.151 120.096 74.322 119.295 74.322 cv
117.936 74.322 116.802 74.142 115.902 73.818 cv
114.678 73.377 li
112.77 81.657 li
114.03 81.828 li
116.442 82.152 118.251 82.323 119.547 82.332 cv
122.652 82.332 125.316 81.63 127.431 80.172 cv
128.97 79.101 130.608 77.247 132.525 74.556 cv
150.3 49.671 li
139.257 49.671 li
132.138 60.975 li
132.507 49.671 li
121.329 49.671 li
121.428 50.913 li
122.58 50.823 li
0 0 0 0.2 cmyk
f
151.605 50.823 mo
159.327 50.823 li
158.247 53.973 li
159.813 52.659 161.253 51.723 162.576 51.174 cv
163.899 50.616 165.366 50.337 166.968 50.337 cv
168.687 50.337 169.947 50.643 170.748 51.255 cv
171.54 51.858 172.053 52.767 172.278 53.973 cv
174.06 52.569 175.572 51.606 176.814 51.102 cv
178.056 50.589 179.46 50.337 181.035 50.337 cv
183.348 50.337 184.914 51.021 185.742 52.398 cv
186.57 53.775 186.48 55.926 185.481 58.851 cv
180.837 72.414 li
172.548 72.414 li
176.76 60.111 li
177.093 59.139 177.147 58.41 176.94 57.942 cv
176.634 57.195 176.076 56.826 175.248 56.826 cv
174.276 56.826 173.376 57.177 172.539 57.879 cv
171.702 58.581 171.018 59.715 170.487 61.272 cv
166.671 72.414 li
158.382 72.414 li
162.45 60.525 li
162.774 59.571 162.945 58.923 162.954 58.59 cv
162.954 58.05 162.801 57.609 162.477 57.276 cv
162.162 56.943 161.703 56.781 161.118 56.781 cv
160.173 56.781 159.264 57.141 158.409 57.861 cv
157.554 58.572 156.843 59.751 156.276 61.398 cv
152.505 72.414 li
144.216 72.414 li
151.605 50.823 li
0 0 0 1 cmyk
f
151.605 50.823 mo
151.605 51.984 li
157.707 51.984 li
155.808 57.537 li
158.994 54.864 li
160.497 53.595 161.856 52.731 163.026 52.236 cv
164.196 51.75 165.501 51.498 166.968 51.489 cv
167.76 51.489 168.417 51.561 168.93 51.687 cv
169.443 51.813 169.803 51.984 170.037 52.173 cv
170.046 52.173 li
170.577 52.587 170.946 53.181 171.135 54.189 cv
171.486 56.07 li
172.989 54.882 li
174.717 53.514 176.166 52.605 177.246 52.173 cv
178.335 51.723 179.586 51.489 181.035 51.489 cv
182.07 51.489 182.889 51.651 183.483 51.912 cv
184.077 52.173 184.455 52.515 184.752 52.992 cv
184.743 52.983 li
184.752 53.001 li
184.995 53.397 185.148 53.955 185.148 54.747 cv
185.148 55.692 184.914 56.952 184.392 58.482 cv
180.009 71.253 li
174.168 71.253 li
177.849 60.489 li
178.083 59.814 178.218 59.211 178.218 58.608 cv
178.218 58.23 178.155 57.834 177.993 57.465 cv
176.94 57.942 li
178.011 57.51 li
177.795 56.97 177.435 56.466 176.931 56.133 cv
176.427 55.8 175.833 55.665 175.248 55.665 cv
173.997 55.656 172.791 56.142 171.792 56.997 cv
170.73 57.897 169.974 59.22 169.389 60.894 cv
165.843 71.253 li
160.002 71.253 li
163.548 60.894 li
163.719 60.399 163.845 59.976 163.944 59.616 cv
164.034 59.247 164.097 58.95 164.106 58.617 cv
164.106 58.608 li
164.106 58.545 li
164.115 57.798 163.854 57.024 163.314 56.475 cv
163.026 56.178 162.675 55.953 162.297 55.818 cv
161.919 55.683 161.523 55.629 161.118 55.62 cv
159.876 55.62 158.679 56.115 157.662 56.97 cv
156.573 57.897 155.79 59.265 155.187 61.02 cv
151.677 71.253 li
145.836 71.253 li
152.703 51.201 li
151.605 50.823 li
151.605 51.984 li
151.605 50.823 li
150.516 50.454 li
142.596 73.566 li
153.333 73.566 li
157.374 61.767 li
157.887 60.246 158.526 59.256 159.147 58.743 cv
159.849 58.167 160.47 57.942 161.118 57.933 cv
161.307 57.933 161.424 57.96 161.505 57.987 cv
161.649 58.086 li
161.739 58.185 161.784 58.248 161.793 58.545 cv
161.793 58.572 li
161.793 58.563 li
161.793 58.572 161.775 58.761 161.703 59.04 cv
161.631 59.319 161.514 59.688 161.361 60.147 cv
156.762 73.566 li
167.499 73.566 li
171.585 61.65 li
172.071 60.21 172.683 59.265 173.286 58.761 cv
173.277 58.77 li
173.286 58.761 li
173.961 58.203 174.564 57.987 175.248 57.978 cv
175.491 57.978 175.59 58.023 175.653 58.068 cv
175.707 58.104 175.779 58.167 175.86 58.365 cv
175.869 58.392 li
175.878 58.419 li
175.887 58.419 175.905 58.473 175.905 58.608 cv
175.905 58.833 175.842 59.22 175.662 59.742 cv
170.928 73.566 li
181.665 73.566 li
186.579 59.229 li
187.146 57.546 187.461 56.07 187.461 54.747 cv
187.461 53.658 187.245 52.65 186.732 51.804 cv
186.741 51.822 li
186.732 51.804 li
186.201 50.904 185.382 50.22 184.41 49.797 cv
183.429 49.365 182.304 49.185 181.035 49.185 cv
179.334 49.176 177.777 49.455 176.373 50.031 cv
174.969 50.607 173.394 51.624 171.558 53.073 cv
172.278 53.973 li
173.412 53.766 li
173.16 52.353 172.503 51.138 171.45 50.337 cv
170.892 49.905 170.217 49.626 169.479 49.446 cv
168.732 49.257 167.895 49.185 166.968 49.185 cv
165.231 49.176 163.611 49.482 162.135 50.103 cv
160.659 50.724 159.129 51.723 157.509 53.091 cv
158.247 53.973 li
159.345 54.351 li
160.947 49.671 li
150.777 49.671 li
150.516 50.454 li
151.605 50.823 li
0 0 0 0.2 cmyk
f
192.078 50.823 mo
199.8 50.823 li
198.72 53.973 li
200.286 52.659 201.726 51.723 203.049 51.174 cv
204.372 50.616 205.83 50.337 207.432 50.337 cv
209.16 50.337 210.42 50.643 211.212 51.255 cv
212.004 51.858 212.517 52.767 212.742 53.973 cv
214.524 52.569 216.036 51.606 217.278 51.102 cv
218.52 50.589 219.933 50.337 221.499 50.337 cv
223.812 50.337 225.387 51.021 226.215 52.398 cv
227.043 53.775 226.953 55.926 225.954 58.851 cv
221.31 72.414 li
213.012 72.414 li
217.224 60.111 li
217.557 59.139 217.62 58.41 217.404 57.942 cv
217.107 57.195 216.54 56.826 215.721 56.826 cv
214.749 56.826 213.84 57.177 213.012 57.879 cv
212.175 58.581 211.491 59.715 210.96 61.272 cv
207.144 72.414 li
198.846 72.414 li
202.923 60.525 li
203.247 59.571 203.409 58.923 203.418 58.59 cv
203.427 58.05 203.274 57.609 202.95 57.276 cv
202.626 56.943 202.176 56.781 201.591 56.781 cv
200.637 56.781 199.737 57.141 198.873 57.861 cv
198.018 58.572 197.307 59.751 196.749 61.398 cv
192.978 72.414 li
184.68 72.414 li
192.078 50.823 li
0 0 0 1 cmyk
f
192.078 50.823 mo
192.078 51.984 li
198.18 51.984 li
196.281 57.537 li
199.467 54.864 li
200.961 53.595 202.32 52.731 203.499 52.236 cv
204.669 51.75 205.965 51.498 207.432 51.489 cv
208.233 51.489 208.89 51.561 209.403 51.687 cv
209.916 51.813 210.276 51.984 210.51 52.173 cv
211.041 52.587 211.41 53.181 211.608 54.189 cv
211.959 56.07 li
213.462 54.882 li
215.19 53.514 216.639 52.605 217.719 52.173 cv
218.799 51.723 220.05 51.489 221.499 51.489 cv
222.543 51.489 223.353 51.651 223.947 51.912 cv
224.541 52.173 224.928 52.515 225.225 52.992 cv
225.216 52.983 li
225.225 53.001 li
225.459 53.397 225.621 53.955 225.621 54.747 cv
225.621 55.692 225.378 56.952 224.856 58.482 cv
220.482 71.253 li
214.632 71.253 li
218.322 60.489 li
218.547 59.814 218.682 59.211 218.691 58.617 cv
218.691 58.23 218.628 57.834 218.457 57.465 cv
217.404 57.942 li
218.475 57.51 li
218.268 56.97 217.899 56.466 217.395 56.133 cv
216.9 55.8 216.306 55.665 215.721 55.665 cv
214.461 55.656 213.264 56.142 212.265 56.997 cv
212.274 56.988 li
212.265 56.997 li
211.203 57.897 210.438 59.22 209.862 60.903 cv
206.316 71.253 li
200.466 71.253 li
204.021 60.885 li
204.012 60.894 li
204.183 60.399 204.318 59.976 204.408 59.616 cv
204.498 59.247 204.561 58.95 204.57 58.617 cv
204.579 58.608 li
204.579 58.545 li
204.588 57.798 204.318 57.024 203.778 56.475 cv
203.787 56.475 li
203.778 56.475 li
203.499 56.178 203.148 55.953 202.77 55.818 cv
202.392 55.683 201.996 55.629 201.591 55.62 cv
200.34 55.62 199.143 56.115 198.135 56.97 cv
198.126 56.97 li
198.135 56.97 li
197.037 57.897 196.254 59.265 195.651 61.02 cv
192.15 71.253 li
186.3 71.253 li
193.167 51.201 li
192.078 50.823 li
192.078 51.984 li
192.078 50.823 li
190.98 50.454 li
183.06 73.566 li
193.797 73.566 li
197.838 61.767 li
198.36 60.246 198.999 59.256 199.62 58.743 cv
200.322 58.167 200.934 57.942 201.591 57.933 cv
201.771 57.933 201.897 57.96 201.969 57.987 cv
202.122 58.086 li
202.113 58.077 li
202.122 58.086 li
202.203 58.185 202.257 58.248 202.266 58.545 cv
202.266 58.572 li
202.266 58.563 li
202.266 58.563 202.239 58.761 202.167 59.04 cv
202.095 59.319 201.978 59.688 201.825 60.147 cv
201.825 60.165 li
197.226 73.566 li
207.963 73.566 li
212.049 61.65 li
212.535 60.21 213.147 59.265 213.759 58.761 cv
213.75 58.77 li
213.75 58.761 li
214.425 58.203 215.037 57.987 215.721 57.978 cv
215.964 57.978 216.063 58.023 216.117 58.068 cv
216.18 58.104 216.243 58.167 216.333 58.365 cv
216.342 58.392 li
216.351 58.419 li
216.351 58.419 216.378 58.473 216.378 58.617 cv
216.378 58.833 216.315 59.22 216.135 59.742 cv
211.392 73.566 li
222.129 73.566 li
227.043 59.229 li
227.619 57.546 227.925 56.07 227.934 54.747 cv
227.934 53.658 227.709 52.65 227.205 51.804 cv
227.205 51.813 li
227.205 51.804 li
226.665 50.904 225.855 50.22 224.874 49.797 cv
223.893 49.365 222.768 49.185 221.499 49.185 cv
219.807 49.176 218.241 49.455 216.846 50.031 cv
215.433 50.607 213.858 51.624 212.022 53.073 cv
212.742 53.973 li
213.876 53.766 li
213.624 52.353 212.976 51.138 211.914 50.337 cv
211.356 49.905 210.69 49.626 209.943 49.446 cv
209.196 49.257 208.368 49.185 207.432 49.185 cv
205.704 49.176 204.075 49.482 202.599 50.103 cv
201.123 50.724 199.602 51.723 197.973 53.091 cv
198.72 53.973 li
199.809 54.351 li
201.411 49.671 li
191.25 49.671 li
190.98 50.454 li
192.078 50.823 li
0 0 0 0.2 cmyk
f
246.141 59.706 mo
246.528 58.113 246.492 56.961 246.033 56.277 cv
245.574 55.584 244.773 55.233 243.63 55.233 cv
242.316 55.233 241.092 55.755 239.949 56.799 cv
239.22 57.447 238.572 58.419 237.996 59.706 cv
246.141 59.706 li
253.206 63.675 mo
236.619 63.675 li
236.313 64.998 236.331 65.988 236.682 66.636 cv
237.159 67.572 238.041 68.04 239.328 68.04 cv
240.138 68.04 240.984 67.833 241.857 67.428 cv
242.388 67.176 243.027 66.717 243.765 66.069 cv
251.658 66.825 li
249.669 68.994 247.635 70.542 245.547 71.487 cv
243.459 72.423 240.777 72.9 237.483 72.9 cv
234.621 72.9 232.515 72.495 231.147 71.685 cv
229.788 70.884 228.87 69.606 228.393 67.851 cv
227.916 66.096 228.078 64.026 228.897 61.659 cv
230.049 58.284 232.065 55.557 234.936 53.469 cv
237.816 51.381 241.155 50.337 244.962 50.337 cv
248.049 50.337 250.335 50.805 251.802 51.741 cv
253.269 52.677 254.169 54.027 254.493 55.8 cv
254.826 57.582 254.502 59.886 253.521 62.739 cv
253.206 63.675 li
0 0 0 1 cmyk
f
246.141 59.706 mo
247.266 59.976 li
247.464 59.184 247.563 58.473 247.563 57.807 cv
247.563 57.015 247.419 56.268 246.996 55.629 cv
246.996 55.638 li
246.996 55.629 li
246.645 55.098 246.132 54.684 245.547 54.432 cv
244.962 54.18 244.314 54.081 243.63 54.081 cv
242.001 54.072 240.462 54.756 239.166 55.944 cv
239.175 55.944 li
238.284 56.745 237.564 57.852 236.943 59.229 cv
236.205 60.867 li
247.059 60.867 li
247.266 59.976 li
246.141 59.706 li
246.141 58.554 li
237.996 58.554 li
237.996 59.706 li
239.049 60.183 li
239.58 58.986 240.165 58.158 240.723 57.663 cv
240.723 57.654 li
241.713 56.763 242.631 56.403 243.63 56.394 cv
244.089 56.394 244.413 56.466 244.629 56.556 cv
244.845 56.655 244.962 56.754 245.07 56.916 cv
245.061 56.907 li
245.07 56.916 li
245.151 57.033 245.25 57.303 245.25 57.807 cv
245.25 58.221 245.178 58.77 245.025 59.436 cv
246.141 59.706 li
246.141 58.554 li
246.141 59.706 li
253.206 63.675 mo
253.206 62.514 li
235.701 62.514 li
235.494 63.414 li
235.332 64.098 235.251 64.728 235.251 65.313 cv
235.251 65.979 235.359 66.609 235.656 67.185 cv
236.682 66.636 li
235.647 67.167 li
235.98 67.824 236.511 68.373 237.159 68.715 cv
237.807 69.057 238.545 69.201 239.328 69.201 cv
240.336 69.201 241.344 68.94 242.343 68.481 cv
242.352 68.472 li
243.045 68.139 243.738 67.626 244.53 66.933 cv
243.765 66.069 li
243.657 67.221 li
251.55 67.977 li
251.658 66.825 li
250.803 66.042 li
248.895 68.121 246.978 69.57 245.07 70.434 cv
243.198 71.28 240.669 71.739 237.483 71.739 cv
234.729 71.748 232.785 71.325 231.741 70.695 cv
230.652 70.038 229.932 69.075 229.509 67.545 cv
229.356 67.005 229.284 66.411 229.284 65.772 cv
229.284 64.683 229.509 63.432 229.986 62.037 cv
229.986 62.028 li
231.075 58.869 232.929 56.367 235.62 54.405 cv
238.302 52.461 241.362 51.498 244.962 51.489 cv
247.941 51.489 250.029 51.966 251.181 52.713 cv
251.793 53.109 252.252 53.559 252.612 54.099 cv
252.972 54.63 253.215 55.26 253.359 56.016 cv
253.422 56.385 253.458 56.79 253.458 57.249 cv
253.467 58.59 253.134 60.309 252.432 62.361 cv
252.108 63.297 li
253.206 63.675 li
253.206 62.514 li
253.206 63.675 li
254.295 64.044 li
254.619 63.108 li
255.375 60.903 255.771 58.959 255.771 57.249 cv
255.771 56.673 255.726 56.115 255.636 55.593 cv
255.447 54.576 255.087 53.64 254.538 52.821 cv
253.998 52.002 253.278 51.309 252.423 50.769 cv
250.632 49.644 248.166 49.185 244.962 49.185 cv
240.948 49.176 237.33 50.301 234.261 52.533 cv
231.201 54.747 229.023 57.699 227.799 61.281 cv
227.259 62.874 226.971 64.368 226.971 65.772 cv
226.971 66.6 227.07 67.392 227.277 68.148 cv
227.799 70.128 228.915 71.721 230.562 72.684 cv
232.236 73.665 234.513 74.043 237.483 74.052 cv
240.885 74.052 243.729 73.575 246.024 72.54 cv
248.283 71.514 250.443 69.858 252.513 67.599 cv
254.079 65.889 li
243.378 64.872 li
243 65.205 li
242.307 65.808 241.74 66.204 241.353 66.393 cv
241.857 67.428 li
241.362 66.384 li
240.615 66.735 239.949 66.888 239.328 66.888 cv
238.824 66.888 238.473 66.789 238.239 66.672 cv
238.005 66.537 237.852 66.393 237.708 66.114 cv
237.699 66.105 li
237.699 66.096 li
237.636 65.97 237.555 65.727 237.555 65.313 cv
237.555 64.962 237.618 64.494 237.744 63.927 cv
236.619 63.675 li
236.619 64.827 li
254.034 64.827 li
254.295 64.044 li
253.206 63.675 li
0 0 0 0.2 cmyk
f
274.194 42.615 mo
271.386 50.823 li
275.94 50.823 li
273.861 56.88 li
269.307 56.88 li
266.688 64.53 li
266.373 65.448 266.256 66.06 266.328 66.357 cv
266.445 66.816 266.841 67.041 267.516 67.041 cv
268.128 67.041 269.037 66.87 270.252 66.519 cv
268.911 72.225 li
266.715 72.675 264.726 72.9 262.953 72.9 cv
260.892 72.9 259.461 72.63 258.669 72.108 cv
257.877 71.577 257.427 70.776 257.328 69.705 cv
257.229 68.625 257.589 66.879 258.417 64.476 cv
261.018 56.88 li
257.967 56.88 li
260.037 50.823 li
263.088 50.823 li
264.447 46.863 li
274.194 42.615 li
0 0 0 1 cmyk
f
274.194 42.615 mo
273.105 42.237 li
269.766 51.984 li
274.32 51.984 li
273.033 55.728 li
268.479 55.728 li
265.599 64.152 li
265.464 64.557 265.356 64.908 265.275 65.232 cv
265.203 65.556 265.149 65.835 265.149 66.15 cv
265.149 66.303 265.158 66.456 265.203 66.636 cv
265.203 66.627 li
265.203 66.636 li
265.266 66.879 265.374 67.122 265.536 67.347 cv
265.779 67.671 266.13 67.905 266.472 68.031 cv
266.814 68.157 267.165 68.202 267.516 68.202 cv
268.335 68.193 269.307 67.995 270.576 67.626 cv
270.252 66.519 li
269.127 66.249 li
267.786 71.964 li
268.911 72.225 li
268.677 71.091 li
266.544 71.532 264.627 71.739 262.953 71.739 cv
261.972 71.739 261.162 71.676 260.541 71.559 cv
259.929 71.451 259.515 71.28 259.308 71.145 cv
259.056 70.974 258.885 70.785 258.75 70.542 cv
258.615 70.308 258.516 70.002 258.48 69.597 cv
258.48 69.606 li
258.48 69.597 li
258.471 69.525 258.471 69.435 258.471 69.336 cv
258.462 68.499 258.786 66.933 259.506 64.845 cv
262.638 55.728 li
259.587 55.728 li
260.865 51.984 li
263.916 51.984 li
265.374 47.718 li
274.662 43.677 li
274.194 42.615 li
273.105 42.237 li
274.194 42.615 li
273.735 41.553 li
263.52 46.008 li
262.26 49.671 li
259.218 49.671 li
256.347 58.041 li
259.398 58.041 li
257.319 64.098 li
256.572 66.312 256.158 67.995 256.158 69.336 cv
256.158 69.498 256.158 69.651 256.176 69.804 cv
256.176 69.786 li
256.176 69.804 li
256.239 70.479 256.41 71.109 256.725 71.676 cv
257.04 72.234 257.49 72.711 258.03 73.071 cv
258.624 73.458 259.317 73.683 260.127 73.836 cv
260.937 73.989 261.873 74.052 262.953 74.052 cv
264.825 74.052 266.886 73.818 269.145 73.359 cv
269.865 73.215 li
271.836 64.854 li
269.937 65.403 li
268.776 65.745 267.912 65.898 267.516 65.889 cv
267.408 65.889 267.336 65.88 267.3 65.871 cv
267.273 65.862 li
267.147 66.141 li
267.381 65.952 li
267.273 65.862 li
267.147 66.141 li
267.381 65.952 li
267.138 66.159 li
267.453 66.078 li
267.381 65.952 li
267.138 66.159 li
267.453 66.078 li
267.453 66.069 li
266.976 66.195 li
267.462 66.141 li
267.453 66.069 li
266.976 66.195 li
267.462 66.141 li
267.255 66.159 li
267.462 66.15 li
267.462 66.141 li
267.255 66.159 li
267.462 66.15 li
267.462 66.132 267.48 65.979 267.525 65.763 cv
267.579 65.538 267.669 65.25 267.786 64.899 cv
267.759 64.989 li
270.135 58.041 li
274.689 58.041 li
277.551 49.671 li
273.006 49.671 li
276.138 40.509 li
273.735 41.553 li
274.194 42.615 li
0 0 0 0.2 cmyk
f
279.963 50.823 mo
287.703 50.823 li
286.497 54.36 li
287.766 52.83 288.891 51.777 289.881 51.201 cv
290.871 50.625 291.951 50.337 293.112 50.337 cv
294.336 50.337 295.542 50.715 296.73 51.48 cv
292.149 57.375 li
291.312 56.961 290.61 56.763 290.043 56.763 cv
288.954 56.763 287.964 57.204 287.064 58.104 cv
285.777 59.364 284.544 61.722 283.356 65.178 cv
280.881 72.414 li
272.565 72.414 li
279.963 50.823 li
0 0 0 1 cmyk
f
279.963 50.823 mo
279.963 51.984 li
286.083 51.984 li
285.399 53.982 li
287.379 55.098 li
288.603 53.622 289.665 52.659 290.466 52.2 cv
291.285 51.723 292.14 51.498 293.112 51.489 cv
294.093 51.498 295.065 51.786 296.109 52.452 cv
296.73 51.48 li
295.812 50.769 li
291.24 56.664 li
292.149 57.375 li
292.653 56.331 li
291.726 55.881 290.889 55.611 290.043 55.602 cv
289.341 55.602 288.648 55.755 288.009 56.043 cv
287.37 56.331 286.776 56.754 286.245 57.285 cv
286.254 57.276 li
284.733 58.788 283.491 61.263 282.267 64.8 cv
280.053 71.253 li
274.185 71.253 li
281.052 51.201 li
279.963 50.823 li
279.963 51.984 li
279.963 50.823 li
278.865 50.454 li
270.945 73.566 li
281.709 73.566 li
284.454 65.547 li
285.597 62.172 286.821 59.94 287.874 58.923 cv
288.243 58.554 288.603 58.311 288.954 58.149 cv
289.314 57.987 289.656 57.915 290.043 57.915 cv
290.331 57.906 290.898 58.041 291.645 58.41 cv
292.482 58.824 li
298.422 51.183 li
297.351 50.499 li
296.01 49.644 294.579 49.176 293.112 49.185 cv
291.762 49.176 290.457 49.527 289.305 50.202 cv
288.117 50.895 286.929 52.029 285.606 53.622 cv
286.497 54.36 li
287.586 54.738 li
289.323 49.671 li
279.135 49.671 li
278.865 50.454 li
279.963 50.823 li
0 0 0 0.2 cmyk
f
300.969 50.823 mo
309.249 50.823 li
301.851 72.414 li
293.58 72.414 li
300.969 50.823 li
303.786 42.615 mo
312.057 42.615 li
310.131 48.24 li
301.86 48.24 li
303.786 42.615 li
0 0 0 1 cmyk
f
300.969 50.823 mo
300.969 51.984 li
307.629 51.984 li
301.032 71.253 li
295.2 71.253 li
302.067 51.201 li
300.969 50.823 li
300.969 51.984 li
300.969 50.823 li
299.88 50.454 li
291.96 73.566 li
302.679 73.566 li
310.869 49.671 li
300.15 49.671 li
299.88 50.454 li
300.969 50.823 li
303.786 42.615 mo
303.786 43.767 li
310.437 43.767 li
309.303 47.088 li
303.48 47.088 li
304.884 42.984 li
303.786 42.615 li
303.786 43.767 li
303.786 42.615 li
302.688 42.237 li
300.24 49.401 li
310.959 49.401 li
313.677 41.454 li
302.958 41.454 li
302.688 42.237 li
303.786 42.615 li
0 0 0 0.2 cmyk
f
326.133 63.954 mo
333.693 64.845 li
332.694 66.492 331.497 67.905 330.102 69.111 cv
328.698 70.308 327.114 71.235 325.35 71.901 cv
323.586 72.567 321.516 72.9 319.149 72.9 cv
316.854 72.9 315.018 72.684 313.641 72.261 cv
312.264 71.829 311.193 71.145 310.419 70.191 cv
309.654 69.237 309.168 68.112 308.988 66.825 cv
308.808 65.538 309.078 63.837 309.807 61.704 cv
310.572 59.49 311.58 57.636 312.84 56.169 cv
313.767 55.08 314.865 54.108 316.116 53.253 cv
317.376 52.389 318.582 51.75 319.743 51.336 cv
321.579 50.67 323.766 50.337 326.286 50.337 cv
329.805 50.337 332.28 50.967 333.693 52.227 cv
335.115 53.487 335.781 55.332 335.691 57.753 cv
327.555 58.788 li
327.627 57.87 327.42 57.177 326.934 56.709 cv
326.457 56.241 325.674 56.007 324.585 56.007 cv
323.217 56.007 321.939 56.502 320.76 57.483 cv
319.581 58.455 318.645 59.949 317.961 61.929 cv
317.358 63.702 317.313 65.052 317.844 65.97 cv
318.366 66.888 319.284 67.347 320.58 67.347 cv
321.669 67.347 322.668 67.068 323.595 66.519 cv
324.531 65.961 325.368 65.106 326.133 63.954 cv
0 0 0 1 cmyk
f
326.133 63.954 mo
325.998 65.106 li
333.558 65.997 li
333.693 64.845 li
332.703 64.251 li
331.767 65.79 330.651 67.113 329.346 68.229 cv
328.05 69.336 326.592 70.2 324.945 70.821 cv
323.343 71.424 321.408 71.739 319.149 71.739 cv
316.926 71.748 315.189 71.532 313.983 71.154 cv
312.777 70.776 311.931 70.209 311.319 69.462 cv
311.31 69.453 li
311.319 69.462 li
310.68 68.67 310.293 67.761 310.131 66.663 cv
310.131 66.645 li
310.131 66.663 li
310.104 66.465 310.095 66.249 310.095 66.006 cv
310.086 65.034 310.347 63.702 310.905 62.082 cv
311.625 59.976 312.57 58.257 313.722 56.916 cv
314.577 55.917 315.594 55.008 316.773 54.207 cv
316.8 54.189 li
316.773 54.207 li
317.961 53.388 319.086 52.794 320.139 52.416 cv
321.813 51.813 323.865 51.489 326.286 51.489 cv
327.978 51.489 329.382 51.651 330.489 51.93 cv
331.605 52.209 332.397 52.623 332.928 53.091 cv
332.901 53.073 li
332.928 53.091 li
333.459 53.568 333.846 54.126 334.125 54.819 cv
334.395 55.512 334.548 56.349 334.548 57.348 cv
334.548 57.465 334.539 57.591 334.539 57.717 cv
335.691 57.753 li
335.547 56.61 li
327.411 57.645 li
327.555 58.788 li
328.707 58.878 li
328.716 58.734 328.725 58.59 328.725 58.455 cv
328.725 57.969 328.662 57.501 328.5 57.06 cv
328.338 56.619 328.086 56.205 327.744 55.881 cv
327.744 55.872 li
327.339 55.494 326.844 55.233 326.322 55.071 cv
325.782 54.918 325.215 54.855 324.585 54.855 cv
322.938 54.846 321.363 55.467 320.022 56.592 cv
318.627 57.753 317.592 59.436 316.872 61.56 cv
316.521 62.595 316.323 63.531 316.314 64.413 cv
316.314 65.178 316.476 65.907 316.836 66.546 cv
317.196 67.185 317.745 67.707 318.402 68.04 cv
319.059 68.364 319.797 68.508 320.58 68.508 cv
321.858 68.508 323.091 68.166 324.189 67.509 cv
325.305 66.843 326.268 65.853 327.096 64.593 cv
326.133 63.954 li
325.998 65.106 li
326.133 63.954 li
325.17 63.315 li
324.477 64.359 323.748 65.079 323.001 65.529 cv
322.245 65.979 321.471 66.186 320.58 66.195 cv
320.067 66.195 319.698 66.105 319.437 65.97 cv
319.185 65.835 319.005 65.673 318.843 65.394 cv
318.717 65.178 318.636 64.872 318.627 64.413 cv
318.627 63.891 318.762 63.171 319.059 62.307 cv
319.068 62.28 li
319.059 62.307 li
319.689 60.453 320.526 59.166 321.498 58.374 cv
322.515 57.528 323.496 57.168 324.585 57.168 cv
325.044 57.159 325.404 57.213 325.656 57.294 cv
325.908 57.366 326.052 57.456 326.133 57.537 cv
326.214 57.618 326.268 57.708 326.322 57.843 cv
326.376 57.987 326.412 58.185 326.412 58.455 cv
326.412 58.527 326.412 58.617 326.403 58.707 cv
326.295 60.12 li
336.816 58.779 li
336.852 57.798 li
336.852 57.645 336.861 57.492 336.861 57.348 cv
336.861 56.115 336.672 54.99 336.276 53.973 cv
335.88 52.965 335.268 52.074 334.458 51.363 cv
333.576 50.571 332.424 50.04 331.065 49.689 cv
329.706 49.338 328.113 49.185 326.286 49.185 cv
323.658 49.185 321.354 49.527 319.347 50.247 cv
318.078 50.706 316.791 51.39 315.468 52.299 cv
315.45 52.308 li
315.468 52.299 li
314.136 53.208 312.957 54.252 311.967 55.413 cv
310.59 57.024 309.51 59.004 308.709 61.335 cv
308.106 63.108 307.782 64.647 307.782 66.006 cv
307.782 66.348 307.8 66.672 307.845 66.987 cv
307.845 67.005 li
307.845 66.987 li
308.052 68.463 308.619 69.795 309.519 70.911 cv
309.51 70.902 li
309.519 70.911 li
310.455 72.072 311.751 72.882 313.299 73.368 cv
314.856 73.845 316.782 74.052 319.149 74.052 cv
321.624 74.052 323.829 73.71 325.755 72.981 cv
327.645 72.279 329.346 71.271 330.849 69.984 cv
332.343 68.706 333.621 67.185 334.683 65.448 cv
335.61 63.909 li
325.566 62.721 li
325.17 63.315 li
326.133 63.954 li
0 0 0 0.2 cmyk
f
354.987 49.365 mo
349.407 65.646 li
351.666 65.646 li
353.583 65.646 355.032 65.43 355.986 64.998 cv
356.949 64.575 357.84 63.828 358.668 62.766 cv
359.487 61.704 360.315 59.976 361.125 57.591 cv
362.205 54.441 362.43 52.272 361.8 51.111 cv
361.17 49.941 359.667 49.365 357.282 49.365 cv
354.987 49.365 li
348.084 42.615 mo
361.764 42.615 li
364.464 42.615 366.516 42.975 367.92 43.713 cv
369.333 44.442 370.35 45.495 370.962 46.863 cv
371.574 48.231 371.817 49.824 371.682 51.642 cv
371.547 53.451 371.133 55.377 370.44 57.411 cv
369.342 60.597 368.136 63.063 366.813 64.818 cv
365.49 66.573 363.978 68.04 362.286 69.228 cv
360.594 70.416 358.938 71.208 357.327 71.595 cv
355.122 72.144 353.196 72.414 351.558 72.414 cv
337.878 72.414 li
348.084 42.615 li
0 0 0 1 cmyk
f
370.746 62.55 mo
379.701 62.001 li
379.404 63.423 379.413 64.512 379.746 65.259 cv
380.277 66.465 381.429 67.068 383.193 67.068 cv
384.507 67.068 385.623 66.753 386.541 66.141 cv
387.468 65.52 388.071 64.809 388.35 63.999 cv
388.611 63.225 388.512 62.532 388.044 61.92 cv
387.567 61.308 386.199 60.741 383.913 60.192 cv
380.187 59.283 377.721 58.086 376.515 56.574 cv
375.3 55.071 375.084 53.154 375.885 50.823 cv
376.407 49.293 377.352 47.844 378.702 46.485 cv
380.061 45.126 381.762 44.055 383.805 43.272 cv
385.857 42.498 388.431 42.102 391.536 42.102 cv
395.343 42.102 397.998 42.813 399.519 44.226 cv
401.031 45.648 401.445 47.898 400.77 50.985 cv
391.914 51.498 li
392.148 50.157 391.995 49.176 391.464 48.573 cv
390.933 47.961 390.024 47.655 388.719 47.655 cv
387.648 47.655 386.766 47.88 386.064 48.339 cv
385.371 48.789 384.912 49.338 384.687 49.995 cv
384.525 50.463 384.606 50.895 384.921 51.273 cv
385.218 51.669 386.127 52.029 387.63 52.371 cv
391.356 53.235 393.939 54.117 395.379 54.999 cv
396.819 55.89 397.71 56.988 398.052 58.302 cv
398.394 59.616 398.286 61.092 397.728 62.712 cv
397.071 64.629 395.946 66.384 394.335 68.004 cv
392.724 69.615 390.825 70.839 388.647 71.667 cv
386.46 72.504 383.931 72.918 381.042 72.918 cv
375.975 72.918 372.798 71.946 371.52 69.993 cv
370.233 68.04 369.981 65.556 370.746 62.55 cv
f
88.686 62.541 mo
97.632 61.992 li
97.335 63.414 97.353 64.494 97.677 65.241 cv
98.217 66.447 99.369 67.05 101.124 67.05 cv
102.438 67.05 103.563 66.744 104.481 66.123 cv
105.408 65.511 106.002 64.791 106.281 63.981 cv
106.551 63.207 106.443 62.523 105.975 61.911 cv
105.507 61.299 104.13 60.723 101.853 60.183 cv
98.127 59.274 95.661 58.068 94.455 56.565 cv
93.231 55.062 93.024 53.145 93.825 50.814 cv
94.347 49.284 95.283 47.835 96.642 46.476 cv
97.992 45.108 99.693 44.037 101.745 43.263 cv
103.788 42.48 106.371 42.093 109.467 42.093 cv
113.274 42.093 115.938 42.804 117.45 44.217 cv
118.971 45.63 119.385 47.88 118.71 50.976 cv
109.854 51.48 li
110.079 50.139 109.935 49.167 109.404 48.555 cv
108.873 47.943 107.955 47.637 106.659 47.637 cv
105.588 47.637 104.697 47.871 104.004 48.321 cv
103.311 48.771 102.843 49.329 102.627 49.977 cv
102.465 50.454 102.537 50.877 102.852 51.255 cv
103.158 51.651 104.058 52.02 105.57 52.353 cv
109.296 53.226 111.879 54.099 113.319 54.99 cv
114.75 55.872 115.641 56.979 115.983 58.293 cv
116.325 59.607 116.226 61.074 115.668 62.703 cv
115.011 64.611 113.877 66.375 112.266 67.986 cv
110.664 69.597 108.765 70.821 106.578 71.658 cv
104.4 72.486 101.862 72.909 98.982 72.909 cv
93.915 72.909 90.738 71.928 89.451 69.975 cv
88.173 68.031 87.912 65.547 88.686 62.541 cv
f
122.598 50.814 mo
131.328 50.814 li
130.86 65.178 li
139.914 50.814 li
148.068 50.814 li
131.607 73.872 li
129.726 76.509 128.124 78.282 126.792 79.209 cv
124.911 80.505 122.499 81.162 119.565 81.162 cv
118.368 81.162 116.586 80.991 114.201 80.667 cv
115.533 74.898 li
116.595 75.276 117.855 75.465 119.313 75.465 cv
120.294 75.465 121.158 75.24 121.914 74.79 cv
122.67 74.349 123.453 73.548 124.272 72.396 cv
122.598 50.814 li
f
151.623 50.814 mo
159.345 50.814 li
158.274 53.964 li
159.831 52.65 161.271 51.714 162.603 51.156 cv
163.926 50.598 165.384 50.319 166.986 50.319 cv
168.705 50.319 169.965 50.625 170.766 51.237 cv
171.558 51.849 172.071 52.758 172.296 53.964 cv
174.078 52.551 175.59 51.597 176.832 51.084 cv
178.074 50.58 179.478 50.319 181.053 50.319 cv
183.366 50.319 184.932 51.012 185.76 52.389 cv
186.588 53.757 186.507 55.917 185.499 58.842 cv
180.855 72.396 li
172.566 72.396 li
176.778 60.102 li
177.111 59.121 177.174 58.401 176.958 57.924 cv
176.652 57.177 176.094 56.808 175.275 56.808 cv
174.303 56.808 173.394 57.159 172.557 57.861 cv
171.72 58.572 171.036 59.697 170.505 61.263 cv
166.689 72.396 li
158.4 72.396 li
162.468 60.507 li
162.792 59.562 162.963 58.914 162.972 58.572 cv
162.981 58.032 162.819 57.6 162.504 57.267 cv
162.18 56.934 161.73 56.763 161.145 56.763 cv
160.191 56.763 159.282 57.123 158.427 57.843 cv
157.572 58.563 156.861 59.742 156.303 61.38 cv
152.523 72.396 li
144.234 72.396 li
151.623 50.814 li
f
192.096 50.814 mo
199.818 50.814 li
198.738 53.964 li
200.304 52.65 201.744 51.714 203.067 51.156 cv
204.39 50.598 205.857 50.319 207.459 50.319 cv
209.178 50.319 210.438 50.625 211.23 51.237 cv
212.031 51.849 212.535 52.758 212.76 53.964 cv
214.542 52.551 216.054 51.597 217.296 51.084 cv
218.538 50.58 219.951 50.319 221.517 50.319 cv
223.83 50.319 225.405 51.012 226.233 52.389 cv
227.061 53.757 226.971 55.917 225.972 58.842 cv
221.328 72.396 li
213.03 72.396 li
217.242 60.102 li
217.584 59.121 217.638 58.401 217.422 57.924 cv
217.125 57.177 216.567 56.808 215.739 56.808 cv
214.767 56.808 213.867 57.159 213.03 57.861 cv
212.193 58.572 211.509 59.697 210.978 61.263 cv
207.162 72.396 li
198.864 72.396 li
202.941 60.507 li
203.265 59.562 203.427 58.914 203.436 58.572 cv
203.445 58.032 203.292 57.6 202.968 57.267 cv
202.644 56.934 202.194 56.763 201.609 56.763 cv
200.655 56.763 199.755 57.123 198.891 57.843 cv
198.036 58.563 197.325 59.742 196.767 61.38 cv
192.996 72.396 li
184.698 72.396 li
192.096 50.814 li
f
246.168 59.697 mo
246.555 58.095 246.51 56.952 246.051 56.259 cv
245.592 55.566 244.791 55.224 243.648 55.224 cv
242.334 55.224 241.11 55.746 239.967 56.79 cv
239.238 57.438 238.59 58.41 238.014 59.697 cv
246.168 59.697 li
253.224 63.657 mo
236.637 63.657 li
236.331 64.989 236.349 65.97 236.7 66.627 cv
237.177 67.563 238.059 68.031 239.346 68.031 cv
240.165 68.031 241.002 67.824 241.875 67.419 cv
242.406 67.158 243.045 66.708 243.783 66.06 cv
251.676 66.807 li
249.687 68.976 247.653 70.533 245.565 71.469 cv
243.486 72.414 240.795 72.882 237.501 72.882 cv
234.639 72.882 232.533 72.486 231.165 71.676 cv
229.806 70.866 228.888 69.588 228.411 67.833 cv
227.934 66.078 228.096 64.017 228.915 61.641 cv
230.067 58.275 232.083 55.539 234.954 53.451 cv
237.834 51.363 241.173 50.319 244.989 50.319 cv
248.076 50.319 250.353 50.787 251.82 51.723 cv
253.287 52.659 254.187 54.018 254.511 55.791 cv
254.844 57.564 254.52 59.877 253.539 62.721 cv
253.224 63.657 li
f
274.212 42.597 mo
271.404 50.814 li
275.958 50.814 li
273.879 56.871 li
269.325 56.871 li
266.706 64.512 li
266.391 65.439 266.274 66.042 266.346 66.339 cv
266.463 66.798 266.859 67.032 267.534 67.032 cv
268.146 67.032 269.055 66.852 270.279 66.501 cv
268.929 72.216 li
266.733 72.666 264.744 72.882 262.971 72.882 cv
260.91 72.882 259.479 72.621 258.687 72.09 cv
257.895 71.568 257.445 70.767 257.346 69.687 cv
257.247 68.616 257.607 66.87 258.435 64.458 cv
261.036 56.871 li
257.985 56.871 li
260.064 50.814 li
263.106 50.814 li
264.465 46.845 li
274.212 42.597 li
f
279.981 50.814 mo
287.721 50.814 li
286.515 54.351 li
287.784 52.821 288.909 51.759 289.899 51.183 cv
290.889 50.607 291.969 50.319 293.139 50.319 cv
294.354 50.319 295.56 50.706 296.748 51.462 cv
292.167 57.357 li
291.33 56.952 290.628 56.745 290.061 56.745 cv
288.981 56.745 287.982 57.195 287.082 58.086 cv
285.795 59.346 284.562 61.704 283.383 65.16 cv
280.899 72.396 li
272.583 72.396 li
279.981 50.814 li
f
300.996 50.814 mo
309.267 50.814 li
301.878 72.396 li
293.598 72.396 li
300.996 50.814 li
303.804 42.597 mo
312.075 42.597 li
310.149 48.231 li
301.878 48.231 li
303.804 42.597 li
f
326.151 63.945 mo
333.711 64.836 li
332.712 66.474 331.515 67.896 330.12 69.093 cv
328.716 70.29 327.132 71.226 325.368 71.892 cv
323.604 72.549 321.534 72.882 319.167 72.882 cv
316.872 72.882 315.045 72.675 313.659 72.243 cv
312.282 71.82 311.211 71.127 310.437 70.173 cv
309.672 69.219 309.195 68.103 309.006 66.816 cv
308.826 65.529 309.096 63.819 309.825 61.695 cv
310.59 59.472 311.598 57.627 312.867 56.151 cv
313.794 55.071 314.883 54.099 316.134 53.235 cv
317.394 52.38 318.6 51.741 319.761 51.318 cv
321.606 50.652 323.784 50.319 326.304 50.319 cv
329.823 50.319 332.298 50.958 333.711 52.218 cv
335.133 53.478 335.799 55.314 335.709 57.744 cv
327.573 58.779 li
327.645 57.861 327.438 57.168 326.961 56.691 cv
326.475 56.232 325.692 55.998 324.603 55.998 cv
323.235 55.998 321.957 56.484 320.778 57.465 cv
319.599 58.446 318.663 59.931 317.979 61.92 cv
317.376 63.693 317.331 65.034 317.862 65.961 cv
318.384 66.879 319.293 67.338 320.598 67.338 cv
321.678 67.338 322.686 67.059 323.622 66.501 cv
324.549 65.943 325.395 65.097 326.151 63.945 cv
f
351.585 72.396 mo
337.905 72.396 li
342.445 59.128 li
345.701 58.9393 348.837 58.7424 351.855 58.5378 cv
349.425 65.628 li
351.684 65.628 li
353.61 65.628 355.05 65.412 356.004 64.989 cv
356.967 64.566 357.858 63.819 358.686 62.757 cv
359.472 61.7287 360.267 60.1028 361.046 57.8638 cv
364.383 57.5994 367.555 57.3255 370.575 57.0427 cv
370.537 57.1592 370.498 57.2758 370.458 57.393 cv
369.369 60.579 368.163 63.054 366.831 64.809 cv
365.508 66.564 363.996 68.031 362.304 69.219 cv
360.612 70.398 358.956 71.19 357.345 71.586 cv
355.14 72.126 353.223 72.396 351.585 72.396 cv
353.244 54.486 mo
354.99 49.383 li
354.993 49.383 li
353.244 54.486 li
371.736 50.6366 mo
371.73 49.2307 371.476 47.9727 370.98 46.863 cv
370.368 45.495 369.351 44.451 367.938 43.713 cv
366.534 42.984 364.482 42.615 361.782 42.615 cv
348.102 42.615 li
348.096 42.633 li
348.09 42.633 li
348.102 42.597 li
361.782 42.597 li
364.482 42.597 366.534 42.966 367.947 43.695 cv
369.351 44.433 370.368 45.477 370.98 46.845 cv
371.479 47.9595 371.732 49.2234 371.736 50.6366 cv
level3{
gsave
clp
[-1.35292e-06 30.9512 -30.9512 -1.35292e-06 354.737 42.0234 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s,d:;s,d::s,d::s,d:9s,d:8s,d:7s,d:7s,d:6s,d:5s,d:4s,d:4s,d:3s,d:2s,d:2s,d:1s,d:0
s,d:/s,d:/s,d:.s,d:-s,d:,s,d:,s,d:+s,d:*s,d:*s,d:)s,d:(s,d:'s,d:'s,d:&s,d:%s,d:$
s,d:$s,d:#s,d:"s,d:!s,d:!s,d9us,d9ts,d9ts,d9ss,d9rs,d9qs,d9qs,d9ps,d9os,d9ns,d9n
s,d9ms,d9ls,d9ls,d9ks,d9js,d9is,d9is,d9hs,d9gs,d9fs,d9fs,d9es,d9ds,d9ds,d9cs,d9b
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s,d9bs,d9cs,d9ds,d9ds,d9es,d9fs,d9fs,d9gs,d9hs,d9is,d9is,d9js,d9ks,d9ls,d9ls,d9m
s,d9ns,d9ns,d9os,d9ps,d9qs,d9qs,d9rs,d9ss,d9ts,d9ts,d9us,d:!s,d:!s,d:"s,d:#s,d:$
s,d:$s,d:%s,d:&s,d:'s,d:'s,d:(s,d:)s,d:*s,d:*s,d:+s,d:,s,d:,s,d:-s,d:.s,d:/s,d:/
s,d:0s,d:1s,d:2s,d:2s,d:3s,d:4s,d:4s,d:5s,d:6s,d:7s,d:7s,d:8s,d:9s,d::s,d::s,d:;
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [0.505495 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
np
355.761 50.508 mo
356.904 50.508 li
358.929 50.508 360.207 50.958 360.693 51.858 cv
361.044 52.506 361.206 54.027 359.991 57.582 cv
359.046 60.336 358.263 61.668 357.777 62.289 cv
357.147 63.117 356.499 63.666 355.824 63.963 cv
355.302 64.197 354.231 64.476 352.08 64.476 cv
350.982 64.476 li
355.761 50.508 li
362.178 41.445 mo
348.498 41.445 li
347.346 41.445 li
346.95 42.597 li
336.744 72.396 li
336.348 73.548 li
337.5 73.548 li
351.18 73.548 li
352.917 73.548 354.969 73.269 357.264 72.702 cv
359.064 72.261 360.927 71.379 362.799 70.065 cv
364.644 68.769 366.309 67.149 367.749 65.25 cv
369.198 63.333 370.458 60.759 371.61 57.393 cv
372.339 55.269 372.78 53.226 372.924 51.327 cv
373.068 49.365 372.798 47.61 372.132 46.134 cv
371.457 44.622 370.323 43.443 368.775 42.642 cv
367.245 41.85 365.022 41.445 362.178 41.445 cv
349.425 65.628 mo
351.684 65.628 li
353.61 65.628 355.05 65.412 356.004 64.989 cv
356.967 64.566 357.858 63.819 358.686 62.757 cv
359.505 61.686 360.333 59.967 361.143 57.582 cv
362.223 54.423 362.457 52.263 361.827 51.093 cv
361.188 49.932 359.685 49.347 357.3 49.347 cv
355.005 49.347 li
349.425 65.628 li
361.782 42.597 mo
364.482 42.597 366.534 42.966 367.947 43.695 cv
369.351 44.433 370.368 45.477 370.98 46.845 cv
371.592 48.213 371.835 49.806 371.7 51.624 cv
371.565 53.442 371.151 55.368 370.458 57.393 cv
369.369 60.579 368.163 63.054 366.831 64.809 cv
365.508 66.564 363.996 68.031 362.304 69.219 cv
360.612 70.398 358.956 71.19 357.345 71.586 cv
355.14 72.126 353.223 72.396 351.585 72.396 cv
337.905 72.396 li
348.102 42.597 li
361.782 42.597 li
0 0 0 0.2 cmyk
f
381.06 72.909 mo
375.993 72.909 372.816 71.928 371.538 69.975 cv
370.251 68.031 369.999 65.547 370.773 62.541 cv
379.719 61.992 li
379.422 63.414 379.44 64.494 379.764 65.241 cv
380.295 66.447 381.447 67.05 383.211 67.05 cv
384.525 67.05 385.641 66.744 386.559 66.123 cv
387.486 65.511 388.089 64.791 388.368 63.981 cv
388.629 63.207 388.53 62.523 388.062 61.911 cv
387.594 61.299 386.217 60.723 383.94 60.183 cv
380.205 59.274 377.739 58.068 376.533 56.565 cv
376.505 56.5309 376.479 56.4962 376.452 56.4617 cv
383.077 55.7704 388.876 55.036 393.948 54.2753 cv
392.45 53.636 390.354 53.0035 387.648 52.371 cv
386.145 52.038 385.236 51.669 384.939 51.282 cv
384.722 51.0152 384.616 50.7313 384.624 50.4244 cv
384.621 50.7236 384.726 50.9996 384.939 51.255 cv
385.236 51.651 386.145 52.02 387.648 52.353 cv
391.383 53.226 393.957 54.099 395.397 54.99 cv
396.837 55.872 397.728 56.979 398.07 58.293 cv
398.412 59.607 398.304 61.074 397.746 62.703 cv
397.089 64.611 395.964 66.375 394.353 67.986 cv
392.742 69.597 390.852 70.821 388.665 71.658 cv
386.478 72.486 383.949 72.909 381.06 72.909 cv
377.078 48.4637 mo
377.534 47.7816 378.082 47.1188 378.72 46.476 cv
380.079 45.108 381.78 44.037 383.823 43.263 cv
385.875 42.48 388.449 42.093 391.554 42.093 cv
395.361 42.093 398.025 42.804 399.537 44.217 cv
400.579 45.1909 401.099 46.5623 401.101 48.3343 cv
401.095 46.5732 400.575 45.2048 399.537 44.235 cv
398.016 42.822 395.361 42.111 391.554 42.111 cv
388.449 42.111 385.875 42.498 383.823 43.281 cv
382.544 43.7656 381.399 44.3668 380.388 45.0843 cv
379.775 45.516 379.213 45.9888 378.702 46.503 cv
378.072 47.1373 377.53 47.7911 377.078 48.4637 cv
level3{
gsave
clp
[-1.39744e-06 31.9697 -31.9697 -1.39744e-06 385.718 41.5146 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
390.699 51.831 mo
389.961 51.633 389.151 51.426 388.278 51.228 cv
386.352 50.787 386.037 50.436 386.01 50.4 cv
385.803 50.157 385.848 50.022 385.866 49.977 cv
385.938 49.761 386.073 49.5 386.523 49.203 cv
386.937 48.942 387.567 48.798 388.341 48.798 cv
389.358 48.798 390.069 49.014 390.438 49.446 cv
390.816 49.869 390.906 50.625 390.726 51.678 cv
390.699 51.831 li
391.95 40.932 mo
388.656 40.932 385.965 41.346 383.724 42.201 cv
381.447 43.065 379.512 44.289 377.973 45.837 cv
376.434 47.385 375.345 49.059 374.751 50.814 cv
373.833 53.478 374.085 55.71 375.48 57.438 cv
376.803 59.085 379.359 60.345 383.292 61.308 cv
386.136 61.983 386.829 62.559 386.991 62.766 cv
387.387 63.279 387.306 63.702 387.207 63.981 cv
387.108 64.278 386.883 64.737 386.109 65.25 cv
385.47 65.682 384.624 65.898 383.607 65.898 cv
382.203 65.898 381.321 65.448 380.916 64.53 cv
380.664 63.954 380.664 63.045 380.916 61.839 cv
381.141 60.768 li
380.043 60.831 li
371.088 61.38 li
369.891 61.461 li
369.585 62.64 li
368.739 65.907 369.027 68.652 370.44 70.794 cv
371.88 72.99 375.228 74.061 380.664 74.061 cv
383.697 74.061 386.424 73.611 388.764 72.711 cv
391.176 71.793 393.309 70.416 395.1 68.625 cv
396.891 66.825 398.178 64.836 398.907 62.703 cv
399.528 60.867 399.654 59.184 399.267 57.69 cv
398.871 56.196 397.872 54.945 396.279 53.955 cv
395.496 53.478 394.443 53.01 393.084 52.551 cv
400.455 52.128 li
401.715 52.056 li
401.985 50.832 li
402.732 47.421 402.246 44.874 400.527 43.272 cv
398.871 41.724 395.982 40.932 391.95 40.932 cv
391.554 42.093 mo
395.361 42.093 398.025 42.804 399.537 44.217 cv
401.049 45.63 401.463 47.88 400.788 50.976 cv
391.932 51.48 li
392.166 50.139 392.013 49.167 391.482 48.555 cv
390.951 47.943 390.042 47.637 388.737 47.637 cv
387.666 47.637 386.784 47.871 386.082 48.321 cv
385.389 48.771 384.93 49.329 384.705 49.977 cv
384.543 50.454 384.624 50.877 384.939 51.255 cv
385.236 51.651 386.145 52.02 387.648 52.353 cv
391.383 53.226 393.957 54.099 395.397 54.99 cv
396.837 55.872 397.728 56.979 398.07 58.293 cv
398.412 59.607 398.304 61.074 397.746 62.703 cv
397.089 64.611 395.964 66.375 394.353 67.986 cv
392.742 69.597 390.852 70.821 388.665 71.658 cv
386.478 72.486 383.949 72.909 381.06 72.909 cv
375.993 72.909 372.816 71.928 371.538 69.975 cv
370.251 68.031 369.999 65.547 370.773 62.541 cv
379.719 61.992 li
379.422 63.414 379.44 64.494 379.764 65.241 cv
380.295 66.447 381.447 67.05 383.211 67.05 cv
384.525 67.05 385.641 66.744 386.559 66.123 cv
387.486 65.511 388.089 64.791 388.368 63.981 cv
388.629 63.207 388.53 62.523 388.062 61.911 cv
387.594 61.299 386.217 60.723 383.94 60.183 cv
380.205 59.274 377.739 58.068 376.533 56.565 cv
375.318 55.062 375.102 53.145 375.903 50.814 cv
376.425 49.284 377.37 47.835 378.72 46.476 cv
380.079 45.108 381.78 44.037 383.823 43.263 cv
385.875 42.48 388.449 42.093 391.554 42.093 cv
0 0 0 0.2 cmyk
f
gsave
370.773 62.559 mo
379.719 62.01 li
379.422 63.432 379.431 64.521 379.764 65.259 cv
380.295 66.465 381.447 67.068 383.211 67.068 cv
384.525 67.068 385.641 66.762 386.559 66.15 cv
387.486 65.529 388.089 64.818 388.368 63.999 cv
388.629 63.234 388.53 62.541 388.053 61.929 cv
387.585 61.317 386.217 60.741 383.931 60.201 cv
380.205 59.292 377.739 58.086 376.533 56.583 cv
375.318 55.08 375.102 53.163 375.903 50.832 cv
376.425 49.302 377.37 47.853 378.72 46.494 cv
380.079 45.126 381.78 44.055 383.823 43.281 cv
385.875 42.498 388.449 42.111 391.554 42.111 cv
395.361 42.111 398.016 42.822 399.537 44.235 cv
401.049 45.648 401.463 47.907 400.788 50.994 cv
391.932 51.498 li
392.166 50.157 392.013 49.185 391.482 48.573 cv
390.951 47.961 390.042 47.655 388.737 47.655 cv
387.666 47.655 386.784 47.889 386.082 48.339 cv
385.389 48.798 384.93 49.347 384.705 49.995 cv
384.543 50.472 384.624 50.895 384.939 51.282 cv
385.236 51.669 386.145 52.038 387.648 52.371 cv
391.383 53.244 393.957 54.117 395.397 55.008 cv
396.837 55.899 397.728 56.997 398.07 58.311 cv
398.412 59.625 398.304 61.092 397.746 62.721 cv
397.089 64.629 395.955 66.393 394.353 68.004 cv
392.742 69.615 390.843 70.839 388.665 71.676 cv
386.478 72.504 383.949 72.927 381.06 72.927 cv
375.993 72.927 372.816 71.946 371.538 70.002 cv
370.251 68.049 369.999 65.565 370.773 62.559 cv
354.996 49.365 mo
349.425 65.646 li
351.684 65.646 li
353.61 65.646 355.05 65.439 356.004 65.007 cv
356.967 64.584 357.858 63.837 358.686 62.775 cv
359.505 61.704 360.333 59.985 361.143 57.6 cv
362.223 54.441 362.448 52.281 361.818 51.111 cv
361.188 49.95 359.685 49.365 357.3 49.365 cv
354.996 49.365 li
348.102 42.615 mo
361.782 42.615 li
364.482 42.615 366.534 42.984 367.938 43.713 cv
369.351 44.451 370.368 45.495 370.98 46.863 cv
371.592 48.231 371.835 49.824 371.7 51.642 cv
371.565 53.46 371.151 55.386 370.458 57.42 cv
369.369 60.597 368.154 63.072 366.831 64.827 cv
365.508 66.582 363.996 68.049 362.304 69.237 cv
360.612 70.425 358.956 71.208 357.345 71.604 cv
355.14 72.144 353.214 72.414 351.576 72.414 cv
337.896 72.414 li
348.102 42.615 li
326.151 63.963 mo
333.711 64.854 li
332.712 66.492 331.515 67.914 330.12 69.111 cv
328.716 70.308 327.132 71.244 325.368 71.91 cv
323.604 72.576 321.534 72.9 319.167 72.9 cv
316.872 72.9 315.045 72.693 313.659 72.261 cv
312.282 71.838 311.211 71.145 310.437 70.191 cv
309.672 69.237 309.195 68.121 309.006 66.834 cv
308.826 65.547 309.096 63.837 309.825 61.713 cv
310.59 59.499 311.598 57.645 312.858 56.169 cv
313.794 55.089 314.883 54.117 316.134 53.253 cv
317.394 52.398 318.6 51.759 319.761 51.336 cv
321.606 50.679 323.784 50.346 326.304 50.346 cv
329.823 50.346 332.298 50.976 333.711 52.236 cv
335.133 53.496 335.799 55.332 335.709 57.762 cv
327.573 58.797 li
327.645 57.879 327.438 57.186 326.952 56.718 cv
326.475 56.25 325.692 56.016 324.603 56.016 cv
323.235 56.016 321.957 56.502 320.778 57.483 cv
319.59 58.464 318.663 59.949 317.979 61.938 cv
317.376 63.711 317.331 65.052 317.862 65.979 cv
318.384 66.897 319.293 67.356 320.598 67.356 cv
321.678 67.356 322.686 67.077 323.622 66.519 cv
324.549 65.97 325.395 65.115 326.151 63.963 cv
300.996 50.832 mo
309.267 50.832 li
301.869 72.414 li
293.598 72.414 li
300.996 50.832 li
303.804 42.615 mo
312.075 42.615 li
310.149 48.249 li
301.878 48.249 li
303.804 42.615 li
279.981 50.832 mo
287.721 50.832 li
286.515 54.369 li
287.784 52.839 288.909 51.786 289.899 51.21 cv
290.889 50.634 291.969 50.346 293.13 50.346 cv
294.354 50.346 295.56 50.724 296.748 51.48 cv
292.167 57.375 li
291.33 56.97 290.628 56.763 290.061 56.763 cv
288.972 56.763 287.982 57.213 287.082 58.104 cv
285.795 59.364 284.562 61.722 283.374 65.178 cv
280.899 72.414 li
272.583 72.414 li
279.981 50.832 li
274.212 42.615 mo
271.404 50.832 li
275.958 50.832 li
273.879 56.889 li
269.325 56.889 li
266.706 64.539 li
266.391 65.457 266.274 66.06 266.346 66.357 cv
266.463 66.816 266.859 67.05 267.534 67.05 cv
268.146 67.05 269.055 66.879 270.279 66.519 cv
268.929 72.234 li
266.733 72.684 264.744 72.9 262.971 72.9 cv
260.91 72.9 259.479 72.639 258.687 72.117 cv
257.895 71.586 257.445 70.785 257.346 69.705 cv
257.247 68.634 257.607 66.888 258.435 64.476 cv
261.036 56.889 li
257.985 56.889 li
260.055 50.832 li
263.106 50.832 li
264.465 46.863 li
274.212 42.615 li
246.168 59.715 mo
246.546 58.113 246.51 56.97 246.051 56.277 cv
245.592 55.584 244.791 55.242 243.648 55.242 cv
242.334 55.242 241.11 55.764 239.967 56.808 cv
239.238 57.456 238.59 58.428 238.014 59.715 cv
246.168 59.715 li
253.224 63.675 mo
236.637 63.675 li
236.331 65.007 236.349 65.997 236.7 66.645 cv
237.177 67.581 238.059 68.049 239.346 68.049 cv
240.165 68.049 241.002 67.842 241.875 67.437 cv
242.406 67.176 243.045 66.726 243.783 66.078 cv
251.676 66.825 li
249.687 68.994 247.653 70.551 245.565 71.496 cv
243.486 72.432 240.795 72.9 237.501 72.9 cv
234.639 72.9 232.533 72.504 231.165 71.694 cv
229.806 70.884 228.879 69.606 228.411 67.851 cv
227.934 66.096 228.096 64.035 228.915 61.668 cv
230.067 58.293 232.083 55.557 234.954 53.469 cv
237.834 51.39 241.173 50.346 244.98 50.346 cv
248.076 50.346 250.353 50.814 251.82 51.75 cv
253.287 52.677 254.187 54.036 254.511 55.809 cv
254.844 57.582 254.52 59.895 253.539 62.739 cv
253.224 63.675 li
192.096 50.832 mo
199.818 50.832 li
198.738 53.982 li
200.304 52.668 201.744 51.732 203.067 51.174 cv
204.39 50.616 205.848 50.346 207.45 50.346 cv
209.178 50.346 210.438 50.643 211.23 51.255 cv
212.031 51.867 212.535 52.776 212.76 53.982 cv
214.542 52.569 216.054 51.615 217.296 51.102 cv
218.538 50.598 219.951 50.346 221.517 50.346 cv
223.83 50.346 225.405 51.03 226.233 52.407 cv
227.061 53.784 226.971 55.935 225.972 58.86 cv
221.328 72.414 li
213.03 72.414 li
217.242 60.12 li
217.575 59.148 217.638 58.419 217.422 57.942 cv
217.125 57.195 216.558 56.826 215.739 56.826 cv
214.767 56.826 213.858 57.177 213.03 57.888 cv
212.193 58.59 211.509 59.724 210.969 61.281 cv
207.162 72.414 li
198.864 72.414 li
202.941 60.525 li
203.265 59.58 203.427 58.932 203.436 58.599 cv
203.445 58.05 203.292 57.618 202.968 57.285 cv
202.644 56.952 202.194 56.79 201.609 56.79 cv
200.655 56.79 199.755 57.15 198.891 57.861 cv
198.036 58.581 197.325 59.76 196.767 61.398 cv
192.996 72.414 li
184.698 72.414 li
192.096 50.832 li
151.623 50.832 mo
159.345 50.832 li
158.265 53.982 li
159.831 52.668 161.271 51.732 162.594 51.174 cv
163.926 50.616 165.384 50.346 166.986 50.346 cv
168.705 50.346 169.965 50.643 170.766 51.255 cv
171.558 51.867 172.071 52.776 172.296 53.982 cv
174.078 52.569 175.59 51.615 176.832 51.102 cv
178.074 50.598 179.478 50.346 181.053 50.346 cv
183.366 50.346 184.932 51.03 185.76 52.407 cv
186.588 53.784 186.507 55.935 185.499 58.86 cv
180.855 72.414 li
172.566 72.414 li
176.778 60.12 li
177.111 59.148 177.165 58.419 176.958 57.942 cv
176.652 57.195 176.094 56.826 175.266 56.826 cv
174.294 56.826 173.394 57.177 172.557 57.888 cv
171.72 58.59 171.036 59.724 170.505 61.281 cv
166.689 72.414 li
158.4 72.414 li
162.468 60.525 li
162.792 59.58 162.963 58.932 162.972 58.599 cv
162.981 58.05 162.819 57.618 162.504 57.285 cv
162.18 56.952 161.73 56.79 161.145 56.79 cv
160.191 56.79 159.282 57.15 158.427 57.861 cv
157.572 58.581 156.861 59.76 156.294 61.398 cv
152.523 72.414 li
144.234 72.414 li
151.623 50.832 li
122.598 50.832 mo
131.328 50.832 li
130.86 65.205 li
139.914 50.832 li
148.068 50.832 li
131.607 73.89 li
129.726 76.527 128.124 78.3 126.792 79.227 cv
124.911 80.523 122.499 81.171 119.565 81.171 cv
118.368 81.171 116.586 81.009 114.201 80.685 cv
115.533 74.916 li
116.595 75.294 117.855 75.483 119.313 75.483 cv
120.294 75.483 121.158 75.258 121.914 74.817 cv
122.67 74.367 123.453 73.566 124.272 72.414 cv
122.598 50.832 li
88.686 62.559 mo
97.632 62.01 li
97.335 63.432 97.353 64.521 97.677 65.259 cv
98.217 66.465 99.36 67.068 101.124 67.068 cv
102.438 67.068 103.563 66.762 104.481 66.15 cv
105.399 65.529 106.002 64.818 106.281 63.999 cv
106.551 63.234 106.443 62.541 105.975 61.929 cv
105.507 61.317 104.13 60.741 101.853 60.201 cv
98.127 59.292 95.661 58.086 94.455 56.583 cv
93.231 55.08 93.024 53.163 93.825 50.832 cv
94.347 49.302 95.283 47.853 96.642 46.494 cv
97.992 45.126 99.693 44.055 101.745 43.281 cv
103.788 42.498 106.371 42.111 109.467 42.111 cv
113.274 42.111 115.938 42.822 117.45 44.235 cv
118.962 45.648 119.385 47.907 118.701 50.994 cv
109.854 51.498 li
110.079 50.157 109.926 49.185 109.404 48.573 cv
108.873 47.961 107.955 47.655 106.659 47.655 cv
105.588 47.655 104.697 47.889 104.004 48.339 cv
103.302 48.798 102.843 49.347 102.627 49.995 cv
102.456 50.472 102.537 50.895 102.852 51.282 cv
103.158 51.669 104.058 52.038 105.57 52.371 cv
109.296 53.244 111.879 54.117 113.319 55.008 cv
114.75 55.899 115.641 56.997 115.983 58.311 cv
116.325 59.625 116.217 61.092 115.668 62.721 cv
115.011 64.629 113.877 66.393 112.266 68.004 cv
110.664 69.615 108.765 70.839 106.578 71.676 cv
104.4 72.504 101.862 72.927 98.982 72.927 cv
93.915 72.927 90.738 71.946 89.451 70.002 cv
88.173 68.049 87.912 65.565 88.686 62.559 cv
370.746 62.568 mo
379.701 62.019 li
379.404 63.441 379.413 64.53 379.746 65.277 cv
380.277 66.483 381.429 67.086 383.184 67.086 cv
384.498 67.086 385.623 66.771 386.541 66.159 cv
387.468 65.538 388.071 64.827 388.35 64.017 cv
388.611 63.243 388.512 62.55 388.044 61.938 cv
387.567 61.335 386.199 60.759 383.913 60.21 cv
380.187 59.31 377.721 58.095 376.515 56.592 cv
375.3 55.089 375.084 53.172 375.885 50.841 cv
376.407 49.311 377.352 47.862 378.702 46.503 cv
380.052 45.144 381.762 44.073 383.805 43.29 cv
385.857 42.516 388.431 42.12 391.536 42.12 cv
395.343 42.12 397.998 42.831 399.519 44.244 cv
401.031 45.666 401.445 47.916 400.77 51.003 cv
391.914 51.516 li
392.139 50.175 391.995 49.194 391.464 48.591 cv
390.933 47.979 390.024 47.673 388.719 47.673 cv
387.648 47.673 386.766 47.898 386.064 48.357 cv
385.371 48.807 384.912 49.356 384.687 50.013 cv
384.525 50.481 384.597 50.913 384.921 51.291 cv
385.218 51.687 386.118 52.047 387.63 52.389 cv
391.356 53.253 393.939 54.135 395.379 55.017 cv
396.819 55.908 397.71 57.006 398.052 58.32 cv
398.394 59.634 398.286 61.11 397.728 62.73 cv
397.071 64.647 395.937 66.402 394.335 68.013 cv
392.724 69.633 390.825 70.857 388.647 71.685 cv
386.46 72.522 383.931 72.936 381.042 72.936 cv
375.975 72.936 372.798 71.964 371.52 70.011 cv
370.233 68.058 369.981 65.583 370.746 62.568 cv
354.987 49.383 mo
349.407 65.664 li
351.666 65.664 li
353.583 65.664 355.032 65.448 355.986 65.016 cv
356.949 64.593 357.84 63.846 358.659 62.784 cv
359.487 61.722 360.306 59.994 361.125 57.609 cv
362.205 54.459 362.43 52.29 361.8 51.129 cv
361.17 49.959 359.667 49.383 357.282 49.383 cv
354.987 49.383 li
348.084 42.633 mo
361.764 42.633 li
364.464 42.633 366.516 42.993 367.92 43.731 cv
369.333 44.46 370.341 45.513 370.962 46.881 cv
371.574 48.249 371.817 49.842 371.682 51.651 cv
371.547 53.469 371.133 55.395 370.44 57.429 cv
369.342 60.615 368.136 63.081 366.813 64.836 cv
365.49 66.591 363.978 68.058 362.286 69.246 cv
360.594 70.434 358.938 71.226 357.327 71.613 cv
355.122 72.162 353.196 72.432 351.558 72.432 cv
337.878 72.432 li
348.084 42.633 li
326.133 63.972 mo
333.693 64.863 li
332.694 66.51 331.497 67.923 330.102 69.129 cv
328.698 70.326 327.114 71.253 325.35 71.919 cv
323.586 72.585 321.516 72.918 319.149 72.918 cv
316.854 72.918 315.018 72.702 313.641 72.279 cv
312.264 71.847 311.193 71.163 310.419 70.209 cv
309.645 69.255 309.168 68.13 308.988 66.843 cv
308.808 65.556 309.078 63.855 309.807 61.731 cv
310.572 59.508 311.58 57.663 312.84 56.187 cv
313.767 55.098 314.865 54.126 316.116 53.271 cv
317.376 52.407 318.582 51.768 319.743 51.354 cv
321.579 50.688 323.766 50.355 326.286 50.355 cv
329.805 50.355 332.28 50.985 333.693 52.245 cv
335.115 53.505 335.781 55.35 335.691 57.771 cv
327.555 58.806 li
327.627 57.888 327.42 57.195 326.934 56.727 cv
326.448 56.259 325.665 56.025 324.585 56.025 cv
323.217 56.025 321.939 56.52 320.76 57.501 cv
319.581 58.482 318.645 59.958 317.961 61.947 cv
317.358 63.72 317.313 65.07 317.844 65.988 cv
318.366 66.906 319.275 67.365 320.58 67.365 cv
321.66 67.365 322.668 67.086 323.595 66.537 cv
324.522 65.979 325.368 65.124 326.133 63.972 cv
300.969 50.841 mo
309.249 50.841 li
301.851 72.432 li
293.58 72.432 li
300.969 50.841 li
303.786 42.633 mo
312.057 42.633 li
310.131 48.258 li
301.86 48.258 li
303.786 42.633 li
279.963 50.841 mo
287.703 50.841 li
286.497 54.378 li
287.766 52.848 288.891 51.795 289.881 51.219 cv
290.871 50.643 291.951 50.355 293.112 50.355 cv
294.336 50.355 295.542 50.733 296.73 51.489 cv
292.149 57.384 li
291.312 56.979 290.61 56.781 290.043 56.781 cv
288.954 56.781 287.964 57.222 287.064 58.122 cv
285.777 59.382 284.544 61.74 283.356 65.196 cv
280.881 72.432 li
272.565 72.432 li
279.963 50.841 li
274.194 42.633 mo
271.386 50.841 li
275.94 50.841 li
273.861 56.898 li
269.307 56.898 li
266.688 64.548 li
266.373 65.466 266.256 66.078 266.328 66.375 cv
266.445 66.834 266.832 67.059 267.516 67.059 cv
268.128 67.059 269.037 66.888 270.252 66.537 cv
268.911 72.243 li
266.715 72.693 264.726 72.918 262.953 72.918 cv
260.892 72.918 259.461 72.648 258.669 72.126 cv
257.877 71.595 257.427 70.794 257.328 69.723 cv
257.229 68.643 257.589 66.906 258.417 64.494 cv
261.018 56.898 li
257.967 56.898 li
260.037 50.841 li
263.088 50.841 li
264.447 46.881 li
274.194 42.633 li
246.141 59.724 mo
246.528 58.122 246.492 56.979 246.033 56.295 cv
245.574 55.602 244.773 55.251 243.63 55.251 cv
242.316 55.251 241.092 55.773 239.949 56.817 cv
239.22 57.465 238.572 58.437 237.996 59.724 cv
246.141 59.724 li
253.206 63.693 mo
236.619 63.693 li
236.313 65.016 236.331 66.006 236.682 66.654 cv
237.159 67.59 238.041 68.058 239.328 68.058 cv
240.138 68.058 240.984 67.851 241.857 67.446 cv
242.388 67.194 243.027 66.735 243.765 66.087 cv
251.658 66.843 li
249.669 69.003 247.635 70.56 245.547 71.505 cv
243.459 72.441 240.777 72.918 237.483 72.918 cv
234.621 72.918 232.515 72.513 231.147 71.703 cv
229.788 70.902 228.861 69.624 228.384 67.869 cv
227.916 66.114 228.078 64.044 228.897 61.677 cv
230.049 58.302 232.065 55.575 234.936 53.487 cv
237.816 51.399 241.155 50.355 244.962 50.355 cv
248.049 50.355 250.335 50.823 251.802 51.759 cv
253.269 52.695 254.169 54.045 254.493 55.827 cv
254.817 57.6 254.502 59.904 253.521 62.757 cv
253.206 63.693 li
192.069 50.841 mo
199.8 50.841 li
198.72 53.991 li
200.286 52.677 201.726 51.741 203.049 51.192 cv
204.372 50.634 205.83 50.355 207.432 50.355 cv
209.16 50.355 210.42 50.661 211.212 51.273 cv
212.004 51.876 212.517 52.785 212.742 53.991 cv
214.524 52.587 216.036 51.624 217.278 51.12 cv
218.52 50.607 219.933 50.355 221.499 50.355 cv
223.812 50.355 225.387 51.039 226.215 52.416 cv
227.043 53.793 226.953 55.944 225.954 58.869 cv
221.31 72.432 li
213.012 72.432 li
217.224 60.129 li
217.557 59.157 217.62 58.428 217.404 57.96 cv
217.107 57.213 216.54 56.835 215.721 56.835 cv
214.749 56.835 213.84 57.195 213.012 57.897 cv
212.175 58.599 211.491 59.733 210.96 61.29 cv
207.144 72.432 li
198.846 72.432 li
202.923 60.543 li
203.247 59.589 203.409 58.95 203.418 58.608 cv
203.427 58.068 203.274 57.627 202.95 57.294 cv
202.626 56.961 202.176 56.799 201.591 56.799 cv
200.637 56.799 199.737 57.159 198.873 57.879 cv
198.018 58.59 197.307 59.769 196.749 61.416 cv
192.978 72.432 li
184.68 72.432 li
192.069 50.841 li
151.605 50.841 mo
159.327 50.841 li
158.247 53.991 li
159.813 52.677 161.253 51.741 162.576 51.192 cv
163.899 50.634 165.366 50.355 166.968 50.355 cv
168.687 50.355 169.947 50.661 170.748 51.273 cv
171.54 51.876 172.053 52.785 172.269 53.991 cv
174.051 52.587 175.572 51.624 176.814 51.12 cv
178.056 50.607 179.46 50.355 181.035 50.355 cv
183.348 50.355 184.914 51.039 185.742 52.416 cv
186.57 53.793 186.48 55.944 185.481 58.869 cv
180.837 72.432 li
172.548 72.432 li
176.76 60.129 li
177.093 59.157 177.147 58.428 176.94 57.96 cv
176.634 57.213 176.076 56.835 175.248 56.835 cv
174.276 56.835 173.376 57.195 172.539 57.897 cv
171.702 58.599 171.018 59.733 170.487 61.29 cv
166.671 72.432 li
158.382 72.432 li
162.45 60.543 li
162.774 59.589 162.945 58.95 162.945 58.608 cv
162.954 58.068 162.801 57.627 162.477 57.294 cv
162.162 56.961 161.703 56.799 161.118 56.799 cv
160.173 56.799 159.264 57.159 158.409 57.879 cv
157.554 58.59 156.843 59.769 156.276 61.416 cv
152.505 72.432 li
144.216 72.432 li
151.605 50.841 li
122.58 50.841 mo
131.31 50.841 li
130.842 65.214 li
139.896 50.841 li
148.05 50.841 li
131.589 73.908 li
129.708 76.536 128.106 78.318 126.774 79.236 cv
124.893 80.541 122.481 81.189 119.547 81.189 cv
118.35 81.189 116.568 81.027 114.183 80.703 cv
115.515 74.925 li
116.577 75.312 117.837 75.501 119.295 75.501 cv
120.276 75.501 121.14 75.276 121.896 74.826 cv
122.652 74.376 123.435 73.575 124.245 72.423 cv
122.58 50.841 li
88.668 62.568 mo
97.614 62.019 li
97.317 63.441 97.335 64.53 97.659 65.277 cv
98.199 66.483 99.342 67.086 101.106 67.086 cv
102.42 67.086 103.536 66.771 104.463 66.159 cv
105.381 65.538 105.984 64.827 106.263 64.017 cv
106.524 63.243 106.425 62.55 105.957 61.938 cv
105.489 61.335 104.112 60.759 101.835 60.21 cv
98.109 59.31 95.643 58.095 94.437 56.592 cv
93.213 55.089 93.006 53.172 93.807 50.841 cv
94.329 49.311 95.265 47.862 96.624 46.503 cv
97.974 45.144 99.675 44.073 101.727 43.29 cv
103.77 42.516 106.344 42.12 109.449 42.12 cv
113.256 42.12 115.92 42.831 117.432 44.244 cv
118.944 45.666 119.367 47.916 118.683 51.003 cv
109.836 51.516 li
110.061 50.175 109.908 49.194 109.386 48.591 cv
108.855 47.979 107.937 47.673 106.632 47.673 cv
105.561 47.673 104.679 47.898 103.986 48.357 cv
103.284 48.807 102.825 49.356 102.6 50.013 cv
102.438 50.481 102.519 50.913 102.834 51.291 cv
103.131 51.687 104.04 52.047 105.552 52.389 cv
109.278 53.253 111.861 54.135 113.301 55.017 cv
114.732 55.908 115.623 57.006 115.965 58.32 cv
116.307 59.634 116.199 61.11 115.641 62.73 cv
114.993 64.647 113.859 66.402 112.248 68.013 cv
110.637 69.633 108.747 70.857 106.56 71.685 cv
104.382 72.522 101.844 72.936 98.964 72.936 cv
93.888 72.936 90.72 71.964 89.433 70.011 cv
88.146 68.058 87.894 65.583 88.668 62.568 cv
clp
90.8276 71.3408 mo
90.2342 70.9643 89.7692 70.5212 89.433 70.011 cv
88.146 68.058 87.894 65.583 88.668 62.568 cv
88.6795 62.5673 li
87.9138 65.5614 88.1767 68.0367 89.451 69.975 cv
89.7931 70.4941 90.2687 70.9445 90.8779 71.3261 cv
90.8615 71.3309 90.844 71.336 90.8276 71.3408 cv
113.122 67.0638 mo
114.285 65.7085 115.134 64.2533 115.668 62.703 cv
115.807 62.2984 115.917 61.9038 115.999 61.5191 cv
115.917 61.9096 115.806 62.3101 115.668 62.721 cv
115.137 64.2636 114.294 65.712 113.139 67.0615 cv
113.133 67.0624 113.128 67.063 113.122 67.0638 cv
106.01 64.5757 mo
106.019 64.5589 106.028 64.5421 106.037 64.5253 cv
106.028 64.542 106.019 64.559 106.01 64.5757 cv
106.075 64.4561 mo
106.149 64.3131 106.211 64.1667 106.263 64.017 cv
106.524 63.243 106.425 62.55 105.957 61.938 cv
105.489 61.335 104.112 60.759 101.835 60.21 cv
98.109 59.31 95.643 58.095 94.437 56.592 cv
93.213 55.089 93.006 53.172 93.807 50.841 cv
94.0856 50.0245 94.4822 49.2309 94.998 48.4619 cv
94.4909 49.2225 94.1003 50.007 93.825 50.814 cv
93.024 53.145 93.231 55.062 94.455 56.565 cv
95.661 58.068 98.127 59.274 101.853 60.183 cv
104.13 60.723 105.507 61.299 105.975 61.911 cv
106.443 62.523 106.551 63.207 106.281 63.981 cv
106.225 64.1431 106.156 64.3014 106.075 64.4561 cv
97.4217 63.8715 mo
97.4137 63.3346 97.4824 62.7145 97.6284 62.0102 cv
97.632 62.01 li
97.4852 62.7127 97.4157 63.3336 97.4217 63.8715 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J
!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J
!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J
!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J!!!!J
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!J!!!!J!!!!K!!!!K!!!!K!!!!K!!!!K!!!!K!!!!L!!!!L!!!!L!!!!L!!!!L!!!!L!!!!L!!!!M
!!!!M!!!!M!!!!M!!!!M!!!!M!!!!N!!!!N!!!!N!!!!N!!!!N!!!!N!!!!N!!!!O!!!!O!!!!O!!!!O
!!!!O!!!!O!!!!P!!!!P!!!!P!!!!P!!!!P!!!!P!!!!P!!!!Q!!!!Q!!!!Q!!!!Q!!!!Q!!!!Q!!!!R
!!!!R!!!!R!!!!R!!!!R!!!!R!!!!R!!!!S!!!!S!!!!S!!!!S!!!!S!!!!S!!!!T!!!!T!!!!T!!!!T
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [0.203297 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
np
109.836 51.516 mo
110.061 50.175 109.908 49.194 109.386 48.591 cv
108.855 47.979 107.937 47.673 106.632 47.673 cv
105.561 47.673 104.679 47.898 103.986 48.357 cv
103.862 48.4366 103.746 48.5195 103.637 48.6053 cv
103.139 49.0062 102.803 49.4679 102.627 49.995 cv
102.597 50.0797 102.575 50.1625 102.56 50.2439 cv
102.574 50.1568 102.596 50.0679 102.627 49.977 cv
102.843 49.329 103.311 48.771 104.004 48.321 cv
104.697 47.871 105.588 47.637 106.659 47.637 cv
107.955 47.637 108.873 47.943 109.404 48.555 cv
109.935 49.167 110.079 50.139 109.854 51.48 cv
118.705 50.9763 li
118.703 50.9823 118.702 50.988 118.701 50.994 cv
118.685 50.9949 li
118.684 50.9976 118.684 51.0004 118.683 51.003 cv
109.836 51.516 li
118.683 50.985 mo
118.683 50.985 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
90.8779 71.3261 mo
90.2687 70.9445 89.7931 70.4941 89.451 69.975 cv
88.1767 68.0367 87.9138 65.5614 88.6795 62.5673 cv
88.684 62.567 li
88.6847 62.5643 88.6853 62.5618 88.686 62.559 cv
97.6284 62.0102 li
97.4824 62.7145 97.4137 63.3346 97.4217 63.8715 cv
97.4278 64.4222 97.5131 64.8857 97.677 65.259 cv
98.217 66.465 99.36 67.068 101.124 67.068 cv
102.113 67.068 102.995 66.8944 103.762 66.5476 cv
104.007 66.4352 104.241 66.3059 104.463 66.159 cv
105.164 65.6851 105.68 65.1584 106.01 64.5757 cv
106.019 64.559 106.028 64.542 106.037 64.5253 cv
106.05 64.5022 106.063 64.4794 106.075 64.4561 cv
106.156 64.3014 106.225 64.1431 106.281 63.981 cv
106.551 63.207 106.443 62.523 105.975 61.911 cv
105.507 61.299 104.13 60.723 101.853 60.183 cv
98.127 59.274 95.661 58.068 94.455 56.565 cv
93.231 55.062 93.024 53.145 93.825 50.814 cv
94.1003 50.007 94.4909 49.2225 94.998 48.4619 cv
95.4486 47.79 95.9903 47.1367 96.624 46.503 cv
96.966 46.1588 97.3305 45.8333 97.7175 45.526 cv
98.8623 44.6103 100.205 43.862 101.745 43.281 cv
103.788 42.498 106.371 42.111 109.467 42.111 cv
113.274 42.111 115.938 42.822 117.45 44.235 cv
118.959 45.6452 119.383 47.8986 118.705 50.9763 cv
109.854 51.48 li
110.079 50.139 109.935 49.167 109.404 48.555 cv
108.873 47.943 107.955 47.637 106.659 47.637 cv
105.588 47.637 104.697 47.871 104.004 48.321 cv
103.311 48.771 102.843 49.329 102.627 49.977 cv
102.596 50.0679 102.574 50.1568 102.56 50.2439 cv
102.493 50.6209 102.593 50.9637 102.852 51.282 cv
103.158 51.669 104.058 52.038 105.57 52.371 cv
109.296 53.244 111.879 54.117 113.319 55.008 cv
114.75 55.899 115.641 56.997 115.983 58.311 cv
116.239 59.2935 116.243 60.3617 115.999 61.5191 cv
115.917 61.9038 115.807 62.2984 115.668 62.703 cv
115.134 64.2533 114.285 65.7085 113.122 67.0638 cv
102.518 68.4737 95.508 69.9765 90.8779 71.3261 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F
!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F
!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F
!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F!!!#F
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!#F!!!#F!!!#G!!!#H!!!#I!!!#I!!!#J!!!#K!!!#L!!!#L!!!#M!!!#N!!!#O!!!#P!!!#P!!!#Q
!!!#R!!!#S!!!#S!!!#T!!!#U!!!#V!!!#V!!!#W!!!#X!!!#Y!!!#Z!!!#Z!!!#[!!!#\!!!#]!!!#]
!!!#^!!!#_!!!#`!!!#`!!!#a!!!#b!!!#c!!!#d!!!#d!!!#e!!!#f!!!#g!!!#g!!!#h!!!#i!!!#j
!!!#j!!!#k!!!#l!!!#m!!!#n!!!#n!!!#o!!!#p!!!#q!!!#q!!!#r!!!#s!!!#t!!!#t!!!#u!!!$!
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [0.203297 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
np
123.736 65.8198 mo
122.58 50.841 li
122.599 50.841 li
122.598 50.832 li
122.599 50.832 li
123.762 65.8171 li
123.75 65.8183 123.747 65.8186 123.736 65.8198 cv
130.861 65.1383 mo
131.327 50.832 li
131.328 50.832 li
130.862 65.1382 li
130.861 65.1383 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
123.762 65.8171 mo
122.599 50.832 li
131.327 50.832 li
130.861 65.1383 li
128.374 65.3584 126.003 65.5856 123.762 65.8171 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
np
138.275 64.5312 mo
148.055 50.832 li
148.068 50.832 li
138.289 64.5302 li
138.284 64.5305 138.28 64.5309 138.275 64.5312 cv
138.33 53.327 mo
139.896 50.841 li
139.897 50.841 li
138.33 53.327 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
130.891 65.1356 mo
138.33 53.327 li
139.897 50.841 li
139.908 50.841 li
139.914 50.832 li
148.055 50.832 li
138.275 64.5312 li
135.701 64.7261 133.236 64.9284 130.891 65.1356 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
np
147.129 63.9188 mo
151.605 50.841 li
151.614 50.841 li
147.136 63.9183 li
147.129 63.9188 li
161.564 63.1323 mo
162.45 60.543 li
162.774 59.589 162.945 58.95 162.945 58.608 cv
162.954 58.068 162.801 57.627 162.477 57.294 cv
162.162 56.961 161.703 56.799 161.118 56.799 cv
160.173 56.799 159.264 57.159 158.409 57.879 cv
158.36 57.9198 158.311 57.9623 158.263 58.0062 cv
157.558 58.6633 156.955 59.6468 156.454 60.9569 cv
156.988 59.5374 157.648 58.4994 158.427 57.843 cv
159.282 57.123 160.191 56.763 161.145 56.763 cv
161.73 56.763 162.18 56.934 162.504 57.267 cv
162.819 57.6 162.981 58.032 162.972 58.572 cv
162.963 58.914 162.792 59.562 162.468 60.507 cv
161.57 63.132 li
161.564 63.1323 161.57 63.132 161.564 63.1323 cv
169.987 62.7736 mo
170.505 61.263 li
171.036 59.697 171.72 58.572 172.557 57.861 cv
173.394 57.159 174.303 56.808 175.275 56.808 cv
176.094 56.808 176.652 57.177 176.958 57.924 cv
177.174 58.401 177.111 59.121 176.778 60.102 cv
175.936 62.5583 li
175.93 62.5585 175.935 62.5584 175.928 62.5586 cv
176.76 60.129 li
177.093 59.157 177.147 58.428 176.94 57.96 cv
176.634 57.213 176.076 56.835 175.248 56.835 cv
174.459 56.835 173.718 57.072 173.02 57.5362 cv
172.863 57.6417 172.709 57.7587 172.557 57.888 cv
171.72 58.59 171.036 59.724 170.505 61.281 cv
169.993 62.7734 li
169.987 62.7736 169.993 62.7734 169.987 62.7736 cv
184.313 62.3031 mo
185.499 58.842 li
186.035 57.2881 186.308 55.9502 186.323 54.8322 cv
186.312 55.9535 186.038 57.2961 185.499 58.86 cv
184.319 62.3029 li
184.313 62.3031 li
158.611 52.974 mo
159.339 50.832 li
159.345 50.832 li
158.611 52.974 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
147.136 63.9183 mo
151.614 50.841 li
151.62 50.841 li
151.623 50.832 li
159.339 50.832 li
158.611 52.974 li
158.268 53.9736 li
159.231 53.1672 160.146 52.504 161.015 51.9859 cv
161.559 51.6596 162.085 51.3886 162.594 51.174 cv
163.926 50.616 165.384 50.346 166.986 50.346 cv
168.705 50.346 169.965 50.643 170.766 51.255 cv
171.556 51.8652 172.068 52.7708 172.294 53.9715 cv
173.253 53.217 174.136 52.5907 174.941 52.0953 cv
175.629 51.6693 176.259 51.3386 176.832 51.102 cv
178.074 50.598 179.478 50.346 181.053 50.346 cv
183.366 50.346 184.932 51.03 185.76 52.407 cv
186.145 53.0478 186.333 53.8562 186.323 54.8322 cv
186.308 55.9502 186.035 57.2881 185.499 58.842 cv
184.313 62.3031 li
181.443 62.3815 178.648 62.4669 175.936 62.5583 cv
176.778 60.102 li
177.111 59.121 177.174 58.401 176.958 57.924 cv
176.652 57.177 176.094 56.808 175.275 56.808 cv
174.303 56.808 173.394 57.159 172.557 57.861 cv
171.72 58.572 171.036 59.697 170.505 61.263 cv
169.987 62.7736 li
167.091 62.8858 164.279 63.0058 161.57 63.132 cv
162.468 60.507 li
162.792 59.562 162.963 58.914 162.972 58.572 cv
162.981 58.032 162.819 57.6 162.504 57.267 cv
162.18 56.934 161.73 56.763 161.145 56.763 cv
160.191 56.763 159.282 57.123 158.427 57.843 cv
157.648 58.4994 156.988 59.5374 156.454 60.9569 cv
156.4 61.1 156.346 61.247 156.294 61.398 cv
155.599 63.4288 li
152.66 63.5843 149.846 63.7475 147.136 63.9183 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
np
188.181 62.2026 mo
192.069 50.841 li
192.087 50.841 li
188.192 62.2023 li
188.181 62.2026 li
196.548 62.0198 mo
196.767 61.38 li
197.325 59.742 198.036 58.563 198.891 57.843 cv
199.755 57.123 200.655 56.763 201.609 56.763 cv
202.194 56.763 202.644 56.934 202.968 57.267 cv
203.292 57.6 203.445 58.032 203.436 58.572 cv
203.427 58.914 203.265 59.562 202.941 60.507 cv
202.457 61.9172 li
202.452 61.9173 li
202.923 60.543 li
203.247 59.589 203.409 58.95 203.418 58.608 cv
203.427 58.068 203.274 57.627 202.95 57.294 cv
202.626 56.961 202.176 56.799 201.591 56.799 cv
200.637 56.799 199.737 57.159 198.873 57.879 cv
198.824 57.9198 198.775 57.9623 198.727 58.0062 cv
197.945 58.7352 197.289 59.8657 196.767 61.398 cv
196.554 62.0197 li
196.547 62.0198 196.555 62.0197 196.548 62.0198 cv
216.669 61.7515 mo
217.224 60.129 li
217.557 59.157 217.62 58.428 217.404 57.96 cv
217.107 57.213 216.54 56.835 215.721 56.835 cv
214.933 56.835 214.186 57.0718 213.49 57.5356 cv
213.334 57.6413 213.181 57.7585 213.03 57.888 cv
212.251 58.5417 211.604 59.5702 211.083 60.9658 cv
211.598 59.5538 212.247 58.5262 213.03 57.861 cv
213.867 57.159 214.767 56.808 215.739 56.808 cv
216.567 56.808 217.125 57.177 217.422 57.924 cv
217.638 58.401 217.584 59.121 217.242 60.102 cv
216.677 61.7515 li
216.669 61.7515 li
224.992 61.7026 mo
225.972 58.842 li
226.531 57.2065 226.805 55.8104 226.793 54.6579 cv
226.808 55.8136 226.534 57.2143 225.972 58.86 cv
224.998 61.7026 li
224.992 61.7026 li
198.738 53.964 mo
199.812 50.832 li
199.818 50.832 li
198.747 53.9569 li
198.744 53.9593 198.741 53.9616 198.738 53.964 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
188.192 62.2023 mo
192.087 50.841 li
192.093 50.841 li
192.096 50.832 li
199.812 50.832 li
198.738 53.964 li
198.741 53.9616 198.744 53.9593 198.747 53.9569 cv
198.741 53.9736 li
199.704 53.1672 200.619 52.504 201.488 51.9859 cv
202.032 51.6596 202.558 51.3886 203.067 51.174 cv
204.39 50.616 205.848 50.346 207.45 50.346 cv
209.178 50.346 210.438 50.643 211.23 51.255 cv
212.03 51.8663 212.534 52.7738 212.759 53.9776 cv
213.202 53.6293 213.628 53.3082 214.037 53.0147 cv
215.276 52.1228 216.362 51.4877 217.296 51.102 cv
218.538 50.598 219.951 50.346 221.517 50.346 cv
223.83 50.346 225.405 51.03 226.233 52.407 cv
226.595 53.0093 226.782 53.7595 226.793 54.6579 cv
226.805 55.8104 226.531 57.2065 225.972 58.842 cv
224.992 61.7026 li
222.157 61.7136 219.4 61.7299 216.677 61.7515 cv
217.242 60.102 li
217.584 59.121 217.638 58.401 217.422 57.924 cv
217.125 57.177 216.567 56.808 215.739 56.808 cv
214.767 56.808 213.867 57.159 213.03 57.861 cv
212.247 58.5262 211.598 59.5538 211.083 60.9658 cv
211.044 61.0689 211.006 61.1739 210.969 61.281 cv
210.789 61.8069 li
207.944 61.838 205.179 61.8747 202.457 61.9172 cv
202.941 60.507 li
203.265 59.562 203.427 58.914 203.436 58.572 cv
203.445 58.032 203.292 57.6 202.968 57.267 cv
202.644 56.934 202.194 56.763 201.609 56.763 cv
200.655 56.763 199.755 57.123 198.891 57.843 cv
198.036 58.563 197.325 59.742 196.767 61.38 cv
196.548 62.0198 li
193.693 62.0745 190.907 62.1354 188.192 62.2023 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
np
228.892 61.691 mo
228.894 61.6864 228.895 61.6816 228.897 61.677 cv
229.258 60.6194 229.704 59.6255 230.234 58.6949 cv
229.712 59.6161 229.272 60.5984 228.915 61.641 cv
228.909 61.6577 228.904 61.6743 228.898 61.691 cv
228.892 61.691 li
253.894 61.6197 mo
254.391 59.9549 254.639 58.4919 254.637 57.2329 cv
254.641 58.4914 254.395 59.9544 253.899 61.6197 cv
253.894 61.6197 li
246.168 59.697 mo
246.147 59.697 li
246.527 58.1093 246.489 56.9751 246.033 56.295 cv
245.574 55.602 244.773 55.251 243.63 55.251 cv
242.856 55.251 242.113 55.4324 241.399 55.7949 cv
240.908 56.0466 240.431 56.3843 239.967 56.808 cv
239.241 57.4529 238.596 58.4191 238.022 59.697 cv
238.014 59.697 li
238.59 58.41 239.238 57.438 239.967 56.79 cv
241.11 55.746 242.334 55.224 243.648 55.224 cv
244.791 55.224 245.592 55.566 246.051 56.259 cv
246.51 56.952 246.555 58.095 246.168 59.697 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
228.898 61.691 mo
228.904 61.6743 228.909 61.6577 228.915 61.641 cv
229.272 60.5984 229.712 59.6161 230.234 58.6949 cv
231.029 57.2999 232.014 56.0475 233.188 54.9363 cv
233.736 54.4161 234.324 53.9269 234.954 53.469 cv
237.834 51.39 241.173 50.346 244.98 50.346 cv
248.076 50.346 250.353 50.814 251.82 51.75 cv
253.287 52.677 254.187 54.036 254.511 55.809 cv
254.594 56.2502 254.636 56.7249 254.637 57.2329 cv
254.639 58.4919 254.391 59.9549 253.894 61.6197 cv
247.392 61.6634 240.666 61.686 233.676 61.686 cv
232.067 61.686 230.473 61.6877 228.898 61.691 cv
238.022 59.697 mo
238.02 59.7031 238.017 59.7089 238.014 59.715 cv
246.143 59.715 li
246.145 59.7089 246.146 59.703 246.147 59.697 cv
246.168 59.697 li
246.555 58.095 246.51 56.952 246.051 56.259 cv
245.592 55.566 244.791 55.224 243.648 55.224 cv
242.334 55.224 241.11 55.746 239.967 56.79 cv
239.238 57.438 238.59 58.41 238.014 59.697 cv
238.022 59.697 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
np
259.416 61.577 mo
261.018 56.898 li
257.967 56.898 li
260.037 50.841 li
260.052 50.841 li
260.055 50.832 li
260.058 50.832 li
257.985 56.871 li
261.036 56.871 li
259.423 61.577 li
259.41 61.5771 259.428 61.5769 259.416 61.577 cv
267.741 61.4909 mo
269.325 56.871 li
273.879 56.871 li
275.952 50.832 li
275.958 50.832 li
273.879 56.889 li
273.864 56.889 li
273.861 56.898 li
269.322 56.898 li
267.75 61.4908 li
267.741 61.4909 li
271.41 50.814 mo
271.404 50.814 li
274.205 42.6181 li
274.212 42.615 li
271.41 50.814 li
263.106 50.814 mo
263.097 50.814 li
264.447 46.881 li
264.454 46.8781 li
263.106 50.814 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
259.423 61.577 mo
261.036 56.871 li
257.985 56.871 li
260.058 50.832 li
263.091 50.832 li
263.097 50.814 li
263.106 50.814 li
264.454 46.8781 li
264.461 46.8749 li
264.465 46.863 li
274.205 42.6181 li
271.404 50.814 li
271.41 50.814 li
271.404 50.832 li
275.952 50.832 li
273.879 56.871 li
269.325 56.871 li
267.741 61.4909 li
265.018 61.5235 262.238 61.5523 259.423 61.577 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
np
276.354 61.3724 mo
279.963 50.841 li
279.972 50.841 li
276.362 61.3722 li
276.354 61.3724 li
284.978 61.2213 mo
285.663 59.8345 286.364 58.7891 287.082 58.086 cv
287.982 57.195 288.981 56.745 290.061 56.745 cv
290.628 56.745 291.33 56.952 292.167 57.357 cv
296.739 51.4742 li
296.742 51.4762 296.745 51.478 296.748 51.48 cv
292.167 57.375 li
292.164 57.3737 292.162 57.3725 292.159 57.3712 cv
292.149 57.384 li
291.312 56.979 290.61 56.781 290.043 56.781 cv
289.092 56.781 288.216 57.1177 287.409 57.8029 cv
287.401 57.8097 287.393 57.8168 287.385 57.8237 cv
287.367 57.8398 287.348 57.8559 287.329 57.8723 cv
287.311 57.8883 287.293 57.9046 287.275 57.9208 cv
287.266 57.9298 287.256 57.9386 287.246 57.9476 cv
287.228 57.9639 287.211 57.9806 287.193 57.9972 cv
287.182 58.0078 287.17 58.0182 287.159 58.029 cv
287.145 58.0427 287.131 58.0566 287.116 58.0705 cv
287.101 58.086 287.085 58.1015 287.069 58.1173 cv
286.358 58.8171 285.664 59.8519 284.985 61.2212 cv
284.974 61.2214 284.989 61.2211 284.978 61.2213 cv
286.515 54.351 mo
287.715 50.832 li
287.721 50.832 li
286.525 54.3386 li
286.522 54.3428 286.518 54.3468 286.515 54.351 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
276.362 61.3722 mo
279.972 50.841 li
279.978 50.841 li
279.981 50.832 li
287.715 50.832 li
286.515 54.351 li
286.518 54.3468 286.522 54.3428 286.525 54.3386 cv
286.522 54.3477 li
287.781 52.8342 288.898 51.7912 289.881 51.219 cv
290.007 51.1455 290.135 51.0768 290.265 51.0126 cv
291.153 50.5683 292.11 50.346 293.13 50.346 cv
294.351 50.346 295.554 50.7221 296.739 51.4742 cv
292.167 57.357 li
291.33 56.952 290.628 56.745 290.061 56.745 cv
288.981 56.745 287.982 57.195 287.082 58.086 cv
286.364 58.7891 285.663 59.8345 284.978 61.2213 cv
282.165 61.2761 279.285 61.3267 276.362 61.3722 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
np
297.513 60.9384 mo
300.969 50.841 li
300.987 50.841 li
297.526 60.938 li
297.513 60.9384 li
305.881 60.7031 mo
309.261 50.832 li
309.267 50.832 li
305.883 60.703 li
305.881 60.7031 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
297.526 60.938 mo
300.987 50.841 li
300.993 50.841 li
300.996 50.832 li
309.261 50.832 li
305.881 60.7031 li
303.148 60.7865 300.381 60.8644 297.526 60.938 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
np
310.245 60.5643 mo
310.468 60.02 310.707 59.5012 310.963 59.008 cv
310.708 59.5011 310.47 60.0202 310.249 60.5642 cv
310.245 60.5643 li
318.664 60.2627 mo
319.248 59.0838 319.954 58.151 320.778 57.465 cv
321.957 56.484 323.235 55.998 324.603 55.998 cv
325.692 55.998 326.475 56.232 326.961 56.691 cv
327.438 57.168 327.645 57.861 327.573 58.779 cv
335.709 57.744 li
335.714 57.5958 335.717 57.4498 335.717 57.3061 cv
335.717 57.4557 335.715 57.6076 335.709 57.762 cv
335.691 57.7643 li
335.691 57.7665 335.691 57.7688 335.691 57.771 cv
327.555 58.806 li
327.627 57.888 327.42 57.195 326.934 56.727 cv
326.448 56.259 325.665 56.025 324.585 56.025 cv
323.217 56.025 321.939 56.52 320.76 57.501 cv
320.467 57.7444 320.19 58.0183 319.928 58.3229 cv
319.459 58.8704 319.041 59.517 318.672 60.2624 cv
318.664 60.2627 li
335.691 57.753 mo
335.691 57.753 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
310.249 60.5642 mo
310.47 60.0202 310.708 59.5011 310.963 59.008 cv
311.511 57.9515 312.136 57.0116 312.84 56.187 cv
313.598 55.2964 314.471 54.4842 315.448 53.7501 cv
315.671 53.5806 315.9 53.4149 316.134 53.253 cv
317.394 52.398 318.6 51.759 319.761 51.336 cv
321.606 50.679 323.784 50.346 326.304 50.346 cv
329.823 50.346 332.298 50.976 333.711 52.236 cv
335.043 53.4159 335.711 55.1011 335.717 57.3061 cv
335.717 57.4498 335.714 57.5958 335.709 57.744 cv
327.573 58.779 li
327.645 57.861 327.438 57.168 326.961 56.691 cv
326.475 56.232 325.692 55.998 324.603 55.998 cv
323.235 55.998 321.957 56.484 320.778 57.465 cv
319.954 58.151 319.248 59.0838 318.664 60.2627 cv
315.919 60.3687 313.131 60.4687 310.249 60.5642 cv
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
np
342.445 59.128 mo
348.09 42.633 li
348.096 42.633 li
348.102 42.615 li
361.782 42.615 li
364.482 42.615 366.534 42.984 367.938 43.713 cv
369.351 44.451 370.368 45.495 370.98 46.863 cv
371.476 47.9727 371.73 49.2307 371.736 50.6366 cv
371.737 50.958 371.725 51.2871 371.7 51.624 cv
371.573 53.3368 371.198 55.1457 370.575 57.0427 cv
367.555 57.3255 364.383 57.5994 361.046 57.8638 cv
361.078 57.7708 361.111 57.6771 361.143 57.582 cv
362.223 54.423 362.457 52.263 361.827 51.093 cv
361.188 49.932 359.685 49.347 357.3 49.347 cv
355.005 49.347 li
354.993 49.383 li
354.99 49.383 li
353.244 54.486 li
351.855 58.5378 li
348.837 58.7424 345.701 58.9393 342.445 59.128 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 95.2241 ]ct
[30 0 0 17.28 342 35.7041 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 125 
/H 72 
/M[125 0 0 -72 0 72 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 125 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 125 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 125 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 125 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
KZsI<L33@oL]I<,MD=qNN6M$<NcapoO9"l,OtlLNPg&T<Q?;KoQiQG+RP=!MSBU/<Soj&oTE+"*U+bKL
Us._<VKCVoVuYR)W\2uKXN]:<Y&r1oYQ3-)Z7aPK[*6j<[WKao\,a](\h2%J]ZeE<^3%<o^];8'_CUAa
s)a!;r;_WRq^dUUq94fApN2F;o`1'Ro.,tSn][6AmrXk;m/WLRlRA8Ol-,[AkB*;;jT(qRj!g]OiQS+A
hfP`;h#OARgF0'Mg!$PAf6"0;eGufRdjMFKdEJuAcZHU;blG6Rb9jeIaiqEAa)o%;`;m[R_^<5IKZsI<
L33@oL]I;uMC&)BN6M$<NcapoO9"ktOsKSAPg&T<Q?;KoQiQFtRO%.ASBU/<Soj&oTE+!sU*JX@Us._<
VKCVoVuYQrWZp-?XN]:<Y&r1oYQ3,rZ6I]?[*6j<[WKao\,a\q\fo2>]ZeE<^3%<o^];7p_B=NUs)a!;
r;_WRq]C\;q94fApN2F;o`1'Ro,j,;n][6AmrXk;m/WLRlQ2K9l-,[AkB*;;jT(qRiuOj7iQS+AhfP`;
h#OARgE!:7g!$PAf6"0;eGufRdi>Y5dEJuAcZHU;blG6Rb8\#3aiqEAa)o%;`;m[R_]-H3KZsI<L33@o
L]I;jMAl<7N6M$<NcapoO9"kiOr<f6Pg&T<Q?;KoQiQFhRMb;5SBU/<Soj&oTE+!hU);k5Us._<VKCVo
VuYQgWYa@4XN]:<Y&r1oYQ3,fZ51j3[*6j<[WKao\,a\f\e`E3]ZeE<^3%<o^];7e_A.aJs)a!;r;_WR
q\4o%q94fApN2F;o`1'Ro+R9#n][6AmrXk;m/WLRlP#^#l-,[AkB*;;jT(qRitA(!iQS+AhfP`;h#OAR
gC^Ftg!$PAf6"0;eGufRdh/ktdEJuAcZHU;blG6Rb7M5raiqEAa)o%;`;m[R_[jTpKZsI<L33@oL]I;_
M@]O,N6M$<NcapoO9"k^Oq.$+Pg&T<Q?;KoQiQF^RL\T+SBU/<Soj&oTE+!]U(-)*Us._<VKCVoVuYQ]
WX[Y*XN]:<Y&r1oYQ3,\Z4,.)[*6j<[WKao\,a\[\dQX(]ZeE<^3%<o^];7[_@)%@s)a!;r;_WRq[/2f
q94fApN2F;o`1'Ro*LQdn][6AmrXk;m/WLRlNs!dl-,[AkB*;;jT(qRis;@biQS+AhfP`;h#OARgBX_`
g!$PAf6"0;eGufRdg!)^dEJuAcZHU;blG6Rb6GN^aiqEAa)o%;`;m[R_Zdm\KZsI<L33@oL]I;TM?Nb!
N6M$<NcapoO9"kUOp1C"Pg&T<Q?;KoQiQFURK_s"SBU/<Soj&oTE+!VU'BT#Us._<VKCVoVuYQWWX%5$
XN]:<Y&r1oYQ3,WZ3Se$[*6j<[WKao\,a\X\d6F%]ZeE<^3%<o^];7Y_?k_~>

%%EndBinary
grestore
np
342.434 59.1286 mo
348.084 42.633 li
348.09 42.633 li
342.445 59.128 li
342.437 59.1284 342.442 59.1281 342.434 59.1286 cv
351.855 58.5378 mo
353.244 54.486 li
351.857 58.5376 li
351.855 58.5378 li
361.036 57.8646 mo
361.066 57.7801 361.095 57.6952 361.125 57.609 cv
362.205 54.459 362.43 52.29 361.8 51.129 cv
361.17 49.959 359.667 49.383 357.282 49.383 cv
354.993 49.383 li
355.005 49.347 li
357.3 49.347 li
359.685 49.347 361.188 49.932 361.827 51.093 cv
362.457 52.263 362.223 54.423 361.143 57.582 cv
361.111 57.6771 361.078 57.7708 361.046 57.8638 cv
361.039 57.8643 361.043 57.864 361.036 57.8646 cv
370.575 57.0427 mo
371.198 55.1457 371.573 53.3368 371.7 51.624 cv
371.725 51.2871 371.737 50.958 371.736 50.6366 cv
371.737 50.9638 371.725 51.2988 371.7 51.642 cv
371.573 53.3469 371.201 55.147 370.584 57.0419 cv
370.575 57.0427 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
376.452 56.4617 mo
375.309 54.9744 375.12 53.0921 375.903 50.814 cv
376.178 50.0076 376.571 49.2237 377.078 48.4637 cv
377.53 47.7911 378.072 47.1373 378.702 46.503 cv
379.213 45.9888 379.775 45.516 380.388 45.0843 cv
381.399 44.3668 382.544 43.7656 383.823 43.281 cv
385.875 42.498 388.449 42.111 391.554 42.111 cv
395.361 42.111 398.016 42.822 399.537 44.235 cv
400.575 45.2048 401.095 46.5732 401.101 48.3343 cv
401.102 49.1333 400.998 50.0138 400.788 50.976 cv
391.932 51.48 li
392.166 50.139 392.013 49.167 391.482 48.555 cv
390.951 47.943 390.042 47.637 388.737 47.637 cv
387.666 47.637 386.784 47.871 386.082 48.321 cv
385.389 48.771 384.93 49.329 384.705 49.977 cv
384.652 50.1317 384.626 50.2807 384.624 50.4244 cv
384.616 50.7313 384.722 51.0152 384.939 51.282 cv
385.236 51.669 386.145 52.038 387.648 52.371 cv
390.354 53.0035 392.45 53.636 393.948 54.2753 cv
388.876 55.036 383.077 55.7704 376.452 56.4617 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 95.2241 ]ct
[26.64 0 0 15.12 374.88 38.3441 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 111 
/H 63 
/M[111 0 0 -63 0 63 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 111 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 111 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 111 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 111 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
P0EH<U3,>oZ2i9,_D/mNd`et<icLjonc4h-!6gYNn8tFIhuL(`cnN?k^s(9OY]SoITE+Q`OtZjZPg&T<
UibJoZiJE*`%SmLeBG+<jE.!ooDk%,rlgYOmW>:Ih>jq`c7R!e^<G-OY&rcIScJE`OtHXVQH\`<VKCVo
[K+Q'`[m:snT:LIi;g.`d4<'a_9C?OZ#nuIT`FW`Ot$IUPK`N<UNGDoZN/?%_^`IGe',%<j)gpoo)Oq&
s3-_OmrY@IhZ1"`cR?^[^Wb3OYB8iIT)eK`Osg7QQ-AZ<V0(Po[/eK!`?r=Ce]b1<j`I'oo`1.$rQLSO
m<#4Ih#Ok`bpC@UP0EH<U3,>oZ2i8t_BctAd`et<icLjonc4gt!6gYNn8tFIhuL(`cm-FQ^s(9OY]SoI
TE+Q`Os9qMPg&T<UibJoZiJDq`$)n>eBG+<jE.!ooDk$trlgYOmW>:Ih>jq`c61(K^<G-OY&rcIScJE`
OrsYHQH\`<VKCVo[K+Po`ZLAfnT:LIi;g.`d2p.G_9C?OZ#nuIT`FW`OrXPHPK`N<UNGDoZN/>m_]?P:
e',%<j)gpoo)Opns3-_OmrY@IhZ1"`cPseA^Wb3OYB8iIT)eK`OrODEQ-AZ<V0(Po[/eJj`>ZJ7e]b1<
j`I'oo`1-mrQLSOm<#4Ih#Ok`bo"G;P0EH<U3,>oZ2i8h_AL,5d`et<icLjonc4gh!6gYNn8tFIhuL(`
ckaM7^s(9OY]SoITE+Q`Or")APg&T<UibJoZiJDe`"g&2eBG+<jE.!ooDk$grlgYOmW>:Ih>jq`c4n53
^<G-OY&rcIScJE`Oq[f<QH\`<VKCVo[K+Pb`Y+HYnT:LIi;g.`d1X;/_9C?OZ#nuIT`FW`Oq@]<PK`N<
UNGDoZN/>`_[sW-e',%<j)gpoo)Opbs3-_OmrY@IhZ1"`cO[r)^Wb3OYB8iIT)eK`Oq.K8Q-AZ<V0(Po
[/eJ^`=BW+e]b1<j`I'oo`1-brQLSOm<#4Ih#Ok`bmhZ%P0EH<U3,>oZ2i8]_@=?*d`et<icLjonc4g]
!6gYNn8tFIhuL(`cjR`!^s(9OY]SoITE+Q`Op_65Pg&T<UibJoZiJDZ`!X9'eBG+<jE.!ooDk$\rlgYO
mW>:Ih>jq`c3_Gr^<G-OY&rcIScJE`OpM$1QH\`<VKCVo[K+PW`Wq"~>

%%EndBinary
grestore
np
376.416 56.4655 mo
375.289 54.9819 375.106 53.1071 375.885 50.841 cv
376.163 50.0251 376.562 49.2321 377.078 48.4637 cv
376.571 49.2237 376.178 50.0076 375.903 50.814 cv
375.12 53.0921 375.309 54.9744 376.452 56.4617 cv
376.441 56.4629 376.427 56.4643 376.416 56.4655 cv
391.914 51.516 mo
392.139 50.175 391.995 49.194 391.464 48.591 cv
390.933 47.979 390.024 47.673 388.719 47.673 cv
387.648 47.673 386.766 47.898 386.064 48.357 cv
385.944 48.435 385.831 48.5161 385.725 48.6001 cv
385.229 49.0022 384.889 49.4656 384.705 49.995 cv
384.655 50.1432 384.628 50.2861 384.624 50.4244 cv
384.626 50.2807 384.652 50.1317 384.705 49.977 cv
384.93 49.329 385.389 48.771 386.082 48.321 cv
386.784 47.871 387.666 47.637 388.737 47.637 cv
390.042 47.637 390.951 47.943 391.482 48.555 cv
392.013 49.167 392.166 50.139 391.932 51.48 cv
400.788 50.976 li
400.998 50.0138 401.102 49.1333 401.101 48.3343 cv
401.104 49.139 401 50.0257 400.788 50.994 cv
400.772 50.9949 li
400.771 50.9976 400.771 51.0004 400.77 51.003 cv
391.914 51.516 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
310.131 48.258 mo
301.86 48.258 li
303.786 42.633 li
303.792 42.633 li
301.878 48.231 li
310.149 48.231 li
312.069 42.615 li
312.075 42.615 li
310.149 48.249 li
310.134 48.249 li
310.131 48.258 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
310.149 48.231 mo
301.878 48.231 li
303.792 42.633 li
303.798 42.633 li
303.804 42.615 li
312.069 42.615 li
310.149 48.231 li
level3{
gsave
clp
[-1.59201e-06 -36.4209 36.4209 -1.59201e-06 255.186 75.689 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
np
grestore
55.44 33.354 mo
55.44 38.079 49.167 41.895 41.427 41.895 cv
33.696 41.895 27.423 38.079 27.423 33.354 cv
27.423 30.186 li
27.423 34.902 33.696 38.727 41.427 38.727 cv
49.167 38.727 55.44 34.902 55.44 30.186 cv
55.44 33.354 li
f
55.44 39.996 mo
55.44 44.712 49.167 48.528 41.427 48.528 cv
33.696 48.528 27.423 44.712 27.423 39.996 cv
27.423 36.819 li
27.423 41.535 33.696 45.36 41.427 45.36 cv
49.167 45.36 55.44 41.535 55.44 36.819 cv
55.44 39.996 li
f
55.44 46.206 mo
55.44 50.922 49.167 54.747 41.427 54.747 cv
33.696 54.747 27.423 50.922 27.423 46.206 cv
27.423 43.038 li
27.423 47.754 33.696 51.57 41.427 51.57 cv
49.167 51.57 55.44 47.754 55.44 43.038 cv
55.44 46.206 li
f
73.0576 68.8804 mo
73.0576 73.5972 66.7847 77.4194 59.0474 77.4194 cv
51.3101 77.4194 45.0391 73.5972 45.0391 68.8804 cv
45.0391 65.7104 li
45.0391 70.4253 51.3101 74.2495 59.0474 74.2495 cv
66.7847 74.2495 73.0576 70.4253 73.0576 65.7104 cv
73.0576 68.8804 li
cp
f
73.0576 75.5151 mo
73.0576 80.23 66.7847 84.0542 59.0474 84.0542 cv
51.3101 84.0542 45.0391 80.23 45.0391 75.5151 cv
45.0391 72.3433 li
45.0391 77.0601 51.3101 80.8843 59.0474 80.8843 cv
66.7847 80.8843 73.0576 77.0601 73.0576 72.3433 cv
73.0576 75.5151 li
cp
f
73.0576 81.7261 mo
73.0576 86.4429 66.7847 90.2671 59.0474 90.2671 cv
51.3101 90.2671 45.0391 86.4429 45.0391 81.7261 cv
45.0391 78.5581 li
45.0391 83.2729 51.3101 87.0952 59.0474 87.0952 cv
66.7847 87.0952 73.0576 83.2729 73.0576 78.5581 cv
73.0576 81.7261 li
cp
f
37.6445 68.9448 mo
37.6445 73.6616 31.3716 77.4858 23.6348 77.4858 cv
15.8975 77.4858 9.62549 73.6616 9.62549 68.9448 cv
9.62549 65.7749 li
9.62549 70.4917 15.8975 74.3159 23.6348 74.3159 cv
31.3716 74.3159 37.6445 70.4917 37.6445 65.7749 cv
37.6445 68.9448 li
cp
f
37.6445 75.5815 mo
37.6445 80.2964 31.3716 84.1187 23.6348 84.1187 cv
15.8975 84.1187 9.62549 80.2964 9.62549 75.5815 cv
9.62549 72.4097 li
9.62549 77.1265 15.8975 80.9487 23.6348 80.9487 cv
31.3716 80.9487 37.6445 77.1265 37.6445 72.4097 cv
37.6445 75.5815 li
cp
f
37.6445 81.7925 mo
37.6445 86.5093 31.3716 90.3315 23.6348 90.3315 cv
15.8975 90.3315 9.62549 86.5093 9.62549 81.7925 cv
9.62549 78.6226 li
9.62549 83.3374 15.8975 87.1616 23.6348 87.1616 cv
31.3716 87.1616 37.6445 83.3374 37.6445 78.6226 cv
37.6445 81.7925 li
cp
f
24.84 67.095 mo
31.437 57.618 li
31.725 57.204 31.626 56.628 31.212 56.34 cv
30.789 56.052 30.222 56.151 29.934 56.574 cv
23.328 66.042 li
23.04 66.456 23.139 67.032 23.562 67.32 cv
23.976 67.608 24.543 67.509 24.84 67.095 cv
f
59.382 66.042 mo
52.785 56.574 li
52.497 56.151 51.921 56.052 51.507 56.34 cv
51.093 56.628 50.985 57.204 51.282 57.618 cv
57.879 67.095 li
58.167 67.509 58.743 67.608 59.157 67.32 cv
59.571 67.032 59.679 66.456 59.382 66.042 cv
f
80.559 53.6548 mo
80.559 33.669 li
80.55 27.045 75.069 21.663 68.373 21.654 cv
14.076 21.654 li
7.38 21.663 1.899 27.045 1.899 33.669 cv
1.899 53.4883 li
0.55924 52.3964 0 51.669 0 51.669 cv
0 0 li
82.665 0 li
82.665 51.669 li
82.665 51.669 82.048 52.471 80.559 53.6548 cv
0 0 0 0 cmyk
f
41.337 63.378 mo
36.3337 63.378 31.8915 63.0976 27.9525 62.6238 cv
31.437 57.618 li
31.725 57.204 31.626 56.628 31.212 56.34 cv
31.0495 56.2294 30.8658 56.1759 30.6848 56.1759 cv
30.3946 56.1759 30.1114 56.3135 29.934 56.574 cv
25.9016 62.3534 li
13.9858 60.6431 7.04716 57.1443 3.402 54.6156 cv
3.402 33.669 li
3.402 30.78 4.599 28.161 6.534 26.253 cv
8.469 24.345 11.142 23.157 14.076 23.157 cv
68.373 23.157 li
71.316 23.157 73.98 24.345 75.924 26.253 cv
77.859 28.161 79.056 30.78 79.056 33.669 cv
79.056 54.758 li
75.3628 57.2713 68.4755 60.6671 56.8079 62.3477 cv
52.785 56.574 li
52.6076 56.3135 52.321 56.1759 52.0303 56.1759 cv
51.8489 56.1759 51.666 56.2294 51.507 56.34 cv
51.093 56.628 50.985 57.204 51.282 57.618 cv
54.7628 62.6184 li
50.8144 63.0954 46.3567 63.378 41.337 63.378 cv
27.423 43.038 mo
27.423 46.206 li
27.423 50.922 33.696 54.747 41.427 54.747 cv
49.167 54.747 55.44 50.922 55.44 46.206 cv
55.44 43.038 li
55.44 47.754 49.167 51.57 41.427 51.57 cv
33.696 51.57 27.423 47.754 27.423 43.038 cv
27.423 36.819 mo
27.423 39.996 li
27.423 44.712 33.696 48.528 41.427 48.528 cv
49.167 48.528 55.44 44.712 55.44 39.996 cv
55.44 36.819 li
55.44 41.535 49.167 45.36 41.427 45.36 cv
33.696 45.36 27.423 41.535 27.423 36.819 cv
27.423 30.186 mo
27.423 33.354 li
27.423 38.079 33.696 41.895 41.427 41.895 cv
49.167 41.895 55.44 38.079 55.44 33.354 cv
55.44 30.186 li
55.44 34.902 49.167 38.727 41.427 38.727 cv
33.696 38.727 27.423 34.902 27.423 30.186 cv
level3{
gsave
clp
[-3.15012e-06 -72.0664 72.0664 -3.15012e-06 41.2266 94.4741 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~b]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egf
b]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egf
b]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egf
b]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egfb]Egf
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~b]Egfb]Eghb]Eghb]Egjb]Egkb]Eglb]Egnb]Egob]Egpb]Egqb]Egsb]Egtb]Egub]Eh"b]Eh#b]Eh$
b]Eh%b]Eh'b]Eh(b]Eh)b]Eh+b]Eh+b]Eh-b]Eh.b]Eh/b]Eh1b]Eh2b]Eh3b]Eh4b]Eh6b]Eh7b]Eh8
b]Eh:b]Eh;b]Eh<b]Eh=b]Eh?b]Eh@b]EhAb]EhCb]EhCb]EhEb]EhFb]EhGb]EhIb]EhJb]EhKb]EhL
b]EhNb]EhOb]EhPb]EhRb]EhSb]EhTb]EhUb]EhWb]EhWb]EhYb]Eh[b]Eh[b]Eh]b]Eh^b]Eh_b]Eha
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~b]Ehab]Ehbb]Ehcb]Ehcb]Ehdb]Eheb]Ehgb]Ehgb]Ehhb]Ehib]Ehjb]Ehkb]Ehlb]Ehmb]Ehnb]Eho
b]Ehob]Ehqb]Ehrb]Ehsb]Ehsb]Ehtb]Ehub]Ei"b]Ei"b]Ei#b]Ei$b]Ei%b]Ei&b]Ei'b]Ei(b]Ei)
b]Ei*b]Ei*b]Ei+b]Ei-b]Ei.b]Ei.b]Ei/b]Ei0b]Ei2b]Ei2b]Ei3b]Ei4b]Ei5b]Ei6b]Ei7b]Ei8
b]Ei9b]Ei:b]Ei:b]Ei;b]Ei=b]Ei>b]Ei>b]Ei?b]Ei@b]EiAb]EiBb]EiCb]EiDb]EiEb]EiFb]EiF
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [0.4 0.6 ]
/Encode [0 1 0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
np
79.056 54.758 mo
79.056 33.669 li
79.056 30.78 77.859 28.161 75.924 26.253 cv
73.98 24.345 71.316 23.157 68.373 23.157 cv
14.076 23.157 li
11.142 23.157 8.469 24.345 6.534 26.253 cv
4.599 28.161 3.402 30.78 3.402 33.669 cv
3.402 54.6156 li
2.81876 54.211 2.32065 53.8319 1.899 53.4883 cv
1.899 33.669 li
1.899 27.045 7.38 21.663 14.076 21.654 cv
68.373 21.654 li
75.069 21.663 80.55 27.045 80.559 33.669 cv
80.559 53.6548 li
80.1318 53.9944 79.633 54.3653 79.056 54.758 cv
0 0 0 0.160784 cmyk
f
41.427 41.895 mo
33.696 41.895 27.423 38.079 27.423 33.354 cv
27.423 30.186 li
27.423 34.902 33.696 38.727 41.427 38.727 cv
49.167 38.727 55.44 34.902 55.44 30.186 cv
55.44 33.354 li
55.44 38.079 49.167 41.895 41.427 41.895 cv
f
41.427 48.528 mo
33.696 48.528 27.423 44.712 27.423 39.996 cv
27.423 36.819 li
27.423 41.535 33.696 45.36 41.427 45.36 cv
49.167 45.36 55.44 41.535 55.44 36.819 cv
55.44 39.996 li
55.44 44.712 49.167 48.528 41.427 48.528 cv
f
41.427 54.747 mo
33.696 54.747 27.423 50.922 27.423 46.206 cv
27.423 43.038 li
27.423 47.754 33.696 51.57 41.427 51.57 cv
49.167 51.57 55.44 47.754 55.44 43.038 cv
55.44 46.206 li
55.44 50.922 49.167 54.747 41.427 54.747 cv
f
27.9525 62.6238 mo
27.2532 62.5396 26.5693 62.4493 25.9016 62.3534 cv
29.934 56.574 li
30.1114 56.3135 30.3946 56.1759 30.6848 56.1759 cv
30.8658 56.1759 31.0495 56.2294 31.212 56.34 cv
31.626 56.628 31.725 57.204 31.437 57.618 cv
27.9525 62.6238 li
f
54.7628 62.6184 mo
51.282 57.618 li
50.985 57.204 51.093 56.628 51.507 56.34 cv
51.666 56.2294 51.8489 56.1759 52.0303 56.1759 cv
52.321 56.1759 52.6076 56.3135 52.785 56.574 cv
56.8079 62.3477 li
56.141 62.4438 55.4613 62.5341 54.7628 62.6184 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Brian Hill) ()%%Title: (SymmetricDS.eps)%%CreationDate: 5/22/09 9:15 AM%AI9_DataStream%Gb"-6Gs`LndQ%/R!P\_OE!L#_gf`HPf,,11!Ce@:6WfM8kE"M5J#eq$)%^?"\P_j8^%#K)GBHu2m9MkCUIhXh/XEDt8ai::Lht6H%`KVU%,"GVMS;9XY8uHR%ZVB5`8@,g<Bc=@DigOWHd(tO-P,1OLZr^p@ghQGjmM4MH,NY3(H=J7aqX%6,#L4PVE?`N1;g=mi-?f'o%CoQc5]m@Y37dRWQ@'Xg>CmE/^_cA)PelO&aWY)I]7o<PK!!f/AT,Dm_=t$k;mP3XAMn9^Kg`R-O48ScsD)Pi!0EW1>QTDY1%o*P+%r+GHPWV]e42![oCjAg-\)=DRT;Cah'QVt$@7N=saFRn2dbZb,h[$<43@dq^.'_7;Jo[h%[=`T"o^d8`-eY^rC@RM6'$>_R4p#]EA%s+!;^<[*:"0^*5Om+*hiV']#)QcNdp%_SN??AU))Dmo!D8gX<YqnH9dF/T$$2ITCpEf1L>'!W_]#hD'"r-%CBRE,@u27Io"IAX?1%Bo3t:9U./nDJBb$FuggO'XnRJl=)%8O.dg)89`!F39h>=jJZC2/6,dHXN\<DHE$+HP,Ui#p5;[.D?^$mplEZ2Li#'+.\AG7:$TO7%,>%EX1DhiF/Z-/f=aOP6BG.b`$N"3(*n`@>R6H2iXW!ZlrVQ$0K@[8(J90_35-aO9b:RtG?2%O1h<KVO0pa;7GrKd11nT<%h.j2L%+5npIB8#pXBWh!VA[&[CWm/;9n%;Ctj=t\>s6^Ykd$Y"6:M6e-e*W4[X?`)N*_FpeNMjk.kEX$ag)l/cE\N31p;8W)1$qe#Wj7n=%3>-8W3>..ed#A+/H]J.;LDbH].@3\gFf4q4.WcW&bB#BNHT&ZI+QIUrmn`u%s+Xq)hj(iU/i>+B2[1DF:;'d[Phi\'NM]qEO"K`_%J=R#u)hhn(5M`VH$VXG`S8'd!l-sLPTdJOd:oY9s6E!$DbNMr@`:QOESt)6BVqZUAd["MhfXU9ISU,t+"\PM<J:BkW[AtPW'1hdX%:lI]j(Q2"dO^p>B(q8g+Ylm+1,r0].refX+OgACiZg\Z+jsPJj6)Q5qA9$V``7dU[ai[a8PKdVnktERjbTnre`laYd,GSnYN1*U!%E^iZ6e!Y;=SOt9YM6rh^dUq3(lY.rQVNnNYQ;ZC8-C%?&;TXbp,%[[RPaO:)H:gi0.4$:<UguBO8Z%]NA29QDg.<f/-B4gme<4QE%8]jURO\K@!ksR"`9I(6o_Fg1%,G?KlKK>5l&op=EZZa>`gF53u-Z%PGCst:Yh:?Dm<c$HTXK7\ldT4L_=p`B\/BbC/9=H`N[1l9B%,Vs4Jbd<cnP7qQFZq\_#9u@)qC8rV*;Pmu8NJruX;F])*(q*ijVI:=QTc'l((pY=L=ZrOXoou&t'=t;M\u?X[Y%tU0Te!^U93PB>%BPB&p-+/D<K4ee2L8J`)GYX,CCQb,d1MU)fWC\t@g8_!<WhJ^XVQ-Yjb,V7JQ&Ll,;G(sr8LV#V.AgQ&\tUXRU+!;ka]UVKVra/5%PS;sW>-]RrZ7]pu.P%eU9+pTd"FD<.E_<P[&eHA*]HhVdK&5EsCeRB^kZtJ(4-/6T9RI(i7c7[Smp<enN<q<4\g5B)F#:\e<#+.%%*P+Ff?HKS4@q<FDb^33h3Yf+@Gsk-PJ9/=&@0Dk#XUJ.Vbm=^O(Ubdo>F'lCb8=A\Jur![9/Y@*"1Hj6X\P6Tf_75hJ(Bd5(DPd6%%=#bj*jL5s'#6:Pi15gl[A=1;-3]c/"6M@haXgi.">F*gQnMr^',!!oP#-]cFl6(037S4n9`jLTJV1:#$+O,lKpLCY#A+<I@DJ12%YVca>U(hED7`rjdCn1W3W52LQYb`+OD$%.*"^@O[Z\eliY5er\pBU%m!aF<m*_@Y8!R-^(ZDn&OUAtsA^e=qdPm,Bs!%(>>ZXqXf%-3<]e^k<U[UB+&&!HTT<8Q3F+)(hm^^q>Q-lIlBFZN4lZ!IH2Ebu;FG=[N8Q=$R$J&-`5i_D5r"4P5Ms+cq#,jpPedrXa<!n3H$H%Ap!>RGhCj\r-J3)lddTUn6b^Zfo6NemX."0mY9@u,s;jqgTLJH;K)2-)m:`NM4iG`Z,Ok$>HIJN@b_J7+<Xahlkm0En'<)i11l?%%mL1?$JW-S`_jJRIA,9Pqp%O[(QYoZm:m!r8hCaj-I%f\_YsV6G'M6*T0>Ai;',\0qT>0?G4o"Le5eeLHj<4$\7Z%mObL;<8C"cbG%Z;`[_.rBe_eE'5TJ0d'*Br2mNk;pCN*8D'_JHJGhJ-D)cN-kbe#0mbK!\BfACd_b43:*+`PK;OT/l1PrUG**V-7H72@d4l$*f(Ye%W1%Nk=>S3b2$Tk4gP:QMi))p@3%L9A5Yt'6DekdK`sR327(Nl"RWtLK!,[6[p-8_Ojbp"VM;f^ep]S6'O@Vjr+S]&C<Mc'/1N&Tn%`s`a<AlFnp\0T`C#O@8+D,lQ+V?<0iL,'#>K,G:qSFsAOW[(_`!]$i2Be.AH)8q-7[J5?q8mI_%.Y9au&-*QCO&&dW).FNk@$n(L%^,e%=!k9G%?DaH;TIS,E=kPVk?34/I_,OY%D&#M!=>e2c"H$dKRY(_&,9TQ&^;7CtgOb'Q+p&.'?m]gsQH&f;E=&u_De^f(.00<8%!64.dg!F[>'!+#9:_d5(%6Q/T15'QSS$0>4CD;IDf+a'_)!F;piWdU,#r?]E#m2k)SaE5T+p&]'Et/=aLd2n,jq@r^,rjcdhiTh)%iehPk4ou7V+U.")O?"R\jo'&SCkL%K]RGPn<E,KQ8Jn)okKHBU_@lfId)F)31A1sf<ol[tMU$c2=a1--6,G&Pn@3$5&V.VhH(JQ"%D725]#e=\iTVWMQ?Y`:h"9RLPg]EXhVE:Qo0Sml,")!4Z!*QO#'rbcF%7!Y9q.s'Q6G.>D2_6T+?j_=pL*c@mBJu&E!88oC&qjR"%W5OOjJcm$_P6b:>3,K4o.3,MmKPGnKMJcW<KgtchU!Qf'!tA7!.9BK"en?.bT`lmQF=j_1%&aLJ8/3ocP12Xa!7Q*"XI6R5P&)"`%$FYU,/F/71TV\ac4/jC:6p'<rJ8Sb3JaG>N7V:`2R\7W",QURu7ps>n7H_!W9TuqC_&_Ga:6[gF=shCZ&O9a)W+[`I9u$gF/`+u$%P0JNGNk3-:;>(;uQFQ;9(?ZSd%L]2K5QH6DQUXW6FFes;Obo+;e/n[-=d>*[R'Ke0VK;[cAdE4YMn!3NL_-56U2-_@,/F/3,lioM%&?)T_3!OmN&:>l>(KLNQbs^5"9)qd[&V@nZga9(Yb9c2E/.ITA,pO5*&n?'=eRi%h5[R;bQ,nK1D;eq;@tY,0Ql!2BbcQJUCVndR%9M[rI?n[/9.l\7Uee24h<.:"QQ\?QtTep@6#tS-Z=\JkfFgj%s!*3q=-!=e/#(X-803n7N+P`u.#Nir9!*D-V3+_6\&>4XG6=QA(%'lOK2#,PYcGX:C)9e`Zf@A&]ZhMA%;@tClfm>,FEJ"8,[S+TX2(=WIO?QcR!'kJG>LUMnS&>^NX0UE#pWbM$t^tIoL!L\fY:eX%g%I'f0a-.H?Z/N'1.)$3'8fI/FAd5.FE$/(UQK*+!1c$gf;6a8VY3`.pu%YcB`UJPe8-`5TUY)FV6]Vb1#A/#N*=%8KEH`n@)<VG5n%!6W)AkT5SW2*gW'UM3%g`7p`D-M.CI=qe=Y=\]Rg%;ft46DcOINOMmrFQUAf=bo=/:Q,Ea*!'_J9is7sh`2/N]nKi]7hk/;'BRR<%2?;IJc@?^I$bWpIEFDfiWhaLJbr(UM248/B!.m,9d&nk.[K*a04YSSp1c8MVSSoA/=NNo$-(C4a%ml4*@iF"W2sh/riiIYpdJEWb%@hUGMEW_4AiBXX7Ld4;"@[R:2kQ6=]if\/!cOms].@\%5`aG)VX+<]M5R;+E"c0EQ[(7OK*ErV_9lphPRl(]*_#0i]-!LG%+etXU%\ShL6>Eq4q!.cC\9`h)CQAU@J$itli=jdi^e*."6a9GCtfb=EY(:lWXO%0>AB(I<62]%"1MXI"V8^QNXW&[$DMtibM!J#=$"s@ai%P8aKo2QD(/ASQes<<\.U;/Q@Ba>b"N1a>9mfEu`"!N9e4dgS\)])Z6`6t;ur9EUKe4H.aC2b8HS8qJ@arsiH%W%`7/_rbf%C%9#]%=<e:Y[>ZmA"Y1/:WfDJBrD?9(:,TD4"lhkeehgW7FA;h;=t"W;krDR/#r/rB8$L\q+bk^]3.TsD7mMnS5V8Y1C#$RU^<6ToJh%oE%k0=.SJGFC-n?9ib$$<$oJ?#Rk:r*mn!s[3uqE)a6RYmPdRP>#"(#s.JV@j3Z_#E9G,$I?eN(=Nt/_!r>;gTDpBk/>b\4[b1[F#;R%]YK'/D=cFR#%r-hlVNO7Tf:)`KT6e2LMjDK#e2Ap5Xe1=g*/g6c5mmC";peF"?KGaET`'#&BlJ+,6/Z<DMm@<"2reV%RB\p#le.B%hCTqU'NE.#EP$8t<gdogd$Hb@)DQ#>E"s3diY#brSg].&?/s*?"6pHFE5pfj"ops$hukl(('lbUi+aID"^l*-);+"TCpHcPhZbm0%V(JDu&2.=%0(jU/L]J6lbu5#RBPN-&1fXZP@Wb9G<O`/;TtKMDVdsfj8f[">L;4EV&RfR[$GcRQ2X3gSB`V$D&k?1_Nkc.CO>]n5%!73JQ%0n]RK'O$W=aV5]&J21"HABLF$n)F+NlrDnaiK=)JjCsPDkflYLot/O70oJ20t%=[C*Uc$(+OD-2DE6]a\9\SB^0>/G;CAd%Y]3$aJu=e@JW3]mLc,L\)Xa?BGa8>0C^C]3-4m,10WWF#!t8+gYd9)0-r>_r7%6ZI"RE7Ag;3dPciO8I7uK^CL]M@%p\@@ckRU9h%A>GTb%mWiTTOmUqJX,2n2M)W!63&@q`rRcUj'[[.d<[KFX+Ni<<TI8IV,DGF,qq8C].gT;"c*r5k&q)^^2HBP;$PNqYR;*E^Qp)e%WCP3HT)`l%'[GJ@:K6Si#hO]`P(7C8Y&,?a;tr$N%i,1:cH_Q/cqN[l<NA)4P2#&"%Fc`c`)b(^rDQA/oIQPa/=<"T+p_5k6uR\_%i<1Rh>ff"/5[[4*Z^CC3M1-6JOm=#SJr*g7DP5%H_o+-KY#LD,(0%.VTiEC!GQu)[#-igENYAXm$F/%l!O*9`J0uN@80_]k"tHbV%W,J/0<Mh9e*3=.pdpQ;f##m-IM4$J):Op<QVPY$sC*M$O\T%eG@H6M63qMESOsH4?!7*A&,kiqhBa)g:FAnR-JE0jabb!+4$32P*%\j;(,nR&`L+]r\>bpP<?C8:XD/2mQO#u;:X'&+R9ht'7R5iuH^:groo(E#gj*2uM!"H&(p@hVXpcTp,5RtkTt#!sFi^V=Ag639;O%SO?oMB;=c#5X2)UM#]rQ6*"H]_6fT):4T>k9H2l1!*Uj55.[sVFs&]MH/&io:"QU$575h1mTVJS0I,4>_[=O8a(f*Ff]J1o!=J:G%.St[]QL#(k,mZ&1!GjJB"dQKfQNOI0@nn!;b8(RJL^6f!!76s`mmj)jlu*.S@[e-.^^sP6g."8hM@R19]lcPF8!P-.:4N[1O6RS`%p2-t"X<mfB^_6KX"3Q?X(nG-*!]@c&$Th$L3sNXITYXMh'S/O[>;`Q00Q%,gT+%q17l$`K9*R.1qP471q!;kPN%i/q,Pmo95_Z9Q%RhueLJ8'ncrCff!`"E6KH)3'EB^q/n^s$RJjIhRRj!"J4P(LV03*G5`84XRr[F!@Qd4eDYa;QOcLc0oJ#[e?BbWc+6drg+Q$U>+d%\FY[8D3:J&l`,gV]tk?F$tr9^"hl?P^t_/*`PNJm:dOoC8N)S/2<!"'m!Op=+;o"#g,;S6)Vf&)5`I..%:,KUO\c'AC4gIdDDkj:%645,-9O'is(gP0e\,mrHP_9?QShC*_(rL+d^^G[MN0t(t>QcN3G[dlTVM$A[%N@g57JpVh1C@MaYrKM9@P_1^iD-i_rG^HaR/foj%B>1U)NboMb!u8PR-9M$4q^Tn,85iqID&tA4:cDro3,Cutg*.7V<4$'hmp:s<j3Rd=&8TV-@"NOY2dj[l'SoVm`h`Z/QY@XE6V'.d%/Sp<%'7d).[&M8c2$%H4d)mI4h67JE\#B?q<FUcZA&Ad-/3Oh^#fn`Y#];L@=oq[`a124:+IX6\?I:`RfHOtUJJNZPTRd=_VBi\#%&G^PN@a:>;B+tAsD&_:]%/`ggSA?'o)9m[4C5J`?"9@R]%@J&p5UeKhP&%rUj*;tbCC;/VRnQ>>jD[pb]I"]E&Hi:BQRYcpR3YbY%:a)56!bKnI%hZ,K!2W7VmTM<"eg)Uc)DX9:<s#$d+toPi7"B0T_%Li0!RL$J/0&1clIBmnK/#._F&+m%MOHN.K,Lmq"^jLpiqsjj%1g/)TgW&Z'QeMhn7(SXr`"7JQ\^Y$K3#I](I3BoTMHl:[4af(e),pQak+2uoj'aJj`'CunjPlRFf4b@@ScSB1ACB;LZPJHEr_pMB%PEHDt__cPd65rN@\CLL[dIS>I!V82tWC!6I+O[(K@45G;B!k<<fMhsZmO"p<5h6Y9"p6<k[j3?(35-u-M?\*U/uiph`1BP\^2Ts`%;5=jZ7<$H"5A;XI-s\s81A-/Md"Dd:&jHj(>?):AO9P0MLpW@W'MT;o6Efh8T&<HCK\b.sq3)EG!>7bmP")A(,kfEE"*8$=7E0&h%e1!amLdOs***a&VQ;AhhJO^7SQ;I8eaJOqtOe7p?cnHc>8?b<<.l[R%#7TPoOhd5&h@Q>5h)lSWTWY$<XU)OV&opgbaZQ2+Rc6lZ%M"C$]WuLRHPBEeF:=L+_rrGrd'8cdHFOAIqfbje?5a'J0.'^e/&=$lTZ*J`kIO%HL)CcL?CNr\SnDo49M:A!1')i<<BZLX)f5P-P%7_ck!kI6"n1"g+Br;]&0e(.f)E?nA:Hm^VC6KY'd2u=s-"K\;o-gDhpTtZkRV]R67c-SIN(s!A`(s>..+^c/q(JULQ,!ZU("]^U0%%crOBa2.h?7)9_<=MD0GVa856'0=fUG+.k^bDSYZi(sQ>QjN<:L4ONa7_]75dm=/NMVMIhXO*Wbmicq0[?F%Z*l+Fb;'[HR68HX`%V4cEO';OZSS2,1_!,V4(5(ggS$u!_r_:(CQo)hJ?["=qc!J%<V#kK8SbfS>=e.+.X,b_%XJ2X$d,mE'\X>p9RC>l&]UFk1rjVqn:%q^Vm!Ab)(u`NLe5s+\(*"K=r^C)Fbee7Ug)S0LRAF;!i[#m9HZ.JO<H&."T<r$28jpDHUr/X`0KF5PO;B+TmP%6W9uerh2.>E[=R%@;A_LLTVT49FAh-c,9A"X?t*>R7&kbUofKAEePlp!2tb^4dD?Y!`2fa`IVE:K%IlhK5E#m^lm*9_W,e>R^-i,gW94A+t")W0dYc;%ctk37@U?0rAc,N<_;%ik1iu\&L+[0[LkfCm!<pAadT10%bt7KBFHgg8)a0*Yd:(PiVb&9<TrE;$M$<=NM;*qD%P?oOJL(@*6suuL%g)X=XC\V%=?3j*!V2<-C370$h%BUjL5haAJB?'j0)+nH4.?G]L"3FLnBE=c5*c83mPJC^&MqL91!*BljRk!HEgSuFF.4k$:,O$%*%',?3!2-KR\g#8bBXCT900oL;L_J^!`'`c8E++p+:F.e7WN0g)3(oga=/<?HhdEp=;I#`i%"#VqbJJV]FNAXgmMkf3CaDCf4EONlf%l.JUr.*EoK#r.UsAMbMH<tUBL`hCUFYt.iISt@3A2PE48$!M:']OD,Y(-]0\k)\XU`KV)/#-gRgb_RX\$s&;-OkM#+Z#$$Z73iP"%g*VH?,"]\th^sg.?SVp!p#_Pe&itcG:UPG<B"J1Z!Enqc;_4IOhI`$)?)6Yo[:_bB`'lOOp5FN5ht""8.>p/k@LXnWC)OO2MXZc\%OsROtFhAbT4OJCCMpTVcJt27:[2a%A.;sj:I\8:fq'(CT"2t:nIir4j\;c%S9,Gd*k<IbH-8<X*%0KdieB3XmE*cm^l,"b?MqT^f%=D<5&!\$B)cnG>A#lG;>T)Ks"%8.N>>"E9Va2"^.qrQFd@C:u("?\)9Pe[hAjq4Nc(0=WC/(N_C:r8d.FV,FI&h/`TPDp79Ktiqi%ZB=O5%">mM$gV"Q1LR(o"N5hASA!$]M&ENYIKgM%GS4_pi\Ld<A7=IK)%lWm0jUTn#QbD0&<EVX>@+)da/]>VMc:0`8Vk/Hc..*e%$CS#-GH,[>O9MOS>Kf@Qgm)\`J'9hI,ln,sj"\;\A%dY/Yu>HhR.RUV;)[\UUQUp0&/7tV@?Ctm0)1MI5!O'!-&@j=l>u`'+mVpe%HH64=5N/gm-ECuY'`^)n.jb*U1k>PrBPaWJ-j?p6gXNIa77'pfPLQ5'8*1*_dbd;E`#,#O']PhohqS]fOAnNNb?]/(Vc%*'huF%h%(A5aB]E)]ui[c!(GGHZUd[UG[D1aY\PsCLd=T-ZZ4J4#d"6lP*#"7bn:.\\\"45K$kgefJ)/6'Yos\M-mmCDV,\h]9IR%>*',J6-%6]9A1&<E?,q)Ca7Lq?E0[Q+ik/'h1SeWe`:.pHP$=\K,U9bT.dd"V\)i]T&c:Wd[]c\F>s,/Bou)/fKUd*b;k4g/H!+RC_DVBOFB%U]:sm9GL!=!1%c?RABGu-3/1.'9$^+10kbND-5eL)*ocfVm%/m<WYiM/?o@$q!j/*P'mJ3WJTjueW+55mp_BXnu;hPh,ZfE=<Bnh%+k)6X#5hGV<."5u+r)bUac8j0\A)-bWF;f]9Rn')N?soOd#^[`]];TZMq]NLn:G_:DXn)^UfNHUn_@CXjH&LF9<<$//h:R(),&%b%p&d;hmj\+BnH`5eE*tC"c59kX+i5A\FpDVEmQf`==B>Mg]O.P@lOmI#n1>21Q(Xg%)-VQu(_CkPccP+arBs/sGSe9$==%h'*C1Um%EhIu(9<1%_P2bY>Unt0h3`/ao]=A(lH;5.*!&S%[l?I5D&K*C)Il/OV[5e^tGVQDalbjnW\Jo@:c-$-pT[.-V,HM2GB3Cre^C<_.%,Qmlq%lkLp;5Bn/%W*>lAQA]uP8I?5]7G6,!6RWJd%`UCA-2(i.Dg5hm_?mY/-G/qXt?bb6uPo2n[]DMplO],('n_@ei!sFkDCW`%,gt1>s!`]FCD(<ZMUEpB.Z@Tap7V$D=)_rVef4/UP)![c!;'?Z>9T/4i)Z6&KY`<FVTC]8$qJ_gr2^).6Oug&5)7;Y2Nd"XPs?gu%['W7OL0dWP?sZ5f;I:bL#V$TtOH^e>%HM;\))XhkL4pcr-RdsH1jV7t@nB*0oq[(SJYkn:`67I_!=7-!q$=$Y8]"LdO=jE*6rL`]%l_B?e'hMd(HY?sY:!=F&=pg9i**VXEnPEAY).VhbRVq%-g>]o/VnZ54fI@@9\aQOR:Ru&3'iAtFZ6N<M,it[;#O5E,@$?dJ:4eB!%)/(L>cUDEe%6Wak:fJ/eQK1<`dSsHS"jqqM7C47_7a@6@>Xs,4)Pa4V51?1&8'\(['G4%ZMuX\FQcKI]1W0F;;iiIM7?USp_r0kB%X*%T6TQ%,MoC<eupj)cIG)R4a.%F=AK7NV%GcsSJkE\+<VPJ9Zq&)?s=r]38"U72"B0^J!6u"'Y;l?q&@>kt=pi9k`_'P?dr0!N6%+)i(p67_BJ,=t69BjAV1@t:]AQXG*P.[IA:a^f)\M#mZO"XbGa"??GkIaJbO^F?,`JLhrG4<gST2n"V1`=%>5&K%IJ#_F3r6u51F%JP:\$$@gbA8=JHhe8r":#e?NJ!qaE'Wg.Q?C"4.i+GibUMU;%soF21K#H`kN\PknqR44/6<T,%`]RGL:+fi!q%O9,In/?EKOpHPU%5`UISIe-_T"TZ+`o#3)*4TY_#R_]U2<K*p`AQ<^N;>4F75d*t)(u5WZ^'G3?&[dAQ+n;$CUk[Vl/ts^10j:^h9Ib8modg-u-lb!,%mK+Msor60HF.d69.(*MirAo%cPt&`+FZX2SIGQ5<pUmRnAUu6s+G&B8R@u!X$jch=#NCk"!K&JY7JRn=X!:qLk-m9cEJI+sFe0"T%W+bZh%>73RZ<77O;M,+Nq/"8.!86Aq(4a8odk#Lt<;#^[R-_Bd>:s5i6giM"ZP']=dfO!^M/,D%&Xh.M0hXm:.N-;q\p0'_VMY3>%7/iT_,sXmb$Fl]I\,rK2Oq\gk2/R0QN<]IRMBI-eS;f?WYQq&8gIgm<n\YX_^R_0Wb$W]6Y!^tY<4qk!RitTs<L8T`S)e1JNYWJ4%]erg&UdU3#48&g":D11L^i%]tLB]4iFc4XOG8L@[_Uf#8(=EG`T%qgP;*&A.HAp\UjTji$H&L)Id<G_k"E%\2Ms(!Z'S-!N!-url%Y9?l`$(g-`AQIG0%uNW'c0+Nu:rS\l!gIX5'h-$L.cBDpQ//Z6"H"I(*/dGqb\':;]TkeA-,+-0F!bRGdTF=H<:[=")d*P9!WqEt%AP1n?"aQ/_ac*nWc=Re_</2lrA7)da/Li&C-na8k_c=VY!s7OT?f-\a#V;ZCL$^)Q#iVJi_NGKk"D]Pr<7q!OJe\Ud!T29*5Y9#l%R_7i][`.K^&oad\?K+Gjkf1]^Y\Rp=\N`epNPfP@Pe]-a=V@WA.LT6do\DQqQr6=%<jL?q-!sk5.ZtrQ"KJEUON;Pa<)P'W*QW`(%'%[^(JLXDgr<WA`>DGDKf+F-'J`Hh_A;,Z8X2<T^pZiArVVqu+Wdf7d'jh+&(Wt)I6,kV9&8t0=/;4=b.+'\\^u(AeO\u`f),6?/%"i7d[0u>HjC&V0J-hF;LTT4^\P(1Pf12IAXBk]e]lPFRRTRk(8Osn_^r;5c6846Uf*!NC_D2aW>-pZ2h&OqkM!Q.nKCuTGnR"Q'M%O&1(P3B7=@Yi\39`/4F#]K&0K(0Cp4RB1A3.EZp1*KO`)*D;1O%Ajt,-rLHVU?/U9iR\t,%Mh4V_;d&IF*fouPaE<mA\9W!B80`O%W.H:?!)_%BR`nZ5KGF$ef"[-`%]8`_!=pnBnW"E<hKnKK5#.'L@NGo'kmgZ(/E=ZB$#9q`%8T[:iLVU#)!Ql+7f<6WVPqUufi8Q@%eb3ZYU<kVWT3#7-MU!P;@#Ber^ljNKD+O`<dnGX4FMB";I0buV&B-+[<[cYf;?`O@LA_$&Io7DCWUGjMEOMWd#;O+iF^0WQF^&+I%+:\W_'D,Y65ViPRmRT<\9bK,Qd[:VGiF#XPr]O$I*Wf2k`eub^9^Zp9<aoALQ[8't"u!+<ESekFn3'\"^qDeoQrai8Mg%[Q]*^P$%>F;srT5rbM&@sOIS,G+m@bZ8.roF$.ZG[fTIGW88b(+)5=aZ109ItZRa;oRqQ[DJn$KQp>:Asp&%osors&@-@GSGdEeP#^=dr!<!%Q6qn2ot&W"U@;,3([Gt(4BE`M]@EeYN;RGi-?#G]R[B;5o9&-mC8h3K1Vd1BCiB*t.CWF&hlesa00UZK?kU6=XG3"#ImVWScTBJs%9Aq=FE_DHhc-YNZo:`&G=/ji"$;D.OrT4e?G4-(*g66S*LS_%NKU.%b+`6)+'T[\F7GrN#_G^"k<>kblP0j*Ven6E77DkiHS#q"N%<HbDH2sg+>Xs)C#a*@oi_U;A,)m+.*AV87bh@Mq7)O@85dr;X9pI>TL2S=>$kk4'P<kYhOWEJG[-%.6^Zo.X`U[Wlhf&t:,<5Of!%D,lT':$:[>PQe[Pd6KkW0>B:BmYX3$3Sj;"3dH.jY:TYaCPu)ucQ3;8*bkN64Efkpl32C$I?RBMZ3Hue*Jiu>5G&Rlk16*#<tA#d%hr3CeL43i3K78eT?_R97';3WDhm&NsmR(N-*:41?*TLgOQt[JDBMTR;HiJq9n"K0"Mc`188r[i'2tZWHkT%f+g`+OX0=4n'LO2Cg%/B6Z*38>I.HUAV;`KZDrn-q_+OGA5;#7UD4TP7q'^81YT/Y>0d7ISjc39D0NBII5*os#I2(H!mjJ4B2R`>JsK75p[S[/72jO9l@-%+Tsm?Rnp9UZl4pe;b]$=*#2i7H['56c/]*DUsN@J$u_GimpVR#','/#._^\=1l/^a=JrirfH3ud)'OQLeD.o<X,m1=T!Xi@K1UqB%$XVMeYP`]Ud90#Ho=Gu+6crV_/EqHOPF0^D"74_k48$f^26Z:G_fOh\Nc.[(k\?_ZX8_#kgp;Sg#TpKtHM]96F9b`N[F'*q?jHXj%UD039'FFaTG*2bWoW%iHHfR0I6"h/,I#U;i.0Co5hT6!_p.EkIN[JAo,9Q0AEDau#.m3N\hV0.KUGTil+-d8E=2XG0N=SU89c90g%c"![$cUSj9D%PE(HOd4\T&2m;KI9.s:PeiWKS4M7T)4Th,X`[WSNQ7.-N)0]8^%?^7XI'1i.Da[3;$2@WT#hR;tQ]iSYHiK%t4d=%.d>mo\,PTSQ2JEmcpulL^Gg^`aj?Y,D?_NN)"nYCBL9]R6Z5_`quJ=&;P$rbem8%M6D'*omtm.ZNU/fjcq2!7a^E%S?bNU(`DS5a%*b4fN%qPs.`K1S\H\g_f/6OKhb"h^5Jl)q2&%m5UaX__!^IK\/q/CPr5+l'eIl1l[e_4,nNKr1('pR(#)5EqN_G`;XZ6/s'7CO?j%NAkkm[ib:gIQkF11+N,N1e#<b^BW''6ghTXiB?8l>82D2pqCZD#[IZuIZ)'IWe`hR18Cb]6PIrdXO-s;.dRDE7RLN^';!msQM%@.%3=UBBR<inR<O[A<QJKD#R=U\Fhu<*qoTA[9')Ain]@im"WDP0-"h3JlRg2]*KT&dI!E>bRnjXfa$CsI"(%WnDn0dedUYPPt/EQM&%G[CuN&+Ns9^%D_NLIWU1PTojM%o@\5MS@8hNep4o4+sMFk[c$PZk'^&(]KH_gUqcB=JYCoTMh_D;Rnn\`DCiI;_1Wr]]8(d#9eNN%J\])p^M<;sa\1q_@ZSmqpJCT6iAliTIXCN:oZ#t6Q]$Pn^TuF/J%B"djnoT_':@=I;]j'hZhA<4=5B\r?s(:9@^4E6r<scCq&S=^%ZuW/23h`a5'V'4&^ak/;bjY$2B)pKO4'!c:.]r[b*PjlHFF!`kJt[UN!0&u9+XJ<`RI.]E.3ro5V2Fk^YD+(JpWsX=>VSosMM=8:%MHStKQm'_'N/M,!,i)]"E5aNi.2mC.21R"pnq><`.jSJ6Y"#N3-N(Ida5o!nW?aZ43D=+iD)BCD#-^Tb?Oda@fuCIC>RiPBL\W_f%1bORJZ9Rdm++='-)#:pE%MO:ELYd?:b@-,lh\A=[3D=[TL0d?hjY21`*+l.qIn$?)B)kdJ&LBVuD[d\ZrboFWIr-#$hE*5W?k`Or%"Q!k^d=5k?@eVKLh`c'>=N2kU,;_G..XZ,Z6sfHU+l=k7IS\6kUCEmDN;p1Q$VgP$UQ%.b=JH>97a'9^0Qtj`$>nE1RS+K?XO"o_%/;ub34(r,P2V)MNI5^ru/9n+72q[Bl#?,E3M>n*WiJkf'N7aNtA[)P9r)ddT@WPfNa"8C"S_nXD?""_ml4mT^kb/CRf_1jG:kKSJ%n`HX,^Bl@Eq[b5`^XjE`f"58Ln?:ggJTmnXjAeX+a?'6b,4KLc5/VkOiBcP"(!_isTe[PT:aoD&mR*sW$@d.qGAFA19Fi7`JKA`)%hZnU#9VY)6&egS:nN137iuKit*O#Ls$Y"k0LWU.sc.o'lTK`]V_d9);!Pa/)S?Ni:F\qQW26R&;d8;FdQc+rB>56!6VI@5Y5*32l%En/NTI\V=!Q9sOK;2+MuhW#B?T]bf:i;#NX5^5Wle3X<F;;WUX&t4nG,R4X<8&]BcG#K''GP[ik#'WRa#=AF.bo(]Zl-rANVi'4;%n([bQD<U1'EVtsp*FAddA-1fOjT!2=nmHC#*6([qpc,f#RH*>gmRo?":4@9[,R;JLZoX;MNfT:B8''^8jREiQdeITI`^e,1,NSn#%p5G&oa%+52,NSlQG%*k#OGfrjLK=1g!#ZN20HaN9XqX(JWUYN%P%Om1'>LZqn<1fE1Z_U[/?4GkV\f<gSAa<&\a98%94tg-psau[%Yl]1iDJ1de]=iXd,.,=(eK5q1)N78B4,oGAn!\@q8DeL3KQHgkm^gqKYSlkDWELi9HE08'?J01uf%o>c=*L[*Tso!2N>lNj`n@kA%2K#%E)prKW+<K/p-20T0Q#).<*HV4`<,"5eHmrEA9<eAa1S,2I-FXD5%$^;hoQ[im:V&q]YT/e/pSs$@ZZ%V=AUK/5^/8qZTG$Q4%nD_;Tb1/bmnBjUO3IIpSGrG7i%31*'Z8O?t%PsCMMi>ZF=3_5cLBD2G??R=OD8pjjs'8StZ8=+N_im&:I5B1'N:Ssf]ZiES1X=a6%o/>XAc*.AV+#7b5jp@"X;)^4)6N-j.e/==+``]8.*nu%U53%:OB`<Y_)YOTop`19jVA.1Lk-7kMQPpc*N=c)3!(6b^N:;K/q<KiR%^B\;j?_9&d[I)<[RLf#TN">_i/`V%f%(kmH^O']tNT^)m;o<30s!Xf`)pfaf#0++C_q<8^3Skk1m#Ks`295pWC%)Z'cDe,tVs+*U%!8h-?IOilsp$Df&n4%ljpV2]+jM/52Gn1Dp[n.oPGDcQCh5CTYkcYIJp//-3_S(GRRZQFc$2ON0K`'Aholh&K,:Z4`N<%n_FiLBH%jrff%YjBNe,i;+"6cPhQd"Q'd=c\;Kamd=94`&^mP_AcYhSYnG<@KaN:N$1n]`:(Fr9\4H_UJ.X<#hQ!P.,m]MYs9ikeBQ5SCAB'%2*O]3_\aaYL=R+=pdkq\UEh_6'/E<t]XdfuP8YNW2oeLL&`/Uh;IepR)C..T3Wmm?N!$DK%a6!Z:8-p:&%tm9icE[2jN?CODbO4U%FCnr\]]8Jq%JuF=_VZlLHKuKoGj(Iqjdh-qXh-f$DRC&4lgO'1joe_uZY$1>k`\mQjon<Ao29ja2lF%UH2HrCkW7I5X)\?So&g"K%"hT_V<VUel4-JTs^I"^[Kf<o+4-9#q?J@;e!e%"oQ1/$J)o$f8q"WZ6j*);^Tl'_qU;,]WI,&o^%H&i;f3VbT=-?&9Xa7]]L;b4I%4Q6Tm6-0+8mZ7[/j7e`79p$Ip<,;9/T&Hgn$W"g)f8`EEY]ag_RRX/tbW"*sI;[\uO"%`&ED4agqI^o4OFg=%d>fZO\2;KfH_[,F%%pcsB"tB(^\G)]7]g5WU38b_\I,fb')[CcNJF>]An:gQf`rY'g#CIW$0(!/'I%fHW0TPp_1ZAeUJ`DRT%<lA'nVnd-EPsfQ&RS62%-o'U%PRMieVglL\DZH4q-L/58]]*GW$*RjZ+l>hGHlql!&Hc=3*qF).+7b=D63f^72dVHimIa=R%j0pkSfYUFiBq:inOlHkB^0e>%B)hl/*H,624NQ+bO,E(G."c`h^0,_-?Zle&Wt>R,C/1JPr4OjN;Rk-P>n3L:kH3XU0R]%"**C+lP;$RiSrJg_I=.C>hn67-fMfNo%qU3F6?PTB1ed=bc%#r`h_kul,r*%HE;0%;<gZaeMJ\UJ^^ND#O0O?gk3!8qnD1./*1sV[AYM*YNrP#co(uoc4HZKgL4Ul@#^J%BQ%i-?l,&IVFgg$R%@$s`tdB[n2pJiag1[W`Xd"M1[h?5_r+8sRs-a$?BtRr:4H[L_up.jO]@L>4Q^0i5/9d,Wr0XE9;6^)T?qI?1B/%QikmU3Nf5KaP6TEn$*lJO7+=(8H/u@)udNaaL.FcC0oF2^g29>nUnFd_s6^M7L\YQ^?diQQ\N=`)S8XPG:DkucF=:DrM<rnQTesE%pE/bRYks%4PkhO4KlX/<m$.?,0r(WY6CYjTn7pnW4g[J!6Me@N-V0%Sbl79VT9_c0jED_Wd,ULe2`0JrXA=sNE+cP%Es"U.c)jnt%24lAd!+.K:[[gp_q)4[faDGR76AF9=L=ad>DEIkHVA\.7+]W2ce+mEGkNM!#a5>>?&U^:5\/0X5![GVh+8&W%k6&ItG?!Ar&,=E9%j1";s:cWjj=;n2XRenV(I3`1*<,hn<kVk8UJn!VlY)WF7.\ionjbUj)\pY3QY[l3YiC+0EO+<oF'jm23"ZnsM*#4J'OfojU5hB`J%MN?^2V5"QNT/ZIPhXM0c*J"XrCGA"nWbpg'O$SrBA4+X,i1#l/>eLUH):?5s`j#=Hj&3U"<Xkb+!02qSp_1>"llm^1s#TnZZi)N9%o]<okB1qn.QQ#_tenB0NPFG<2r&Td'6;r_o:7Y>;57a(4C[:S@YMs:s$`>5F9g0P``Qa2Qq/>cUp6a1_OjE+gME4DE=,@4mG0#s>%o=@k;4G<JFM;dE;13]%<s+l-X+'rUtp127:\CSP=b`23;_kn>cj]nNbrp*0bFCLe*e!?blbTE6Vc+c".5[XO*:$g$N?)Cd>?NW_^%3e?',HIZLj6!pN'A)O0[=K2QI9H;VC%f5DUG9u^C-g"f\]jL@E;Bu;C^AOF5d2sfX1a0gi;jM5O,/n[nePqIXSifgD'e*L=_]O6p%iB)R=7C:-%jP,Y..2#=P'/@t!Uq!D'9#T.o4g)nQUs]a\m's(\OW6V\;i/\dCll(pgpZ0eY-"r]BlV&;4.r$Z`H@)+AM\5gQI["t%-IIYNTaqga45fgERnuWDk$h4nUAkU;<AKsj'O$c#Y:3@ld6$!V]8;FP4#/`:q/Y0^W@MSFHe9)+(o5HZ=36q`lHOCq6.%bCZCLR"%EdO9*nUJ#PV';,MkahVad4&mPUKOM$o?kr'iiINf@_D1Xlt!@Ka5n*75,-p9"?]]Vnno^UD`++1#>WfpFR,'aH4bE#ok+m10]ePB%V+9Z5nWr@B#0RTA;JX8sfs9(3k"T8YO/bJ8'==6i`$XXE`i1>`?LXKUnpD_.AdY?Ac1?EYDi\T7?2hM"8VrcD5=Bm8qLAM9<jN4;%=C@#r>4X!U[2c`U')bbiD4l/B>E7VP;#ncOp]Wm%`NN,8T9<Tg-SX@4niH]g`:AB-qc0JBJFLc/Wa7QWBSp>O<$&neWMoshqWVIY%Aa0<(W^ZH[H%aC>28U8B\b[Un?fk(K\og&L3ecbK4!gFeW=\DnpR^2B].!;mq5DTn0"!bS5a0e^FUK7H7ZffDbrBF"YWA/[-r)H0%&t+R""jiobJPj7r7$`n)HF!u2.BcokQ'skWGblW.n+B\-Q!i&=?^!"%&7U>G]kFpDT5O>#=R<9sY>E36-sLoO#^Nlk.-l.>3M3B5%%Z`]J)Xo);"F03P/tHeH]R4%#QM^*"9En7QCPl^mQ;:ckLaY0Mb0TmdNuI\CareaDX;\MfGU1a.2OHoJj<sF^U2TXdA]p$J\f?*l%G(0Ql?r+?V;gKXO]65@YYQp%#[j>/e4CAhL8ITmoHO5##%[luc2EBNP98XH(9("DJ=e6[-8p^FE.87jh>:og^TqMA=V*aDs'tu[&%h0UpV`,au^\'Q<tTF^gAO*4C7WhjJuW-aq_Eik5,66-]]T!F,7`O$(C,R;7V1(On'cN5m!Dmf?hnZjCo4acP)X;d&iE^SqP>$WPf%+J$-p7]FIeG$7W6=h(f2NG<%f2u@Zl%)Ys+G_EGV<D2I_fB1Gr!Iq4REkurXfd(%86ld5]n36XR4d4"&C/k1a>3N^BInqZ[A$n!k%$Y-Ru<XVSQSC&uY)FC"ah[J!5BY"/OXKnJfa[Ihis'#91Ru)7CX$r+e4/4l^`ZFe0&T-@A`HNu%,d-@"*J+5mL'msc1_h>MQcNP6%@[S-g1-LgF+UeQ/5M^WAR*3dAX%!"H>K*%0U7Gc0?;Fo+s6*Y,9c[['WtBuO$4o+X^NE*N92>GR5`E2pOKgb-pJ[(o?Vc+QW7*4T%DZZs0XAl0aKrXL(Q.$&P,.\kb-"P:6o[P%7aj?P^VHWUJDLKuWa%k<)2I/A#j#k:SIce?JPKu0u0>97i3h[5-K`E]GQh2d5I%X/`%8b0Qa$jcjZj2BaP\jER7&dU;GL[M@e2B(nf?V[rs7'=QSNc#WE7j!>H8=3/0Ud39@14drd/4ktVFT>aM9+`$?AP5bcg(M4"-E@![%6kqn5YT?c(*(-(&X\4hYY[u6sZf@k67,4h/P--gtXrppU;uVAOBZkmT*(A6PJ)X/%j*ZGAlobWHI+g*X.^3;pVs0:Q(]9bo\1Dio%^^/2m?2!haq:)OSapi?^e(In>b-0q]M\8"BWAolME>l_[NLJJcB]YIOr6.V6G%"R[==_?.9Lle\0eFEZ>:#%cO[Q8778BBX.'qA%%]f[1<,;lA'HEL,F[*!sk.0!DjNdrJ!HVV6k&RW!Z]pnnBi"etf9'"K=Gi]^-f$7c8fEF8Z<q4CN[VGFcUZkffbi?9-ih/Yf>R?>N%+-40A_4IRKoR)Ug1]Mk;rr`0^Ne@9d]l"(lYi7Ih`naFghH9/blmkhdTe1gSqA^$(R5EXs)U[*7HIZ>7n\Ko.H\H+Ahj=2f=^]GQ%&S(eh?27C+#SWIjcj%\p,0%R#5CLB!s.eu]QRhT05t(>t'`B=u]H)asqsN`2$[SMsBR5rY-0h8$`E%GB->qr.+KYM8pi*(g&D*D]%&KkOkg$u8h`ED*!cYkh/O!(9YLL3DbNSdkI)Wak*e9/%ca*SDdpR7bQF7)EeW*XeGV3?=Oq.62me]BPpZ:&rcMpU?i./WuBUmSUI%O-G*s;duN:2^u&+>&$9"T%jn7N^]jr/Ot>i?_ntF2S$OYnV0D=nu8d%V:J5$+FeU)&!lInVbhB&:(^a(Ile2<?d</ma:f+n==V\-%:&gE);WL->/dg]</Q2(oQhO:OmQQ7#1g]WJ,KYuB:H.;3FR(fII;6Dc`jBmX>0V)el:.615CFl2/K=?CLSH_L^T]ZL\5#sgZ(Gp-%l.%#(VsMc3kB5'<No35l8du;W]9,4t<V++5R#IZ)-TRn'\+(`l9JheEa:,b>rj`Ae2NSJqXF%'Q+Mm.a5AE&kd,9'=8g%Wo,WFIm%:7]&#(%@NHObQDU)7m!94gS?))<bmjD>I@YO\9gc;lnhmPlTOP9a<sg`uIP*ablC)gI</-A"Edt75Dh[e&ds!V<2^$CWJsu;L(:#%qUfg0h8lj&_l_Ah;rFW=,&nt^LZ"-Pgn/JPlfCkpY>%fb\`Fj0#m9>&Jl="1M?\Lc9rEoX0X=p?9a=l,+.nbDK8b\KQ30W;*>@^#%l&"8F=f9H*TYJ8>K)`49hZ_P,]INpKb9BeTF)&;N<bdS#[sb^Q1Vheh"R<:2ba)ZBPiHlZN_'=5Zn2l#]:d!/V2(4<%gXN<Jr\,3%ktGG6RJ))0=btc\7!%7/bN0L&B`Xe3*%JWW0As%>9Bl#28HY)AG-0I\Y'U]W+LKu(FR.!emoBfM>8[1g!sAJ5J%m$,L?L7r@@=2B%$?\#j1ipr\\)-=5.U@/K0[T_@-eh_9LZm@E7L@i=9(,jJ6pUFS,7%ib!kQ(OG:5Trmc:(rmeQ.(SNQ\KAosXWlc+gQZ?<@6W&K3O%p#gD"p*\ZkI0Y/(N_(-Br^fluA%&H"DVYdb0YpQ3Mr+>aV'/OD?`J-fTtRI&87u;%lrLnA,kBmR"?&?[^qDVRCZ=!K^H_2=HBJrg%!3t<?ECW@[+Wd@jDgGbl^?p=RTp0>SmLqJ_kia\GlXY1kM&18g:m(iP6G*X:]9H6(^.$0:S_r;jS1M9i;$bol$d0jn4Q,r+mrSs`%m8b=AE832KLJaV7FrN\%<FK<qdok/!(;XMH5BXP!8Z*VU'n\!sFZs<*P,L>:o2^VX"^"Fdf8Y1&^fg.hqA!lt&Z>'4!PL"85.(n-%YjC1nfFUO'O1+m<C-\KeQ/-?EdplRG(G6UYV&U7CKNt]4e#E48QDbC-"6bElGMlKh-OU%Xi;$<PP-6pCEhiYVcKh<!?p:bk$:7st%@;%E?rWL@G@Md[R-T=q6%VQ!H)UTXdaKHu#)JM/qM2c_ZOeB$QI(>'^+CJ6,#KT>u)3;Rb&sVmt*SGA7'rcb*'*21PASR)4c-SV:%lGc`V5YD\+9Q[B<+%2P=5uDSGV']pC7*<en'%$bh+Sj6@Bs\4CA9tjfcjZbkWfMmo<WuN>_<ef>J+undd],Kp6EbVnIi;-"lD7\"%=UNcAQWO+q38^nXm^#rc3#Z,2GtP"SBWQ_nr53bFKKf?[pBZs7+`%F/SX46nF34C")oi]l2'%30Id)U9"&rpo9%E+/qSi3c+G^1L%o3,':h!12+aW-ob2k'$;o3g_%&)q;eN[.RX-(mX=])p#U0^+UE[IQiQ'B42iJF?f.:1?blq')ZefrR[2Hoom!=0r`Wep&gtnfZE-%]m$#(X1KW"F$4i'*7pVA6qDmhSsLi(6,_(d"P/^_hg67.8Cd<QI7,Y$r0OFr'#t,IVs"\qPY8^BZkSAl;EWr#m2GM';\ijpIqIYF%Z:B.pX[ONZ3%-o/lQ+MaV]=Y(E$T*ERTt.Vb3a`CoNhO;X!(Pp2=A-\^#c&La*koSg:admm:<Qcr>/+-\od8Q>^ml#[9>`=8kF>%%$u*Tg/bf)=41CdJ![fUth6U,NXD'<SJoQDlk'onLp!QXFbDVHCqth9,Y"H"H0pCIRJeRCW4L>\p(5FY46ts$Qm3TVi4^RZ9YKjjg%N-k6<poBVAD12\6Z?n**`f%A'[eomCb\<hUq6`JA[4,&oY:V31C%cOMCQFbDGQY#'?YP]OB!>(#66.;hDGtuahlg."gQJ^V)W9""%HNt@p7_J)#Y.MuU&^Qf"BYN2rl978i!n430$K,"5C;s?/PiVt+F'd+j6+b.#"4f&c2=0%S`'ICZia,1er_n`a-NUig+\B`2'8Hcu%Xl/kdd!17dg7[*pdo7H3IpITj`B#P?X',e*&85jW>/a\4m[af'eP?Ph.KRLCG7d&t8&-&I;[.,:0lfF$G'S1W4WjLQj^io^BPK*%%bp1'm6]ma>Gf=O/7g;ZZG9`s3/>GM1Z04@#@ZkWAI5PhK5l9&gAECtad$(IE6R-6u-@0bM1GC"!OrsiInaK`U^i.j>.HK?oQF3gk%(@2cobM)(\=e8\GVoPtppT^80c+:L572j?1D:(o+L3-qs]JSV*hjlY60^u+KSOU?CX>mCs*7C(ZWP:QUmV9HDoUMdM/mu>T]c\n\%GFtdWNF"K!?CeTZI27\sHiO>-pZ)0U*M'<G+;)QB_hWa[QCV3/?\>h7`BU$(etoP\$R\*]3)fA;G;Do7fWlj7p\9%K:7Hi#'+_h5%([O>.&iu=H[^TnUHJkN#5KADPdIOIg@=9d5UoCPDBPZB3,ej/`XgbjOrEAC]SL;hI'p?:HT65t0bu`62g=t3U*/M#3mSIda4M=qs%_5k9s\CA8+3U9c$JbEl'N4PWnJPT/3<%d"QJY;+7(c=_Z.&M]e02adcgTe*D5&O)aoQG?\RJ4VZmD^ZFR^sC'R&<dVrL30G)g]c,%mWk*$2@j>%"t_o>:6mRd:7S/(G:buF&hQHlC7@^Lh\Ofrf4S0U02$ZWbY]q%<SsrAXZTW3pTfuUF0hj/'5r7R/p9"ioZGb(p;VZl%\WXRr4kQdD$>)2k**?'@e#"FjOoCr$>`q9fXkq&6[apaZNNL47Z9/`T>0TdmZ-cl6q7(L/gKN(]ZW(XeUQCMVB-1IhPq-1WG\/uU%>qs*32q-Z&P1nO?;PN14)N!:Vk0r=E1#:!L[83.2n)`6GM.l`Og<4\/p;sZ`bg.ZoXqTutpugLd#2?98Cooj5Dmi[bn]G<e.GDqi%D&49@U3*ZGpNK-0oY\qMR4N9A^T9OCT:2`,o;gZT*;;8RJt2_C[C/)Bamd*1)l_T4>7WpBr(-8lG:/S/lhdTu=_t[lk4$>=[O.aB%pUS70VP'R*V4P'+e[7eESQSW-0&80uV.MBd.CZ^hnTf'LBsgcVT#mnY@cej.`($&hA]Lm=52EE,DYK%1Ecc@\<aWLW-$!WS5KNcc%[oW6pe;:-/qY=_R;(^!m(=s'tQd*\GHHA"1)\6\X?J(MZT3#QSZ&mgXI"l2gB3k+,Q&7)ge?T2R.j(k=`Ko:iffZDk$EeEsXjldm%oOVXVef1hH]AJS3%5[,%0!9UTITo\?dl/!.7PtMUD&<Z0A4sWSQc;U^XOBZ0H/=?sf)/ds8b1-u6$h3eS&nDXI]\f2%.`>B@\HLC%U/HGT=/2B(2mR5se(SAFT/BCrAaUEkj\"20f)6dEDJWjLPk=+u3lc<P^:%5CIX"M0;G7qs*@5hl$8bBCM$_u4'9MD.:Iud4UG.*O%RD,FhSTYsARdnr'?:^Ta^FuH+QM5l>*,"tDd`>dcXR2hP2A51KKkB?>;rJj=Y,JT%$1m:o)Yt/_B"m&=[_re5Y&.[tgLhUr<K>[T%E5SikoYXh/8CnO%3qJ7Ke#SgOLC!%!B]`&rr1)9Nlt*Zkoqr17jkt0CmZ=93l3;(]_U;oAZYqplZCULC]&PiVN?tMMU8s4<Xgr8Z%/178WI0G(:9-o=*_oR1/X67a,`;*`Gol;KCFu$;i\FEqkP6?%=HL+/7PiuAMeuA%Kk@SK#W@-`uCF1^:/Yq3KI7\I?f2opZfQ)ee%aDE<mp12<_CU*afOjs>SHM>&90\L(XC7Y=%lmIg2P6]dj_k&0rqtX\Z<NKG&jk42U[Zb94rR/`'1iqtiP<7sVlQ(&6Lr(^uU\+8$%e:jSkeqf&XV2(=/n)\@IgD/Yq;KKH.Q+-/"<UI##794WK>tC5!-%fmSfXG@%IX64YVeXafRAk]^T?\,D3`oYEqmqQ85$ij_;rMFI%\$4]$.om9qpNu/dde[47+aBC10bWXShW*2Mo3E`5Yti#,7+W3NbdCQ5>%Yl<<3e="aqr_%QCTHes-UV'W.:*QVO2#1c/q8SY0SFi%bI*%3]+\f^eDI?>Sj"aE'DkjDeVRs)L#_d:X`JRG.$a[L0"77-KphR#@eR7T#+T;3GOq"oPRPpL<>S%qcZ_M5]2,"_[oo.bmfbD>%gKnLV]W_mHG]F+BrT2Mf`k%klVhqaVX_Ok83[k]i-:sEmo`"hb/A%4qkNPo3bMtpS2*X=XMC-Mn;Om+(2d\aCCU:C@D10\_S&[Sq%VfMe1,,*:UI`a)1T5ITuFt0si5&C:XbNk=\?eL[1k#.ZM[P8A2n&&=,)#5sZP[]MnUjj:q3TYoV?)PBT!%@tB1/s+<=Otu3ku6^3%CFqoBXFX+nbm>LEL.[UuLHZb;$5p#f`KlnhL?Pm7Rul;Cdj`[)!%i^K_59Q?A-A)fOjuH>YZ6S)+,-HQ>TtrbDM-A%q2,cCBC1UK%qlGsYP`/=d.9U.93OXgqa41j."D;g>`@,L&>5ZY"G]ddhDa_W(9LLs#K(U:Fjl<4Kcuj)1NcdsZs!L5]7c*k%0G/0ZbDgBjpZe'K%.FV(E.Q47*-f_J7N"LXn8E655b%Hu7Sn5;$>c`';.?tlXNcgt+deKcqU39)m6rY_rH3]jI9iftFCpqY:jnGTI3sOgDilbVXA(l*K%_rk4WR&i]MMl<_7)'01I_3gJ7P,7J8d=trl^`6\B(V8\3qd^]NmYu)kOHLqYF"fMJ)o>Wl9aj;MG\U@Or"8nGQ=!I')P?%#TYS=C%h!WjPC?"mEE?EuYrE=um8=Y1dY@b7Sq0=0q*SnG^2::TGJ8`jsM6:FYRcb&_X4$P!@cm9K*Ah?4:B>Y`i"^?'8\oScaWrQJmL,E?%`B\)`gCUUU-]M8JrT:lfN2FhLYISI9IK$TDj+)<)(28:Q&[f87aiq\h*jkS=jps%'9(L8%S6!rg&nfJF8nKfe4P0S>SDCKG2%1s0%kPa=s%C#`sr(#`pPrpBW%/6nSD$pFX..P1..1J6Uk%`l71gs_ZSYl/H$hrHg,kRXsh8K<S$2DViAf&kXmDb8mkH81;8:oO/Nf2O5%rd*r#HK7?($]H)31=NnGEVIom-]PIodd]88Rkm9,bhlHdWGesF6Tmf1M.eR[ni;qr`Zjb&M5+n`qrM+`o\EVUIAfOU_7s9;@8/ZJ%:%PaUOibRis+n:lBB:'S'lYoup5pO,@mT/X2U[Ykq+Wc_M7R[;NnVlsl=oc<[9VEf?f?@^^.rOMa>:&K4R36hTZ;Y2E4eQ)*sP`C%8b+"EGb-^(?m<:9MO=pnkIpp9n!#!$nGWB1mlrL'qq9e$!C=]Dm/>apS_h(9+!;QL.$Cm<*H\#=R@M%[#Z;M#AT6<!POuc3i\p#b%Cg*5[As`_L8<qg-RjkMp[@-2aEb/j$D\f4VR;2%oM:r]&n,D%hVr_i_=iftV:QDo7QE/.O&+Ee)dDX/cg#m0t^5*;IB(om_o=:,N%Q?)luRNEbujrBVhc`f(%VsDHi`Js8s463K43:(%#5P]]2#d4-rK.jP],h$e'HrefGr<FMY+KZ>.AVh7d6aGEQrG2^,HsObk?]WDn%V8Jtif&A'8S"H5n35E)8[CUiF"l\LjA394S`7]>(47(.:?.lfV[-8XY*E\qL.5#&>#PnGmf]H,-75rm`!Mp-ugcBuF]TKb*an`'h%MqN=t8Z(_5WRZdTnb9utKl[D"XH]RJop,rkfng%&gmPsFLt^slpX"h.AC9rfV)O2]V"C\'N8j0o.k*qs-CrcDZbFj,QjAi28)WIp%r,I!>S(>>(M]5_V$SO5hM"1X]ErkN"k3ei)HG[C4(jiB,r3R<q=ulN[/54R(0pSl<G\ReW037u/Q.!i_<k!$2BAMYsp\(2[B7iut%42&oskiKBNbe0+?*,U3@CNDTJ[H(1Xr<c2Gg;kft(_6Y*jmsL$-0*JH%r5tBnjdEe@42)b[IPU_7)^u@Mr!du7$LmA[A>B`LZ/fr%DVe9[K/gPIJGoAVRW`I:3U0?VdlD96^m+Kjq8&:[]_T+.3sS-^q'gA4<H$:rkNRbYBP,@JBI3;Q`4&G!\3/[-0(I0HA+UWQW]aoO%Q4H2-c?!2X%.2]jafis+eRNbQEI>?FZVnBB*am#A(LUSOmL:sBlc['u\HQqKXtR))X&$p0K.7g).^7$UP?U70$a0M[lr>QEj_Kos%H0=c3LVXaY5Bd%j7k?abg%-5FjEtiHnPKSh8u?tQ99q*V"7XM*=(>b%k\=n@B$2i!j6aq%5YKQenJ6F/U.n[G`Vbd`9tnWqP5TM]%RrXMO`-L(!P@\O`P*DdbV6-#XP;:suJ;/?c7J(t:^$t,&#Yk.<EI,@lj!AV;2c?LFK>uJ72X2-K`g?)B@I!H]n.#nF?d,oUiELW;%E-e&(/sYRWNPD$U"QLYrAEWYEF8!n%[`P(J^56i;[!cG,s&7o#rA]5#R4G[i$J_?'Jrbe8I0A5UlOg#k[Pn.7H:PJl/X'Q@>&3lF%g!$PhR87JK]BP_>TPs?]F8NXRTK1)[labiqjHBsm'@E(t7J0mEr-W+^NEJ/`"kjsB;K9.d0dVd.?M@ihS`sr?E<@iQf'X@$A*Kh2%?/uFID!gCRjud)+ViS90T<&$T8Z?>9@L*qd.a?#69BX/TK.-*aoB,Yqg.(HBCh:.,c#c81-D+q?HV*U>l=+E)>+5si.<kC;Yft(i%aXGKILCeoF]V+$t>9:&(HR.2LjQc"eKEtq%+2s+R9cdp0YE#*/r@>Dq(j(3+Ya@%Dm%rX."jCcm[/A>CUT]08')(acoRN`pdgN$l%(D"4Jkm)R=SB`dPU3>t=^6VKXX&Chqg;,GHqrB/DjY4)iS_i72>@t%,EcMr=B&n`Xlq68Z$9.Tt%Q+4]ZE]uqCa>!R9i(4=jld*N%;a-e.[CJ:D\hp#8hjmAj[VQbQ[ADIE<H_#MhSGdbo@_6>,oK&%$e!'r5]YA$&Aq3mJ6#sCRqKR6H#DKug!s-1rUc(&_J473\!!tf%Xq.G:l/RE&Cp^'jEk-96\('J?c'Lle#/M\E_4kRe$1hsoQ%4?G>ALM=I+M4dUR>t^/A?j.)>0hb9g:#4\`?1kY*$IBMF?l;/?,oH%Q0nVXDX=Cd-tg)d1B2=M'nnc^=!Ss\I_pFm=pRSmY=U3TH]7`+AUKVfs$fcbaBg<0kA:$A41]iM!P^b+!f`\[lj`=\egKa?cne;R%-Q?7pl1iZT>(CBIN$U-h0Y_.K)l,nGPh7J7_o>^./pueOE5pa'OO@MD@T1CO/ku-Br!OPRRdF;K+Zm0JD$N"fo'4?i1jMnmSE4Ms%/6Z#3WQ/O\b5*1KPdYaM5>WhXqa*f`<7`+2p#P<rERq]t?5aNkT&-T6)IU":'prF_aPJ",mG8o"dE:/lXOofn2r/nodAO3bDn1tO%HTSJrmET>sD_fW:mSpKt3"n!maC>8>A+T0tluX[qDVp!r+EoIe,mNJi%Q8<>i<QmJ]8('^WVZO!TDaqDC";"7ek/9)"-IaL-DsQf%Eu&H9Gc%#/rr%'l]j!U5VYB68ZK)jEQ^o'Ab"dZ%7[`D_mNdh*f)fmgV=U/Ak.u's[Q[tBI(,>"=h"PA=fBD-FhH=@9"Wuhf/huD%dfL"OiI'bV2W)[6h^TAXA#_L^ru,FEFZ117s$Y/c3^fh-DdXR!bbZCnC=>Xn^U]rL/'""27Od.G4i2(n(<i&u`A;NU[+MoBl?lS8%LHonng?bnRbEr+L$#@0#,\7)9d-Wl$[MnaEVUG?g2a>aYg?k->@FXJTf>'d=e3JFe0,lG;URA@"8REEgX.>gJ?1TD/h3rK4';oF1%8!"0'Woj+34NftgC7a=jW^O%nV]U%k$4Oanak6BnOPt#>/TC#$e<*R9W4f^S`b=CWAoT$+^1C'9Bgi&jD9=skH>D9C:U`&C1Waf7%E>FRujd:G0rT3@3CAQnbRIjF-_2Z-B4cp)1=_\MIa2-'r%-*+ZT7L0*b7Xp>,ck*q.fHRk]-I_k/lBkX2Z0>t='9+#4#.f?kJWd;%$_.WpHj*RDr1qmBr">`3oA!\7qg%LS%d:'#[\Y@n)W+nR5,_&4KX>o)$RAQj@]_"jf>-QF09hb1&1-]k'@tSa_)PBYYTUV[*]Jk4%70XSj=\'P"ml9ARprZZkj:1'a;C>D2_Nk"8e[Yh?A3'6%LpXink4[!I"g`SB$<Z>8j5T:WGK+ji\a4GDDSIo_OdiCXVI7X6ab0Eb%P$-U(=aZY%4onIL+?R1Uc$oMXM-X8Fi4>to_!VS]1Oe[PS*S[?G7KkoRbUJm^pC8ZRU:>H:Z%D>V?;e>$SF/"T`-H^qih6cod'4;%<K*bubGi[<Q["m5X+oWb.;:)g^Fjd4qV-&I"t<iFbnO>[-"<#09`@/Lqe,S=,Cd,:;;!DH(cg``'IlB8XilpIR4\gC'sJY7QP.in%alDadgl4XRiB"Y2q&fhfa)U"mY3m@uS/Nnb0(M8cS#%"AS,7'>C>:8mP9,Po0b4@k`r_JD/(6GNb)LN?DD?4:BS4ed0%%TLZ25J%%JF$aBp;t%iI/@G=?IiOs3uSEjDHZcDbjk^MM#',cge`qLdHeN+8=I8-m18ZBQ)`0l7PeB?>1I53M;E.C3C7&E+/mF?9tTd:A8i=`%Q1?s8(,ie67gaT+eu\J7@h?Q$]*77NAOd&7c)K]6SCNr?qVOikr^MB(&:;kj\R1-<-KqSd+J`cfiSoT@DaH.L?^?uo%i2s3C9$?Y%U90ufW8bXMpd?4*Wgi1r,fDFlcTBURlOH;e<u^.uZFG?u4AF,%46r*8j]V)?-5SV4f-]Yk^Y4lE:F17-rt(f-Cos4%/ff=2:WB14%79X$4R\RddPH"?kXe@Q]?ukLEE!u+ne>/pE+Cpb@['GHZKE"p)\T8pSWRj)[o80<tiSN/"h:SrTeh5ucn#Q.B;nr;]V8$WGcElhn%on'i<0WTR8p!_#l.^j:'j5l5+j>)>HC<lfHI*Bl*\OO9Hg,OjRQ?K*9m>R1dc`CPdS"GsMms.APcH(+g,9Le$7V]"*DQC1TYrt*7%$)dZ`IZ?'?XDQ5YZ2,L?gb(t_X*"63fCbVcl]^ahDO\-3b3j,Zl_(_Z%`-?P(tKeY..(qC]+;J23EL.?d<bOQO6(.o8m,<d#G$\I%__u+n%UqR*eXtuofrIg@6+-OS`AQb^4/Gm/>Hn.V(U\:d)m*!r\\H[):h0?#[6D@^A'h8\.Jn(/jpt(bDT/j7PA;uFhVEJ/6+;'&%o:F.+I,-csVh5%(jtlCOH3p*hh:fr4@HV"clJ.[$XXqf9TUPV,Q#]cc%sg?"gG,Y0=70i&TKXa0@INJ?:Y#%XK5N](RJeCT*V=OH%rj::M@$s6YF0!pKBjI4@BhUb%VqhS@8^22Opf,@X)g$)-]X$K,$N&8s8dh+q[uS$1Wa/n%=^*rR3p9Q:dJS)i;3&3s3Y@X_2`KD2%Zl7E@kNY@5f:\/2]la:bqk2\A@b.)+YNVVmdEVo5:+pJT6*Fa=*=KN*W3,[Qc!3JGgBRVf-KWI=9Ened(j$tUR+cOCj4&o70W\FC%jPSb%Y>1-ENG8!pR(_lEBNdH!\?Y:k1a6k9Fn`r!f(]%"C"GYs<bKsSKC6?aWmkl^UA;381$S%BI]=?hNN)jsp[Hqhq73Y\I\*Z*%p)N_kl/Y$(#G$[bV"NKNoQe3[epYo8)SO40XfZdh['hpDD,AU$AD#4PgJc?<$iKB_]%l(:G9?Hb,BJ'UEc]]Pd$pfn>rjC=0/%&<%I\dje4U/U.Umjh6epYo_n$U<#D5eP._C0NY]A6Ssk5s81B8_s:#/.U018W-"f0QOVf[T!59apY2%(l)*;eT?YjrGO#YKh=tc2?1`%ZTnaqAiJjqg*t9<pBrJX1?alc.#^KI"gm0:T[I2NG7N?rB%HdNc-=3;8ggg5Dt@eljH[C4XpCBZNJicf(^5YR^XPlf0hNr)RVKQ5%Kf`3;)g#$8O*)kfV4)SK/<0L?-+-MR-)9s<5Lo'p^.JTp3X2_<'<[,g]/SCtBLDg6_Ca$pb"96UH)Ee!rd9=p&$BtdZqkH"@cl6G%l1su:7':q*p%1i0\W=2sV_9kkW8@/?O5@)G1Q*]Pf6>j5G\U@Oh)Tu=Gd^pLV,;Z0qU4ak;i8W-/(ZqV>0=_HIIF(0cL%]8Z'WcM%b08I(c_n=mlDE#,C&[=)eUQ;X@`J&f<$B$*UURWeZa4i&?r%kVJ(Pci0,@4ES3G"m.kari,/8>&mIm&a\b+m&^$!kfBRY64pXAI#%auZ\-Qfn+j>Ote>Vr*ua[@NmbT0FjJ'E@<T'rsH02f=!8L+/[pl91d-.GDe.hCB?n<:ab5?G0tuB6LHpH9TS!%e=M`VgHSKPh^W)%&sLJ9q3<!soc5Kf^48&DbcQ%N>s(>cD"=L'pfaRpm[W0Q0-pJY>!lLTD3)J1;K;D7MX-o3BULubnSg=3V_ckeoGWMO;k"h,R\*-(%R@9*%fiJ_nIQo3piWPR<>Y:WcaKJ5T^PV06km0JEF.,MA=.`B&f8jEHT0o-tk)X@QX0^/mY<lfQ6ok@*=?`shZOk0+Bn:#iRXsuM%f#2g^bGFn04D:Xl9YGQjO0ttAqU@p_+-oAW4U*d@8Y#CSqk2Znf:IVH&c"&'pgZTnBr'4!:h&u&]`p%m#M%*B7LfiB*@B)6K,/*3%VYrf[pFc_N4-l4Xs+8\dEnd8Y=#>44%bnG-lUoJhWV>:[:l#@mqnMe/"^9Vn^$.O*/9!uB4Xfk"HO`(K-3!pCG?WTFj0&o\S*`3a%odTf)M<q\\972Wg[U"#m*1hW=)_mu]>-*BkGMB,sK<jC0V(qr/2Y6%/D`doSo,ZEu8YGl?_6rA4dCl0QOOZ?#,\T*AXZBN91M9o4%'#.\??<QiKD:I^*k<)io3f1iQ)n#LLR_UmQ;/FlHT>&cWCtRM"d\++?$lN4@<>-I',891RQ4?#@!-Nj4!9%/!I"8a")JdibI0-gC%>^g_B;=Ws/kV;\!fo]s<-DPA^ah?Tdj>eNRo#3<`Ar&h/>/8ZsIQLWO!=Fj"g)!RrggJ"ISfWm>?\BRUgS:Q^PBsZ]4!k]4dTpW(%=SH2pRGF)/H*iTR+C0$7Q8br,I_S<!^\Hkm0].Sufu]iX9gjC:l*$[?M#2BSeURUr"apcKa1>,=SC`[#(+]=^H'CNrA.`je?9onk%,emu=U7)A*m^QB"Z%4mXkGpM!bW'D8qT%MEhf[bk\bXB.q-U><P5K(`]tWnJ]bd_Tout0M4h$i&eYDh;4VRcr2flZ:%kaNBEn^Z@%0\+X#m;C&51gJr[o3'3eZ!VnGjD+Fs]8B>V<85*^P31f9P'/]?3,(Z/7Yt&&5G'%i>O(VS)1J%$FX$(h%]Y+]/3oJI*1u3%s$D]W%@$K!o5Ql5Y0Yfa]c@$##XUrAmTARu@^uW5*HYh//9m/_Fma*tu4T?KUN7?TS5C&1Qa>j8rVFd?HaQ0SH\tPka*]W7aGU[i32QY]I%/p1PPSZ+9E=8-`=?Fl5baKKN?JO>;2C]TuE0!jGP4(6*[)bPRqLAHbjQb3@k#qbq82i^YOPQLHNZo#8(c>6uPhrmMiQK0qWQ="lF%0=Sl\p^S'HDFni[T,/8DofQH<M.f]&'Z+MT)hU*@XkD/S9gf6>hefYG4+hlUh.4:1h6*Zf/CoC8)r=YneD/jFBe,6>q0^&hF>0QJ%%NTHC6o<[/6BqMMA'rWcDqi*CoMrq@JGn4dY5"q4-iXQbB@RRbqYt:,c8E.LD9F<jGA&;'Q)[CW@$%M?XfRg>/'F)%.il`4:35Ut%R:dW.[5LR+<NKYPeX?<Zq(+?1";*P8=F4n7.S"WI?7=!W.n"WiZcDZsQt8H:f'6;-Z01#q3+JpU>B3tU;ErC_e[I!FouGbSqp^Xi%pkp6?eQKoMO?u&#JhD3f]fWG`N^X<Klr3`?gqgChb+2%0%khQD1EJWcP#ir?ZId?\=Q7NMcJsPlN&<e&h6K7,B>:q-nj5:PCrPmY%:FOFL08l1]m.^<&?>gstPGa2A5RNGg85H_Mhjc5Wp<c-=,G,g_U>B2kfCb=RCiT_+;ijk7m4&&2rc/W3[/GJ[P<FD0M&-R[27t8\%@#b^Q;g\unODFI<Nf>:,%-l2'"[FOhjiIDnj2h.6H)q"Ued6l3pAXRU*??lr)ri8.d1mGo1]!PfkNi$>RKW:)Y%(C9r/k@_lhcrB%1*fu3R>0%<:%%cT4#;&0C;alDA;rh5K4YXq,X5F)*q<dHg*;VbR)@2GmIYp9QZ#HVpe7`8Z$4=Yg4SEJ,kHBifD@2Rrb1H)A:#A\%O4R;>I_[@<m#q%6(*+Z+rMA<qf*.L[F0'_`[?CAR\c+CuQM9@pnGD-ZJI_f[ASSWmY>t$d*UrrB*1>udqflCu]8p%aqoH,qp@\)H%_199iAu?WVP9[W+GT+:AWq?+ZI9#"iK4/Deb2a/W[*8*#^+-h?gef02G`KuicWL4!3Hr5!g=m4%/[j.tGb_/Cn*doZro;Z/:KtKX%Dfh=QHb\pb)u\kfs5"^kTT(1;G.QQml(tj2!H@K+&\##Qc,WQ&o*%ncNS[YoUs&Vfl!8Chm\*aLjgRWZSHQ!R`qU#=.c3-r1CTkd%BIE9FnP#8?Gu&q]UV!jM]/1uu3X"\/)tLJ`o!ZuP)"P..B1j5Yg%LRn1`Jqc%T6]bk$NBQU\dUlalQ!e0lconl3UuSXYnf)&nLPg%r@EHe[J'TYcB8IlEgLGX+$9ntioF.?EUEn*\s<W>0#4A(7i!2a&_E"a<_Sg>nI6lYK&o*YC+:J$oCUYq(@+W#n*c<38[RsTqZ4>A%&oFM$ACjW$q6-hk[/6C^$eFW!)LT<+`=d#tA->IbgV6-l:Z[iHT@Y45r2S#)BM4tGhp:j+D9@(=ITDeKd`^p\=7e9r)K^"4X,Z+T%D]G1A%4%:eK?s-?kW!ZD>=YqGn"b2$Dt?Zu`hdP&!,T/Prc@_tYS\:XRI0ilrqhaZLRB4Yji"7hm(n7LK^?^@5r#uIoL!ql+2F1;%/FiZe."9]mTV`k=ZacWIWr6<YnAG$M<eir5QN;`M(O9BC:E"<sl!Bqn9gE@Wn5]'4o\XjZ[#=Q7oW>#ldI3i)qVpG(mjhUiNuj>S%AjsFl_;"J<;Yp?>+09Rm\pj\Ol`@^;fiq-ND0_K!oIVEgXJ4TB]sN"BrbjO`1IJpLeOs\k%eMRN2Oo756Gbk`](0^*gkF)OEFQT"%\#omp,k>Rp%SQ95"?b5N0EuZNkMPDQ8N`7c7mu5U4^,g+h=L78c;m*adC<eYmJ0lM3AWQch$kk`D],j:r)uibSb"khdp521&%:YG%Y"$4kH:&V+&]")k4C7uEBm4T4l<;o4ClbkP7pJa,cD0!Dn@W2jg46m*7okS<aq9EpjnJGAD1-&LZ('>!1DWgU4#;YA]s5$V%uHp`%C,m#=!.u[Mq0Xs?#KtBs%f>:si*5W*NSqPn25lX!@d7psNQe0Ph.LBVbtg,I$XEjFbC+kei7+YhSf]rfi7Xq/V_4?LOuIT!<X'S4%>?9(DMf5lb%(]cbd(XSbk%E%,-EeSJDXaLDTGu)j>V_(PIKj)J/\"C_h>@\m7-e&#LMhPF?'6eL64ViL%(\IPJkP4Pc-N%M[br'E%kiP+-\^`4ncqPP9,_N8-/69ugS"DtOI;Em5>lmQgP@8Y3kiGt$p+Q]"3"r4qFr<$1R@`8nMh0X'a5os"mb,\Y#/ad6CVMZq"(OL-%:G/NRrGkOI`V;(Z!?:p-VdGK4gGR4jD=@8%1!*gArdFBGOV9%#n]gB94q;A`pVGIj.!':up[pXMe)t<?Ui.nNUk-b1"eMc?6^j8q%-f;4/dbH6RF/]BJl**=o,uFPB$49,tfM"!?no!J2V_ORT<q]TX5':Q<VeqAdG"[sZb;oj4PPprRl7lnVgJHNL[?;:O]+*Mmo)fJb%[(J43%$I!TMp.8U]kiEK;g;P[.0M/nNnCuq^+RQU*%/(!>[GS:`Mjh4HXE4M#j"r5VT=1t3ATo>Z#/qWCK<!ue]4OmB8[abn*;Vi%2i7S%rL'>3I710>%'!Tc=^[AheB\5$W-40Gj86@m"2@5FhoeIa08C1<eSo9WE"^BB<I,PcJ+Uss6UQJe5:]0DGl8Cei('OJ?=-8e%Qo!?4C`Zs^D,F'P]ZlP4e"sCYAVbg$+s01?.EchAGfPl;Z.-V$if#H_'-7+8SOD5aN2;Ql@cu/!;^p)XC(FE2,Elo5/j&1dSMmh.%UOHjahf=1[>d'':%c/:$Dr_dAr*;G.ja[9$Hb-D@0_S\.Dh51fp?H=$DlA:P7WBMU/>>W(leJd\N(]Gjf*X[e(>gc2V3u`_,fOW*%P@7t(93SXL#)p'kD*K[DDIYu$o8&JU5%m.Aai9Qj2+N]irI#$q^NK(eLaeB/,==QgheUEGG@m47e<C^oaA#6siJa]W1N2l5k[W5a%T(q`d&*d[)?<b^g1Rr(/7hG'7T&)'g1i2eXM;^%jUdlaL;Nd+-#?<>8rg5L;oIqr4`TGC.*BU(mkk)hcEV"q7kO+`0r4bos>),W1%3]o/JU=?h&I!C<77UpfRdW5njT)>mO7jbP9YHRAVnJuGj6$FlBL:/1bbZ)%/l5gg76gK#.L,)XCjlb<n4>J_kr7=H7kDW'ZOVBs.%i"keBEUZ+?eWH]Nnr6CI*la2#;3oJ;q^2l5fF7@m'#34(&!B60jn'WbfAkBNT6>Nr!N('7)VR@Um.(#u$"Us1V'XR1VP";QZNV0,%eL_6!SOTP%YAPUlDf/lePWCiQ;g>P\oYt.!Wp'(E]&d1qhX,#0;J@(qd=n+b+^i`Eo&8X]lbM#pc\G_rIr%@FE3iBf[m.#W+)Zcp%M^@rQjrm^UQObHMlP34RLjZ]MN1bep>l2j&9@-Mo2b2Jj&(ftbAObIdoALIj"KWmk/r<\iJ6M@o+0KO?%>ApMPAU!:HF_tbL5GP.%V3o=Ih/WoNo"jKdR)h^/s8./LWZ&)LJAga+kih3jU=C@=c^6hX_-X($Tq=2QE_R\pk$[*`9/K5C)g7$3j.2rK2?ScuUL0'X+eFaD%?*FmR6TF;sH1YL0A(W(L7:([JO.l#Y0!3>K3Au*j++G/T%-M<a1>g:.M_d<GHJ!bqcZ7'=+<T;2Z^+##Mqd90Z%`,b;Z[K6Baqn[%V^[05ZD"+$koO'hZ'3X#/4i$p:[GI8TPcP`o7QoDLd^,_6nH!SN78XKT8uMe*LW&dio&!7/qX>,IV[%rIJS(L)6)'13\jSZ?YoCo%<9[s7)6)'13#_"P8N[C4LBB;*R^t>skh%=irU^pj>59$/;W262Z#ut]!REtHdBej4\=)Zgp/JR#q^p87Rr>nl@99Un$5[ap+W9^_%OpX.cX70IeKq%HO)ekp-Su3FFU*/SoSsT6ED@ij0L(QW"a*&g<bbD@-0BpW=ngKN;+A6@bb]ZYE0N077b6AcWD"Pam6TF\iH+bVu%Fldaa=e+:&c`;CR8;G[/*.iBV`q@]L?`=rfEn:,0%8c'Tm-jDGI!G/?q8G_)IpT_A*'XDho"DB=0:h#"ER[Y\bP0:^O&7h5ih)RO%S\K-O]Q\dJBC]e]GA$f-'Ht!`-!Wr15,:PHO&ML*2(RudX<c%fH8;"7<r[19G.bN:A@GoQrI-PG5"@8KmuALcmD.nY$p4@]dCa#!%f@tp2bq@o.R?q?+jS+.A^)21\hfE+Mj\uo,[%E8!qS`-L$eJ0tZ]Eu1[?V&F.:<Cijs@Y$PMSs]H@3JV*6PK9%itLMrd6bkm.Osr%f%J+>)0VY@h&Cb+07.Wo]cMLaS,)aPrcg9tdS%'@>T''g_k5/Vc\Gj'8"*kA<V6St^Dd-Kqu$*-kC/up*5)^$PP47tW#k?2gO)c"%cFn7Q,'kbA8S9^Vr6W2TkP:-.5]0L0p;A>-9+iJ\rQFBsV"Q?/W:mnO_f`&pNYkY.(Rm4Z7GuZa3"K2rl`;?jX6dn9:6cFJV0S?e%QL_mU\MtKO\KDh(S<-D%qA'g.Ru?SO^Rl8UOW454=`rU;'cS%fI>_kMN1TZ1F[g[^C+Iep)h21s]GW=i1^J:G>C^V*VftAYFSk[I%/=T?mb74fc37jKk2j,7p`GE+g5/I5D=Zr6l<\E3W1EVCYl"9bNB-ZeFaeh_.7F1<oriq`ol"5(GJ0AGFfl[,(OdF:hRh_i8n&i%L%e'6%3Ms^K9ACJfGV&P9Y=X'>QQENGN?sd8!h5o.\Vg#8rFL.4$(d#=#Cq<c[F9?@N.qI+'&*_oD@81INflXQbdu>U<cDI)=IP]>I%.q[9']38<8G[K-G6b;B*Zg#KUfIGQr]rq2dnMOn,m;'_-cDI)#A$ra]]%OXElcuAseU`4nR^;6j78%qDpbcU2bn:Pdot$0"\cn4Y%2.b5g^0fHR9fHiC3c07MflW--\^ls=2_154YTD]e#2lK+!)2[9/OeJP>fCKi87fOoa2l2sY6the1AUY8:bA18f;kAZdLV3*XLhfp%Y]_a=Spm1h]$ribZ]lRU,q!c-@PMm2,RFe[=jKHfl4%I/-l>fe/e(MACIg3jIS`\&?(O!Nfg(E\#r?4ck*0-m&=IQsV&%Ihr;-/Z%7:Zle?PX>6TC81`X(BO+FLQ:Y]85WbUe8@n13\B$j_g%"<>o$&DCC]a>U%uPJAch_E`_IB[C*U:prf$S1NU6/UWV@DoI.l#XBam_%FdVuYmT(r]a5"--L$lqaO1sCO"4*5mG<__7Lu\(XDQF;Ao]8Q?Epl)Va+)g2@q58r@$F.ge1JT[0%uq\7OQ4I>S$b27(P+/k)I=t%L;P-odJ8Lq/TY<T97Y)oFp;6%ktW:$@EZF]d*[;+OcZFMIe,+.W1eI^Q.mDTRFmdtU&:ckJ-R0UL@SV%`/fmI6i#$I+hHh=Rj%[[%P52V6-q#NlcCk?leK<JjW7nD\HAR_hGLpg9dE>K9qoham`OY@!CfFm2:^r50@dVuIdttJV5HTt]:c_fR+_0jn5M@j//AA_#Vt/]G%WE`QoFWQ;6piK&.1@_4Re8m53+Un%5n*ekkRF3i40<[r@GI@0d>nmeH+)VUELe"*9qb%[(*f@['iO+s$$2-+be[\(4CL@HV5H@hc%AhW*Sc=/b<%]ao*6mBNH&`."FAfS\n,8(k`H/Mc,E#8'qLMGW3iu$&A=7!D6ol:f8k%-`ZE"'WRdgC;7WKakGT4hK+]N+Q[g.HXk%+2^)RmaAbD1&3!iWGjf"hQ,/9>J@u1=B9LbITen>p?C1(bo*fn7jlmac5*H@)e0R&eu%2/@Vn@$dB2[uP5N1d1Xi%aj1.K@qiI:G%*"gWF>4O[lB&d^4L&DGC_Y0.[2AX\6TNp>/q<bMOR,Y'C#`+[Ca7/`PJqY'#f*ZZX7]%o"8Ra`,k#pRSNGc!UBh[b]0(>ET?+&uR%R)X5oCK-&b>dM+,Q)D+2SB<QX9LmEVl7:ch[4<=NQ,GM4+HkH8F)K^n'Z3G0_n,t#Inqeh6'h<00l'%U,KFqN1<_3pp<0`Vl'<gn%LoDBF`u_FFRd)W%DemL8I6:%p[Cd"@o(u>H*Z%eugYQS'CNMaE(rhB5kJ]HaIRp6?T',4FWWu'1@]u7!^7b<o`nT$"pFa2+GB^L!%5J27)c1S[f7kUApEVJ=Xc[VQ8rI8+`NU4C&O.K[,>oZ"Sn00M,\99+SZ2RgfKQlb;SbT$Q52=/?mtVrH^)ahcdQ23BGFpu=aG2i8%S:pY(kMN3/<$q@fn?V(A\UW_7_pt;fIgm^_4WSpLs-A;(^R2iUc)r&_oD[Z@O'[/nGrnu\m9',22Nt22i7kDj?CIagI6Up6da\pd%]e%36>N_T*R.\me,;R+6RWD%=hMZjN?Tc"\I_.c4ddk`sHgB\KSI`0$&bg[u9<T<fLL5AhO$eEBH7A-neQ7sab5P'&bc;t5j2(4X%03u/=3C.iaf,g6mT5=O#P;%J-5I6o`rkNSe2]I,scEGIk5(<@FL`T?^rqteSG>7pPIVemRB,dpLDbk\)m`t>9[hmjkfVG-=G7;ll%Ul*i7i8f^+g%TolT@gNt6Sb0p1_$Q**0T[LiBcjk8SqY$f^sStQ!*%l>u6r#X=*8lHt_'gdS3_RnLqDa$j:ERem4>^EeUU%"UIiJ%d`/fqe-gRSqgGTu>4V*IY-L#@Ua_O/s1F;^oVGAf)b9$"C=l=pglT1U*6)^WGc%^M4`PW/l.P*2nG:RTc'80p'#*gM,H.d^pgB_"%=r2JEj&63&0cZ4p7[iXL*ZO3dG%h[<g+FamMDB'Va_nFPek>O:5J+9ucZ71&.9V2%P0hM6MAsbU>@b-8F2cBYJ7e]!;UELD&F57t%9@Z*@Q8"ZWAg>(#gm9_lNI!D>DWi&b@^W^n>r&_"T7=,h%e]T$]diaA'S,+irG?h.A>&YFd5-i<K7h>nP"jK5=J7;#r(NuaEib_+%GRgGkp$uHr?^^(=?Dri26].Q5)Qf#pm?4H!mgkIMjc"Jfk+i&2.VZP'rOU)IlRRl,F[g;(?<uTZ<G%Q\Cf(q<U]'Q53M#h\Q.9J_%@4on$O%^db/'ceaH9+^DfUdLPd+MC0n1<s'B5F2CJ7EX#8+VfN-&@Q'!M"d;+-?^d2@"3TT=di5i7K$bR,N#[/ASMNJFHb23t!aq%.W[/b4q;bH/ASMNJ21X3cN<IqF2$F#F0(\P!Z[[3f\4FDaoWP"dSp]a*3\FJVS?m=U3tuOZE7#h0D_"7@SsigYJPdc.,UbVD!NOm%a./:f$HhX&q)48WcjJB2P]+,snpdD_hf+#)FVa'X<PNR>U3s4I5mC=!%SEX4;/5T><PR(pTrtSO)ernh^JWc_/(aHP5&Cba:d]C(%QGY0=\$"WdWdaj)L71ukDn]:d[O&Y8?,,'^D_<uu53htrhT>)^lSfn'dX&&sXR!>DPA<l&h76Pa2NB?MclK4R2uh?Q^5IEkoh,KE%<Rl"0'gQB^opbtIZOj/6WTuK!*H<.$q=odaSLHXa$[Nn;rT5nc[5%1dlh\l>k]Us(XeDoTI(/TC$rh<5qTUsAB;2'n;:f_eRUgX7%<ia9ML7J"7lMAco7K!)LW9ZB,TX$;`T2cN]q\cC1Xm7o5eVpO)`RPj3($bYgNa\5Soh.9VQ;15tg:D_@o3U$Hf5H+<^NM!.=P%IT%i&]"O?)au6QbPCn0D9Xnp0H9grWGQ?>sho43G7aVHaBSqI)kFE1:eOaJoYn,lg_)Vf<=RQk4)S4Rq&J$hjh?7KkT4"bLZ?UYK714%_)glX%GftRVB^rpbMO53cA+sMU1:^3Y2B/%F,D0oIpKg2[enY8Id?MU#LXHla1$f`doQ-G]cQ'u,c4#s%F\F=j\#(91K%;Tl^'T>%VlKSJ@qbPHIVl+7]XjgffCbW:jp^U]V<e!&YNiSPCQm?B>LD%]ZEE)@][o$jop]==Ds;RqqoZeC8^$A0IeuoqO/i%FDcs'Bhm=mo%Y3IsaEjfdi^\RB%hCZ2)\pj7%:-G5t^?bX?=I5tdhgAb?nTFg(n$bu'D#'U!!P<B+\pg4.RT7mVhrqm_?,*p3,,tXK>$\o=MBT+R%ea*(V:PdO?H0)VdkstHJqG$3aURA43\phOh&9X?D9NED(qMip3<j(a)YN0d*B23X;_"jL+f5LZM0K4o2D$dJ[pU=d?%tDmRd=/hp%)tD>=Q$Pqi`SOnb>DHLro7?YL[)HQ7Kg"!UDpFsM''I*[2l3_38oD_lkAFb7mGHfcm<mb_/CD0"P5A:-Is8\8/(Y<%G]N+h[f,E<%`J5_2lG2AJB<P%8X\T21?Tn3oc*qoK0;&44=7aK2j'/EF*]pt)FXOftp==pb?[qL.#G/YSD>\n^IK#&'J%b^%c/6:mEF7TfI^3sh%EYJ>M^3TP%jMp98!Om9lrk3C9rV^f@n(oT;^:X.%QM^Mdlcjnh5J1sZ?MsQU]fS10TDn?7UX*l(D129W]_Zs8g\FY,XTK)PSND/M%CgAKNr9)20CWCn<47pI?Ier36Spf[CT"TXBmXkV*'@4rG.,KE$E8iftoR(h-kJg8?q*2'cB335_mX4p*GI-u0Hi<HfpI!9LQf$WB%-b%i(bBkV^CnH#50mh0]OS8D:p:'Kd5>/8ljq)U7Ve&D^?i')\HdA/hYQ";@#'F,O;X-jQr&[,`r5/9Cla%oGPMnb#a"O_Nk4!r<%Dad.Uer-;ADBF2okIn3W5CM;#r(CJUr]Ki3omt_X8U<NFLE?59nr(1-GdX$5OHXqI_W?.=Nb!q&]S=+LqfAdCJ*@sqs(SrdUSPHG%h\pp3(MgA>iG<dMpZKPYMgo&^o*>LVGQ56pk>?M?p[uAogHU/!IX_1klX);(LYgq&o^KM=k,7Uqfde-c4F2>4C3ea6n)qO=cn3FR%DWN8&=-C`$pt>IMpC;Sg='bUr=a'@i)\4#S5B5r(UT<rmre#-=Qq5Zn8Xf<bh;`FXS?hN(>Co=hre$AYgJ*]_s2qh/48(I.IIdE>%N[*lA$_2!>r'/MtKS2@-eDF_2^A3N>8bh9+mE:iRS$h_YC3JUraWj#'DdC&"/O+OQh=E>I)opr&1d><RIlJ&?@IM.8N?dh_:;q^/%<kW5IYT<c&bO4-Y%sdf&.m%)a]AV91\F':H90A0`^ND=2dp)]1oQ+f"qM+gr_rihd&e=)+:L,mLLYPOscgUJ+kO-DUs+pQ$q=]Kc%llRVNaK*5/kr(0V7A4P$Sc%$;1V#WT/U9u2o2k+XagD#?h7iaG5.[#Tf&$tZCnHgE@U)Q]MdrZdB`Ih$Bdo(549$hgnuDo+n*GFh%]KL`&p8e5[?+b1E^tim$[cs0kWSon]lJ*hK?+p/?Y>`3V<q#aC]eaN747:/V_f)^Uok46s_VLi>s1.dble<<.j^-g2jPmA8cd)"Y%o3sf-[N@^i@ADYbd3MsZ=1nr6p[AloZFK\MY2"^A\&/5kR!E9.0<*Cn0Q3^KmNHJ&cgkFts-;GlBf,FJ6iaUWF$Ka#>>.FM:B6pa%lhA_0QQGSM]Y8IR_`,]G0<aeKasQk["[KhOmSWDkitlHLXWD7&<aLgN=a]l@"?4NLUM&JjmIpi5g]&8+rJN\kI/K+<>EeNB?G6Bm%i7J.Z%*,(AV`fd"bV)+B0E4.__XIGQccV).M7'"0H0TnN+Ht@_'GSBF9OLc]=.W.)AA5W<i#K:r[CbLdBQ*Z%]-STFYPH<,e)/R+%5L'p^EqdYu[S9P`f<42-h3c,Yi9cs"Mq<IUS7UGfpTi#V]Q%hD4:kfVmI*17rWS?I6Uo4r5J7U]]P8n-Z";nGTMmDGSYt7X@J(d5%WPRGKeVQrFS6s8t5=Fo6,G>q+q^u``Hs?Q5&-)4#^(Df%BKP]nl[.@eMm[a)Qulbt?^]QI(HuH7O*nP6mG"&Ta5^AB-(TNIFgJbL%Y81?eA(.DW]HN@&*537NGkF^E=/(VDmAPs@ntR^\X3JbV9KpT6[>!@Lqk(4h04B?Js)[c'=mYD"p>B_"Hi.aXTAMkY4kUhSmC0h`%5<nj0i$5^K,eIEtg)^o.L?:a&G$)mh*s`hubon\6r8IXW=F!?7>59;EE1!d8Z[6ooaZ&h>n+dW`=lWTg3mF!&U`:6_G08]TQS/gp%+>Jcn7tb.,<o?f!RjI>4MUq<MT#DdN]M3-1UQSdtpPH7folP'Q]=@Y7DQD%T-nJ,9g66XKG>OIJ'L=tSC=UMFGFnX]hd5QI5'NsN%1I#K4)_]`qGW`VMk>'q61%U$.)3DnJBH]2Rb:ZQQ;&AC;*e+b_R%,)]TT(8&$[hfP0'8.E>^5k[i&0/tUJN#8rI5%L*YPdrR*8F"%EW>\)bRXOf^;MfSqV(K8)j.&:$gSHNH5$C/$I>u3HHY,A*]e]3A+;+!o#ko/eDlq(b"j%lQKtTS>ht5eYff.WNLodo_m(noJ+F=0%=A3fA^3Eu(s8;Uc'i4+d4d.Y04Ze-Grh-%TWq`4>V`Oh?hMGV"Im0pY`;b43k%q=U=8!+^nJC!<3Z\7lfd-"0laOXJs86mumb;Ng%BB+K5\pQ,r0_s7>msP'-F*B6)s*XY/83@He$-*-nq'D(,iYCKu+C69fAh8F3m[dG7bF9crcK"g@<b&3c1h[55**K$k1h[55**K$k%1h[4bRaUK@d%DgU9kd>Ad%Dg5DcrPa1h[683Jf7*6\D7tqCU</$k8XlijE*^0f3PNWS^TkFr.f1T1-<Hr^Bjt/,\o!-f+a9^H'TY%3I9iUEV2NjSKfQtVdss+FC<BW]^u7tT#f=dp=RnIC]V*'--gn'g-;=K`PkbO:>j4$kNWb)&^Hql0H]O\?+FrK+bK\1p7aMc+cbTc%A`=C%6N_l_)X,EM]-VdQ,^[54F]o7"Z`!=2>PY+.Vgf(kkAg2A;K:m#s6&K8.s:h(Q@SEWhsYqPpusR%Y$dFjT!o4nj,W*B?9*'h%(g=CD5Z-huOT0NJUT,6A=kfh-gqNCO_jbSZJ,AEr5G'i0DZ%)NIGnA$huE?FoAsn/hV<JLIt(`$r9EIc2kPP8T&/8:E-M'1[G"o6%oBPr52k(A+mdDVL?/XHp&fEcJP7T$ak/I?W=5I:IFQ^l+MuUm?T8`o>0M7@nX(Mp4g-0gqj+qqXIlhW19n)-<a`mdAQ%*,;RRm2?%9X!F4IS%`CLG$=:[e'+=M48i&HcHIoLAUK2dT:?XMc"o]W]Mf&Fmkpgr-bWU>MV8gm\KmGX&HMSe74j?a!8@e$obCLVLJG`i7MtW%XF/"i)>-Gu/Vc"1gBUIp4+CR?Y9,aoa2(sb:;!%NP!>HuE9`%#IGj227op3@s*Dan!AD1<aUossW3*e's/I%$o(2PV\G[:lH%R/9%J$HaO$\Lug-*c1cf<*T;NIT)jg!]ospPk"#X2jk&*;q?4kuU[E5>Q3gdW=FJ.4XeXeLnM_pER0JY%?G7onVHq'6\VCXSYB_"_Z/O%M#Qo'nEu_6LL%*BG(1ubrk*_5r9;pYpBPd7f=)R5+*qQdY'#46]!hCY=*@A/Nm;;-]<>J/aA%*<+5WnC@*\X*q!V#YLH@NqC!PO!%i;\*"I+S+6FaMoXN3doeCQ`UZYhLF2;*uAWX8QW0]3j:H^Mf&"3pC#@os"JZI<9h+MmIj/M:oUgpV#?]pJ++8(%'r"H`,SarZ0jI%*WN%0Z&@?iIf&7!gJ:?.?iKGUrAX:'dgJl)e]+:M0Y.^_1k(+MG.Sf.og]k_kT0if,C2Iq^&Fe+Y?X8@oZb(-f3Y(0TVq&EUV+9d%$=#`#l/<*LiV=YQ?B8IGp=!Beg[!tiVf4SnCA%/s[Vku/O0\]FhR-km^RjM4V7_1VS8GDDI]ZqjOKaiEpK/e;F=Kd%HTBiq;3"qK%s#J-+J+Dolhe+&.<j"!%1WnBXGW2dQ1U\e%]Xr1FRrRK0Lq@ZgRkZ3<L*(S>N%g8B\j#2PJ&4OB#FEYk1NtLc%RtU,qb!Ak2]eRS%S7fJ.?J<>Ck,od%>5l/P3r&SC^Or.3Dh!J%c`[_iI")p`Vn@Ci*e/">I.sPoK_Fs'fM1Qn?g`,GY!$1u$uk'7(CH]%Ert`tL[Xg*%UW'L!4-f0Z/T3AXc"'Tle$^'"O)*MIK-t4.>cWgtmcIgK(j>odmL8/-9KTJMFcf5p(@``n5S"&X;rl]el<J9!*,h%e_1D:Scd%*l%d?q?CS!RIB/G==MKl`sJm:>:&;chQZo%Ll#Y^].j$]V=Kk[`-&gkFrD_o@i2>E<sA;YW'&0)ga?GkLsYTp7`4-GFR1Uo>@U7DF`s%#HsY"ILHguiFom2qtc6pVsH4`fVm-c.`VAQ).!0jg\^N*V_e%Rs5]-LS^h6EolD/1>N2q1*oiWKh!2=QG4jkNQgLh;V,YM`DB=GR%70dsRVd5J+J$f>q<ts\3]g5iqgQ<t2kIC>+WoQHLrc_@_R5(n0s-HaV8E^"+WoTsGWW1-k\ZEu)$GAoo4I.]$4dFg;-$"nA[o@D$%@pUU&<Uu\ua`p]`$2-8;J*?Q/T"l-IYN%=/#`najk4d%ee5X!"T73-ADT@<@hb\`R>F'8D+b3>CZ?NFBVUJaV_eD/]$M<1qf)G<!%nH8I\^:@OK[.$TS8XfA+-IhtVg%hPJmef_I*4%/Uh!GtCg_2L!\#8H#A^J$WZoqVV\@VS3q[9SrJpsA%I-U4/GHFC/=R-LO&PrEp%ebq#]:PcT$1[)[4s52Lh?i;N]bOan`5.ut^5oW=Spm/O1If0*f&%LdaDr1KbC%'%@^A54"Dt<o`s*sUS<O8)0ok*0Qs+cfh]pB[B%G]kl-[^l-Hj2giZ$f?D<r9)UkIm/@.na1fb:J903RsXn5?/.QUa_.7CB7JamntX<uqksCbNf!f#\KBf%NGS3<s8S/ZB-YkAqg\OI%s2T9^+9227s4OcK2`IB,Q#47$kO*/VJcj6I'A&K!k/WJ8eTLc8]oB-ua#9"E6WH%dU5-TMdt`gnRM83P_Gfj:_dgu(P9qsIF8OVh%o2J`AA\YFm:9(D>gV1P>]=uK71R[Jgdsn:/NI'^-^4,oi^$s"eh=(@Chq?p%B9Qfr`^W.3S,]fl<;E>iD7*NrAmu]0U[Qp:C1=Km%InEj=8mCAjV3ht:>2PK;N&+bWX,S;R-^jQZDqdHlj@qG0Wn_`6H"/45;)_eD>tZ$OX,XR4)#ml"F6KZACSWVu5==nRA)CAULD.\S%[eOk,:tqiX)t!BA57HH)Frn'T&73VKXUc@40Dul/h>d-3`Q'p@2rB(2nbO>I]%UY]lR#77<OTI0G2nhEMXpekVOs*S/F@&?:NGX`%:&T^g;A!M4kO$YerLIs(At>?;;In>)%iaj/6"R>nDG.ILo;[58+,c]BgmC+*o^h$3jhH$&A+[C-T%&5Ck5?oV'3k8mfi_pcnj=s[%T+4*4QQ*p+cApeknpb"*NrKe2n\rhYhl:h](Tii$g.?1$[/J>Lfln1bb1atRQ+!E$r.8Qn;NsXOX-o@1pjJ;?PItY_;VF7Ra')tF%=kq$C=&mhcc(C)lp7&M4-`1j:rt#-S+UrlNe?3L)jB$dsj`A"Ggr/<%Ulh7,VOUbX2sAjR^Z4EWIe/o'`r#@**i^P].D+(ge9*+Q%Y:##]'a@r%%U7Vqq%!16[e+'p(7USDPN(kZ4W2O9<E>s1c'J-mS!^4mOKukAB^f<jpp)rI-i@AA1=u?CC;2i)k'rs;rfGWps27TC%Xe(ck"5i)[pRBA[^7RO@=8mEOS)c>2PNS,bYPaJs4))@#nh"J5N(g1"VQ,O]S#.h:!m9t(^C;[M],/<gMr]SsFjdhXI"%?.MnE*q%;"u?Z*'VY$A`Kl!H')-n%@4,\X_%o)F%-Al^TP`W>+!1Q>@)@/r"*,l#?=kD0B^atFcI5=>Go*NDr.qaeV6b#@:V.*VlE>Ept:bc%l`-*cCZL_F(kF8[&W\\79d/97O#+,f@Xe73YOHs?j7eQr;u31t=tj?0?d=qYAQis<GI[!qb_k3!9:=+h]1-ZER6-`O"^4TffB>=M%Ed!^BC4l9U(LkqnguU;A`nqi?`"\G]=`c7N4jIO0g8DUY/9>*aXN@a3S'pkEiFdV28mT^h_iD2)BlrbZf]$O!Kn^[I2K]`E<0:Cl%'nt[H[]+CMR`_q6go8N>l`ct+mL$=4"V.Nhjmm=C)Tn!d__67o(;GK\c>MSjK<8kL,fnB5%A#$rXt"]fr,&8L\o,"cb"7k&M^>Fc%)O"H'Ae6_(&2[+4QH%p#qFRZ'NSjP1>rO)/QrO=iR+F*]r\\8Qo1rqKNFaI9F%^pg;p!Y4g6_T05<5U<=RiLUnT%65%3+^q&KO<3%j3t>,[^L[qihZFC46Q+Cf,i;#'fi2?T1%:M`H(c^L^-.?4A!'0]l[orT$\=Fr4:%okc%`r(Z^gI7XbR>nIgD8Et?AD]n0Y<MhWFZ%F<XAY`cpKg!-@E0IGt3@j5%_mNDCM!R'%u$8b-jgcCl>Ple;9)nL(RoEXGo>38`l%-D&iQ3Nm=3ga(9c9opp?':ETL_d7"1&\7oS%a<Z6q=@ami=?U7kF9sVBCfOFG"/ULFJ`P$*\J=0pp<*o5kV!F$D<;2SF=i^u7ZMB\<$pqnpq)\.aELe`m36skI^u]cr0uf(Mbs%\%We's7^N>3I\@Z:pf"%X@/FomY)#Tu/]+u9:f0u3g[!Tsj1KS<eEnO"l5-L)aXM>D.r:q)Hlkq%r)lM8+TB$1sQ/TmYHe?LirEZ_5%HXXn,Y3Th8P9kEZgkd;6Qd')^*b<q&W'YJ"Vu.Mo9Y+SBs$u7]MK+jeP[MeOenIni"*'@Y,,<@3d5IL#0_pc7:5U-M[m:o?&]"\O%X&<JRdr`p#\\A,4/k@p%DNN;-XMF5f-cBDQ9+s47(NHsD8f;AL@qqK<3qP"X1Ud09q->GTRF3](&RUFFXsbL#)D-!Qj?+1V"!RZ^%/2Dr%Ou;g\?H)TkMX?.(H(?>/Wqb$mY=957Ln=.+\m`pt^V"So'tE0"=IU9pP$ODq4W4n5dUGk7Tp7$@nhXO;\5L!G_XIDjbA2us%6?fZ+!Cm_D[E4t?;2'SVQ8X5&<B5c>F#"foicgp3nY&eR^Ve<aa^N/7Qf/RACKs8]Zt.IfV(Q>Jr:Ca/8tED0%K)kmr03g%kBJ@6%Y?YQ(g>cE#:a'DpbM$tBI\p\W(t"N&-H1F:@]Oa-O"-[7nZXT6>3>&p33dVk?CM`bIaV4[p^P0Mb+ZGiT3rP:DeY)\;dYfa'VGX(%QjelkKX=$^Xi5f?nW6i53&=^.Yp3OA;1a[1J!QS86<e#4m@AWGadHj`\_):&cKe81jEFp;[uHB>ntH@0aGc!3NDH_#MDIlH@2loD%A`V2EXNYk*c/AhV6]8_+C>SAQM65nL&R4"3p5GV#57LoQLD^/l'hr#`c(%@D,=p\6,biCf)J)jD_T@_V!YaGu-`F."O+\0!C$ghJ%'mFe$7`*:)oj4#tmW:>rn(d=6>Idh?+PPoLH[f\Y[M)Ee.j'&#gIO:q;cClB$,Xer:sD&S,Ro(h>M3QK5\?m-AWuf1P3&k5A<Z\e%l&SR[b9lPOK$0$H1jOFB2aJ:fk\O8diX^[!BVJ")BUMUP=j`$#>sU;M;/@\'<A_fb%IZ(f:"#0]#$!4CjSf'mcf=sJ'@8SEf@Gbc%P/j:gg0h;kab5DG.6GWs/I(rE/"/"aRI)8`9Vp>UCaX;*BTH+W>KJ-@:s&AK4luEITb7ft#m7AH'2'Y[UG=6s,+0tj:UuI:A<NM$%'@fZ$^Ys45S_Z<s4!%TQBsV7dfL.KOfml/hPt\p2s14.7'3\"p81*5kL2[\udZ_j!ajetIKUlWdVc'B=)^U^3]Zup9k4iHM]JZ!G%-?3AQFV-k"O*P%gO^sVNVY"dQP8L?W?kR*@?0@>Xo%IS"SsEJ4M#m":0QiR\M%Q&=M-ubb5=$u+l`Hpc2KWQ@f0=0*66)n'e[=e<%9b)kjaY4p7_*F\*b9?H]P-gG`TC.sL#HcPm%HWFKPe#HEhJB&Ld44hg%e;)Q?$7h!GGYX-V1$L)Vm;sM:j_6R[tm=>#7G'qr6-+!%AO?Qc]@V:!P,W*6)bLiK\=e;<0S95k]\kD:a^O0Kpb0)T9>sUP2H#h%13@HMjl.!HZ5"E;CW(7pBI)O^b8C/3Z\HIJge9Kqar*'n%r.<"kfJ;b2A>2[7H/18#6&U?'QFKYj[l3fOU-XOYk07<A+W,&OL"=us[5BfN]@s<2dc/$Ci4R1(.+d`RNe2MIA>SB:q"A)5MG]>(%.d@atFZIH.0:>M)9/=T4dK#$l-(iTGPl!nsDLngm<&hSDbcu,3\eW6a/o@\pZ+RMA5U2\7$f,a,Kkm(e^M"?F+E@g0b_VOjc'qT`%&o2Wd7"Y$BHj`V#)!EfjV+kfLfql7,VeR\bplk?ob=XBKa/,@g4Q0E(Rhu#mW2Xd[$2-,S:6lJVSXsm_.al,[LmX=R/M1+sF*n[k%fOYU61<nfbP6n:'&6]s/loFFV[Y8>p@Np-@O0Yjd=5t'[UXp3?+'sjVQ/@F*2Q$[.CrR^CpWF"FqTkB`K`e(J[TCqM)s/?.\L>Fs%L$R!e9EcN?ou_)t"fkJ*?@A]_.VePSBlb;)L*26&,K3lM-Z,UO_QFMaY!:RmAt5R0^u&o+>C6hVjuE=Z?_Vd7\q%O`06#h2%i;'3%/a($nh,gU8(J!@?o^oUErb()pb;8og_GboVfGNhNn2I4'l2:U$+,O3ikL';>ZO`+_#W_i'&[^!+^$J@+IBA<EH>c5]`%/hb"^lR%%n"`hCA:lo4R+,0-CclMC74N^sf`)CV3#m0`,ta)&=uuJP&+Ff&_ACT$hifnT7`=J%qDS14r2LHV=mI1LQqu,pq-VQHN`WUG<>"[(%Df]R$F5o0.=Gr()9!:mPrl1GaE:&YJ%GA`X;6PF!<dq`$OJ?-_E&>8lJGXO$cW.91i6H:^&o/)C\Z4Xc&aS4rToN8[2irTu?P]!/%11#98kV[))3J)XZrJ/4Bl=?PI^12lQel?Yj3&uKZ19VC&Pc]D3YUHoUCJ8=QhFp0%=r^lrOtqJOhAkUM_Dn?F\o)2DY-O_;Kr:q?%-+0[DElt4)Zai[bhSNa_47U16`=+P8]h[RkP+kY0()Bu&W>JWU3BY2[/:*`6=@F";fTqA^28+V/g5>@5'Eb'C1L>@r2bB4R42Hc0%&4%e;3%sU:bd-6N`/$b7LDg&5D^lSHM0>!p+Ti0*g-n_4;S#X::S$:KnL%%R(LH1@/:hL/A$/4?q%jcPgquW1mX:4Wrfd6c95Jj0%;Mk<pKj$c_4E44Z\\P87DI9r'?MU4=Bn49kfSa3<3&,^t8#=)F[Hb\2')rrA[5BK?-h^YFo#!l^40c>b\eR>&mOA[*;)UFJ]<9V/%S@H-dC,jSfS9VX(WJ5&[`/jg9GpuA;^@M]B'Do+hK@LLK8t=ebN/$'9TR;I$@%^J.>lJN7!@A3Pg+iu[:K190JL!j[i>B6`/!_+o%bbB<m&G;:`LXn(0qM\NG#QW$Z0G`@4SGgZNQ!n9DQrZp30jkA/EVX(WaC/pF;)`II8WZ5s':H6:b.(-LC&#,+h+'/!V/PV(<6_<q%Q,EO#_(EBu$BlZB2EiE!&6W-Pj;B8&lo+(/SJ6+=AC`AZV@Y\]#$ItCDd)R!;[8pPhGs?iD,nC\:Pi1eW5]Z7kL.6)ASP8h(`S22%)*P#hO-$e*$O0O9>AVa=6g[+=_T85)-.55EK5>QHli)Lp:<)+FJ=?8QSOCU32@1tjgD[#,T*d2O$"qD_m)4m7BV/s0oRk>O4'/GY%mM0@c93KWR<66bYPuIK-N]+E,Z'r[0EIf&t=ph4PZA\ZEN0_&rN5fS;$EqY:D!#;ueQ?nfY,'%X2NhK0?nXhSG6&-2kUES&("$7(%[`7hIE?Wk10NFNN@&`/KH,5#H9n[c9m?7mX&<.:/$6Te_A9LEoYt-X^;VfQjc&"((i$n\N/p$J]Y6JToQY-bO[b%j!*VcMK?T4I'%T;sX!n)(eJP9MT)D5`mG^[ihiBrKR_@D;?]"EVO(`R5hjBdlKCKNH=4?H;LA%1bdrP84;4Z+D.k`AO\XZ;;,]_^nEk>TmXKW/U4X%G^3.%r7jmRD($2!=0?"/+,_:3Zp4F$MWgLTVZ-jS1a&U?mHBG#N0ShlEcPFilO8ps)m*'(<;Z/LZP@m9cjrS4G@K_(NmJ/,:drYd%Ojcc0HpbRp]%3`[4Z8E"]hXb4EF2i[_(4W`CR\7=mK(3ncV<2lpJ9Njj3D=Bjn+m39>c$jj0N&_HVL@]H30ZRR01ME#^H.F#7\5:%=k=@X("&f@hbnZc9X!.m,oo)XSn_8l+LC0R&h0qrJ/7,IO;9gD+=osk\CQ[_,4i&mV(4OXE_$[c8ji[_PtmVRS=]#mnnQ1/``AJn%80$Cj.HA&rj`c!%P`[jK=HaLLK,/da'Ib7Y]O*^qN"]##IHQKPEL";GZFWEG33W)<A\HatAXq?]Th0Eg<5B<D8/YL:cHI%Qj)6b-%-kmLC8/XX5INt)W'ZoR878I-GP`[k(Hke(T/XHB17EV8NWkp>e7UDuN0VL6W-5m^%.O1Qde'r*:1,:)"8[SOp)-8_<-FHYf=4S9`%lC]n-U.?lA!%6X4n0A19N3mh(1%OSNmfZGepH>3*niB*=!`[04"H<b4:`1,sK7j7T,O<A8/O3n.l_k#0:`3Cb;/TU6%-A0tc[^Rd%[Gh'(+_=nad4gEKC?RHeOYX)eBRGJtEItKZn9'YROVS?)76o!TY=M`\nH&m:a:Pj6*E'nn8E0.@:duL@B^I6F7Tq@6;Ct_bmg]e(%.Sp?;c2`?VYG[/h"3JWu;&!8[b&89VH3#99/_mlg84I4BfS6mVJ7R`.eEt[fr(J*DZmc_7,>B(R;2boeC5o=t,D2!nd:k<jo")K]%n.@?0f\VFq"dBG0,Zf2ZU1@epN6sTq:bp<82ba>JJtce[g9)U#.7dl%>NqVTP`4r/8=pYDj-iZ:>ocO,g'k(MJ<H$1.]`Xs,<^m;%)1c=o#nH28,U7r965MmB%`W\N@[N,@'"GASR#Gj33aA&Z#%Z*rhPW%FR60Ud/PJVD:I?k8!#R_(l3;08130*nclJbLeh=fV!@B$p%#*)+TP7ad#j@'38&N,4!7n(Nn$iZfc!C'L`.f;'&fL^SNoL=pd&3K,8T&'_fcm>Eo;RSn:`m;ed\$QlON^>+e8]ufq@I!sKVAB:Y%"1U5##).BbNK#%N=//VU[LobToOO@=H88k\rDotYh?h\6r05c%0*MphJ5;KB(TNFtPO#(+a0c\h/M(ge2)]#_8fE*m2'1sb_+/D,%^FN:jPY6Qe9S3le,(,(#?rAbs"6KLeHBLS`>#AFSShrp?KH`[[MVQRJX/K\<!uS]`i$&c#<MkWVUo8km$V.J\Ddl.2Q<$:tK%^n-%A1m>;)^4C]M*QeTPT-=5`/C4[8p=tO^oJmU7O[1i!-f-tCG?I.MGn5*V&)Bq/%!l]90uer4:09+HV.&3Gi7[UW&8I,9qbX?87)Nr%648l*_#[Q'.tSPreJ2i<.@R-.P763^W,!"*<:j_CBXlZr\;N2H>S22an0A\m\J'p5='>%[M-r9-l7F:kNQa9f]echV=qj/'!\D\^%jj/%>d28hj<RdLAmiYP0PtnSk<Q.`@`YP_>_C9r>bR'-r17O"^CaM;E7WCrTADpGiT?)K'e\OW*V1eQKYbHS:o1$tu`D'*_RTp;%%cGMs:LKk;.l3%ogl76V^Ls*06lIpb>O[,f(Sq^.=pdnEJc+nQjV)EE/ii%Aqdq\r"!o]?W?/_!T_K`@[mfab(Z2HO^UCM+[.N7$A%=ho-rc%LuUc<#7`-s^g1."'ID_]!*%W:9*+M__0g2D6`U@PEg`kmq8=:cS$^&.\j8`F5bI.JGnb36>q79[5N796dBN&;='XV"do>%T/;9=6UcJ-n<5cg-VL7L1dOS'!YR\I^ALdbPBBoL_M%^+%SS6eMP%6n:CAG<i[:3NGt]bT)^(F)Vgur=HrB*qnB!.YoHZQiKh+iK%giYlhb;lV^U*j_L&@EoD"[seg-e;:g.t!MB`12A/d%KSo#8nL&&iXuJM5MnMF_Qn%:FbX-^_qEpkfF;s=VX=ad_6BeNNl.n.-QQ3%,p[-8('RJ8.agM6kU<W,CXpH*&3%Cg%FO<Yp+59?5pm/gCn]cYR'1PWXTIS%V=A<?WlEsgnUJL#/_J1>9%QqEPEtJS+peBJnt\n-%<A@a4Zc)MJV'aj:8pg+I%R+-F(g0UZPgsed"[-!l"mM8e;q:t5Xt>O'X95s;:PlYmCIJ@,Q<3Q4@SRnM-QX5S+Fm>+KF*0l84]MK%*W])<!C/)@VZ9=Sr,Pf.J=nGd78PldGKZHG'4@Pn:e8PjaI)O'?7,`q1)`#,^r@YW-;b@ZeF?IKYW0SA.N^+e'ru:-W32#OA5oX,%pP.n)[E?ms!Z"^0$SU(79FHPNRS)[=LS2"4D5m[bYb^Zf!6QX`<2KUo!0e7-Vcs$CA\^nE9M'>JKhrZkd4c1c&B`-D/.$O$(r*6N%[fRs.FggQk@YH>2hI.12i)j@V&W>\1CX2R4X<sG?!(mAh1l)J9,TqGc;I\8d!6Qcak!6eN<B=(<a+5-B"GFW>/'C#3!+q)8>",T7%*RI\7I$41eg72o.Qtg7q6iu3.niHd)dNo(dU_c&()<$[$^]g_O**/I%Obt]);=J+!]D/?fkerGb#lOGN9^gWfEcXilQSFL=5SS_r%)8ds^GUq^oWoV]jTK9oQYXtUh1O_LY]PI?t/Ue>nA6%-9@"Qm.84a@drkbVlC5F4"+=HL!FHQq[X54>N9QE4!4j62IaYaNpDC_+X%3Z5^]30jW:,S%%A]YI9OnNr^1i$b$CQNSQ=9.c<"!i;Yj,KM0F;70*Z'#9\HMJ+N,!1nj>/BB-1-V[-R&\2G)kIHdL!)FB!+p>FZ%oH^3p@FuL@Mnb5iU5L+n'SI;+P@,UMrSIr/+=O3>WaGm[;PK&N?ikr.C0lik-5hD:8ZHIQ#Vn-X:"n)"9OKB=!1-*NB95g8!ZtSr%RA:#C\4AAH>9;47+IN5'<(&HoNZ]aN]WPblA4'lTH7He45Vup1=Q3(4!C=g=Y)4PK.-ZLdf`VF(;i`ume?jb;p,!)Gd$AC0J._&n%O\K:D=@JNR2G"_cp.[',cr)3b8X^!O"I)VOi+cLBS)e]MQtRt?OHj$>_F^7@%/'k0,P]@jKL"KApds8Hh,Ckog2&%)jF\tLa<kmB%iQMGX<,6$>P>1%Xi_"@!8aqpDO\B&W7T^q*VF47>SlDeU+\IdYaV#01cpmZ'U!92C_h/^lX<c`Np_j&")1>JASoc:;1iVLU4itKt%Wq8PP&jNEKMOq1X)*_-J_$UmLG`@9G,j%UM"<:6g:Y(ESjOQ3X#LX:7Loq3^,f$hg:apk=$ZG0bkoimuUaE=_C]f!H&c%T=G2V)Q%CUb-!,j<@UL"/6d5H>,&$9r!^$%Ph&RHn#j5=rY(qip2&VQj,55=n,<8eOQhMI_Lu-;I:n*X)rp",@*q#g0_hZjf2`au-a7A/50e%6^AO/?jd1Hd1c&lElUHF#)&.*MAfOu&<mUFMa^ZN67<9e7N,Ik7Sr<_ACq0&9e_eaes-91AE]p)gG[JHq38ZC!t_u)*G(4F)TX3i%llOomXE[G@nHg0]I*LX1"<cA3']X>20X<G:W>g*6q,#0E),(1+-j^#3FHF2)EJUJgPZFP/5`I4O1:W(0KIqbMCc'tD,&"4kl?*kq%-T2qFOLY^(!E,5P>6d(jTTho%h5lW5c:)'npaJRTD<l]RPgTb\\6LWnV(=A/Zbe/SP)/Xsl"iU_,.\dYn(!@mSq9iu)Kj073>eER%Fd=FDJ5R:aVJV>!.hhCT`)<V2m+Oi07cG3#IARKVb)1@+!h"R:3^!O">WfiI>=P6W+t;aaD]$4hPgY4iH,p#a(ll$nTp17f*YK`p%WJJ"tQPb7;:>lJ(m/d8drTmQE#6HLl%M?L8YaGYc=VOj]/"BpRYs]0PAR-ZZjT2f,$)@`jZID]rUIVK76q>:f(9:L\I!Kap!_HNs%jrGt6>=,kh8V)jd"-AaiUYmC'-;hln#muj$5hsBJ2bLB#m0$!`Wi=@JB+`XtDD)9YZEDV="7ubY09%A7-6Ob$rK\QT?.8n+P]2f)%SQ=]ck3AsC+=2)tQkp)L-%r+N+\Yh:@9dL.))9,DINdECP*uO206+T^_%IAUBEea\kiAC]_.3Ea84lg#S4tR_)X/!*9O<NF7\Q&I%dqZh)8L1.04Tn%qWQ\Md7?`6FTThpna_4O"V/oKQTTl;8KeR.0TTk+geVn&gQ4g3c?n$)*84:c.oU4LU'`_Qn63*7E:s.A<fHD[G%@^#!GPV1Vi&WW$jhH%Vr7gX99[h""aA9?;(Z"'Ye*#B#2[!e=h?\5&S!oX5?&TEucVOIk).Oq:YE0RbVXc!ZYRIlf\-m@.t#)F!_%8KjF!'iG`W)mBCBUBnBLRPlNYPYK-LOreqB.%?)HI,H7QTE]WIYVpMA?*5>VdN&n;!5sWs$:X7a68,Ob:?V[JBl0U2!(k9PrU?&]%]bsSP<.oh!,g+:cNic^3;GAR0,Ch52aKM79V`$'0Pf2Yb91d(3UoS,8VPNB^;83*0MU<%Jo>FPX]NB1Unq!V_W_?jdd\>'$HCSFn%9B?uK)@2Xl^MBc"!D?#53o`M,/7l?7TaLor=__]V'2-<\Yc.od[`fTiriX\Z2PI5*KRnQr.fks!0M-7G.7hhL6R=ObJYf/5;]u5s%-%S4],SDp[<igYJ:dl2Z.7lP?`ba/3[i3+9.RhpF<[\.Si046e,3&os&jOPrl!2W#N-n]+=;=P5FP1<B;RZ;!Jj;EM[k8!tZ^U9k%"G*C#\H4`G^]t'[V4qf,9=N#1-@kS@AkW4saa:Z,:2qC*/#t#/L]S\JM9.4RS-5(>!FX)nO+FQF3]DFWUH$-h;@m'3:+JUbi`ZAG%Oue([4k5\WJ1\hb!KrVuBl-]m-/pE1;g)%CGa#rp\WBIN&I>7!b/,mQKRF$W:atcCABL.L8q<.KUAY*X<[u*987i[Tj.T1tKo3f'%$JT^>`"j>(P7p6Ho;33AAXOFq-m`_(+u;[=&D,!-6ZiNc6Xm`>RfF:(RP*:'#5B1km$c[]*!lK`]l+N=+G_d$hp@JcU'uCRkWk@T%=V0a#:t)-idV3)+8p@EJdDJ(WGl^B;C[)F=&JB\ob)glscnD:R',5TEN33Gd=NRpVi$aS[e<J,W36ItkZj-_1EKhX"'n-PK.!\JT%_?,[ZkZf&j:+X*Rir1XFi_p]:3`B.RKa0puPa_0CfQG/0!lQ"d3QBt12IIqkT]D$Y%1HgMI;+WU(eU5X"e7/p;"@9pd,okO/1j`$%0P2%c8cP(YGZ'a.8lAppnYgaK;DX-"K_6T61,2:iZN8EiRIMN:;X7?.)8UAh'*JmEG(=>i!Pth#"RICfVma7,0pP\i8HmHP-NiET%5Z8[u7bSQCXuI<+"LXfInLE<@*Dcs]8W5"sAUp:%>S&3eVZf+a<s_cZJ?L/GW![tb"j-g-C"]g#ONWA>8W/c5j>"Ga&RklfP,Bkh%A,pbHVQ2ZoTIK-Y<1F@X10&pi!Ho)fGJM<#>t-\EEABdMj_>#N:^5iL3r4Ys!I0e$Zm'&anE@q1&<JZ_:,4f%8/Ye_Z-NMM#2%$Y%p?3)M$)hTsPQ?"AckT!l#^2Bhbml0)lm*/'!@\-;,VHHSPQ<NRQ[X^S!Ho*TM#f%-n0CoK!X8ke8TBPS8/]5-!4cm;C9e<p,Ig=1%nh!B:\4N4U!0RA#P'3FKA:U.#>lp/i-8NL\'dNn>A-adi-%i+/hC2&$a@U]P>*KGWPOq<m9#`%5$r/.g^W6Ok#cC,5!-Msb/.M*4%9MnZO%.KIWngZ(\"oq98E"jTC8#6OX$^;&"Pe\8^-lLWKWWeUq>+0tRO=2c.aoa_$(07d"ckRjZ/RIKM8d:ns6@=Fn\QG'67^cu@%Vt%WSP/2`OFb5bgr1r2PMNT.J;=.#Nd@74Y2(D9(prPdh+En1NPJj@J9ElLlVUE=lJ=iXl8msKj:I:$K0H&drR3^ACA:U;JUIB/X%^e]]C&i^a7("tSu:'L^@i+QOW<Me!)('4R<V9NM?%.KH\&V4YHT56?2&3(P@*4^+?.8C'I8u'[Og_0Za<l&m?mG8ZZ5oi%9J)cTL%Aom:jk+d\NpLjC?)(WO)q7H4!k*th]\iQfLYA>np]kiNVCTDA&9hT#Ri0EC*pPCFi[j!r`l5`fk^gj?O9P4EFA&i*$S@Y6K5isTO%5\+$NXsGc)C,0nC<6BXrqhRq3L#V^IRW(&CAWF5>giH)!a]kZO^0VgH;?]!rT?:'][?Sh>E[3T:Md.St5uQdL<.KE"2h+M5=_6m?%bLNl_(]dGk98;f$o:<*gb'$Cu/<+,>@PURY#.p8Hdc#C)R:WKGQk>`43[L8,WH_+0pC]C-Jr>u"=k8H[lI[YYe[*Z/=W5IPO4Z"A%gi,<:)'UZ/!k65QV%##CAK<o9.a*P_NQ1rY-Hh;!U6s$-<5[3H=p9%D3,>MhYuRKB^Q-8G_[A#]MTmNZ<_Qt*BSqiO-kJ=2_k)P"%;W2%b;sq=rUK<5W`8m2/=`l<I`Nll@;hD&'F?teA@.0,pZ8-u3ZD4\K2/BbJC=P)_MJa22L\jLPdA"/eb$o'BoVeb5\MBN%N&A]D%&f<Dd#"r`RCDWDfb9]-CN'\PH=P\"".QTe%iX+1g6c:Cr<U_2/btBK:R2K!:S:S:@ZWnGR1+6rp`PKP&Q?==VWAT-11<E7NQIG>a%-k1aD108FDXUr^B^ln45bBuq=/c<&E_33H=R)-)V7,L7;Bc<QIEOo\hN<uK[Pr/WD0n1L5SQ#M[49b^V2<CJi.=l'?=:dCm!7U"d%rtW!Cpaa7i+s+-@OY9\Sr_i8&7`'3p41e9r.;^Yf,nC04=s1'!*09So6=:[[.ga$'pI0lQJA@>d',c4N,d7Ee]FLoV!XV40JC$iM%q1o0>:*Gus<G5#=+IEM]mMIM>[S%JhBf^d\P##etP_:.3FiMX>&m,nMJm$]("I=ToKVp;4bTu;RA/$?OYN/W:DF/H`]_mf)&pIF8%YH4#(P'2Gm-[:P)DLaR6L2L-]TC::8mWC%OnAjdV-NoaHC`ot+QrF>5<_Hjmm?2dfe+bZqR)lF&-nJ(]k!&0uFD<";',!skp*knG%rLYNu-(Z<AV/f$,+IV_$\h]?c.NN)[3@b32?0`@2NFfnmdR0ohQF-R(It5SFk0;kmnm$Gk3O)n9,Y+Y4UIn)A(UWJT=CTnhO/7;1%6=e39^gsEDQ8Mbo/%X+6G9WW3>a>MddG.='/90.$bE<3f_?n:pf`]V42`%rpgN\^dJ]j3-C[`#2\LaGN-X;rkKju`.\k873;DEYT%Tg<;T1mhAqdM7XZgX;6ff'u[V@MEq*b^GF4<sNf4Dt^.]5roo?=X!i@-;.Z:E;9Yeb9EJnJRZ&C4LA6c%0>=Bko?A%XJibX4%Lho%c90^q[ENPHe$*%+99$g)CQrd@_O6m4=U*BS`,HV`4HV$j4utrsW_06A'cN*uQHHLiT0i<G-PV"C:g#8Y'N$PQ@iC%6j?dCAE`k_B%J]fh<]B9<WK?M]>dq:MUgU?dc/:2CEFE0:QRM%MOPuCDH&D>/SYZWFX/EKjJAdLJ_YZ[ur!hX%sd".]ZpagDU6"jE@-TNK[PdZh(%;T'7e/WGb/PRZ2^/#X(Q99E.%V'Y5&8nf_pMO]t>I>==b3%\-,`LN6U;^nUj`gr2plIX"VQ@(*X[B,XuZDFs.0a1N'SK',V;I3!V%)F.jPAK>\d:GK%!pJ/kH);<.>'hPBXel%0#8o#kBMR8\XNhmG8/N#Kj.?tNMf"et"5tbmf<(^uKVda+."*A?QCe6WU@S:K?3L0/=%b'0_qQ7AdF@S8j`$*e&TMhs#c:*miEOAhgWe>]@96Aq]u"ZZ`q980cO:;t/;&5rn?AH7h3`0OrY<7S==5RF]lasdm+2L54"9Pb"q%Pn70"S-$$.'8`]Afb.aDB!r+W$I"h#[N`%hOXFUQ8ecDW.]);Ac*GZ4.;aXj15%WU*jm;fK/'cFPm'if7r9[rJ<\b#.']/m;P@VU%YpGuuGqH'Z:O+NB_Dr6895NI<f+McUK\)CGJX"cl#6+mQ/N&t-CG+_VPd!m)CT0FV$*PXCK[Ijmr@446@`os1$-\^T`D8qPQ3cuD%g9N%<<-,-=E_Gp?P2+L5fL;$ajH^..7AR[gD@%G'8o?*:NeH2NHkIm=ARXkggeqZL6>gM&J[5Z>m#GD;PhZm,)=3YAd@O9_90<s\%>;d?AQ8-.NaIndT;LVAi922GIVh)BVSQ-+nF7NOMIKsl2$,<=hpaNs(,G3Ei8.J_DD+P#&@PYc(#u"r0p:)]nhjAFg;KSesQ:7Y*%Q;#oJcUi#RbW6Z+-+RSma%r*g%%,EmR?1Xio,l%*%Aanh,:'`L3,W=5FQA`>5-O^kSW&s`\!4gh5.N!$;F57=RUU<\Jdg!4\YZ_\%jHd*sJ_X.]@6gMWaXt>tRughe[?-PU2@A6X-@gjf![(p\/E'2pfe)_n_JUegWKc5%/.*i<AW>&Xb&3',*4&jI9Z6Rh6'sV8!(Kc'%"IF^+8-ggMN%SPK'GkZ0E+s7m>;E!(PfY&c-&$Dp;\BaK67=,_Q__8d#qg?('8"E3W\M>dmYHPS1:5"'Q[ZPB&R<JUM_;_s+HcMG%8o^j/-5;f@jRt#T-140Y9,0g]-nnokhM/5JcYt<nj=.tm6l[U-?".NG*1)%&-Fjg$:I9)9Lepl<0#cZ",IrK;8OtH;h@!j@iTJo-%81psA/KqY=XdgAt]GdG)"cgc`<]?n9*1':b`Z#d8Qg1a)N+2iD>F$g?QP5BPl8@$`(bK[C8kF;lZ<VE3!1c^*QoH7ZR:<^k[Q_lG%fLdS=,r\]DE2f<TB"6>$8f02RK;Q6G5)?RcL@I\dAbS2;*C3C+a/,^e$-+?KAE4dZ.^TP\59[Q_%9#T6#tQ:3/dq@3Q[oCGj1%Jk%0I"&\oPo1k73[UGQW9g`,s7O"6ca>jl*9#t.F4h5>8!At)+@/=WDkYTCGVC,>frn.nlu5gQLJ-7D(Xk[Pdkd$F'0e?QdZ)(R/2Ko%;Uk`2i0%OKLu2*\64(>:K?oM@/I@Pufe&>06$>o%m$=g>O]tjt!984_QK!]lfe"`D36(TV$KNbTLUKu)"IE.I7m_0om#iL$1kFs4%:W3I',!&YS986jgJkJrGqYZYbG>`l_#pGDf&kL0i5]*Lo3e7A7a)m_1)A+b1[:L5`"DZ-&`(uddfT\+=1SqOUM`diElk*HR+>+hG%XH_MI-+4M#T--K6@S6^h&n4L$\3WGt8\.^JE!WgeaM4\u7U#r!V02<,0sN#*ehOG+dQHW&5VZh\=c.JV8LcSDTt34Ce=]Kl%TOd,%hQfgDE^F[nD(3.E=9N,WbD,A)TXV:#DcmF0.-N6U;RV/P)6ce\[T,m)oTgD"Q7+?</PBZaX9H_.YZk.]V'kVq+>$:>/]CdXG"^\o%&Fho,90AcN>KYBUhNG<*Z>9=/Q=<B4oTl4bVY$/h[q%gDfpIHK&sc5.DMa:UcYa&gQ*=JE9NPJkZ0S)ZDTNi7HHl1Br\K2Z;O4%Q%CahU7'3g4"R+N$l59[H\rFSH6WS"k:f2DMt!+coQg4:G<?HZ/0cuST!]U%hZ!3]t,[3Sf%B_A>uEuOn^QCo]0Xef$$9<^=+f2?Z!%>sm?0K\*LDJ8`;?.<@pabGO]2qRi-B-?J"2?n&o0Teg5fCrgIgd$^-O'!UGMfht4Jb&"%D4(5Q#PAe<SM6.5%b9k*J"EI.Nj/6@0%94Sham$:&cOPNfc\3S@coTnti-M3U]Sk8/uji&[^AYgZ3*PJ:9V\4;K,d8QlQI(`/DcnFN)=gui&UK07Q_m-rV#6NJ&Q^^%-'!Ai%Ds?c'R,>2M?He5_'%-E;i0(%QR,G8`Q]J)pJ=]==/d4D%&mQ&4',+UPSWXOh!ZiHT>F%m=(suRYR@)f.&G-:>,mfOHD:s$h),aZC%n>SZY@qNnN@=SrrV4qVDCe62akSZ-[g'Bj*10YASP;6?G'N8'W96LqH>7rr[;Hr.[K\E_.'P'^N8`WRfD(3OD;Gq+C!HNqMQDC1P%!mijf[M7d2\LhrVjK@`E>FIgQfeH\<G)"5,-Gn'(ba-2mUs,.WrX#p-."2K/AUm=l`0O5*@U`!?>8(I="ja!_Q9\&of[A.r:/:5E%fTOmTPh<9B>\9*gfU7EEP1Z1eee7g9BJ&PU`Qfa1QGh(1e^AQlR?Z4,DXnjJV%sC<WF`#3Ju95Z9DQMZeP`Y..BB9n\>:N&#40R@%b^[SniBD4HO'Zah/I$8'J#U(nqI>XqJbZNMXCVl?QH73P!W<IB[Ye,/CDH\d8pj2h5D_&D&#Per(3O4Y1E922YD/K$*'`Cj=VF"G%+j`^IMpa?i70*OZ<cK8PAH;?]NE5qZ<RYhf=?"kr=\Br+k0$B#$dE]k[Z@l608M:S[\,OS`0VCBk8&TfVmcg_4Lt]8=VMkqBGLr1%,C]pIQPou0d64H^Xkjg#5R$nY<<cUCVF4RlH<\0Q#PVdAL^i(LiC0`4KqRj*I2NBI=3`8hAYYTG;:Lp,IfXE1M6L(L98-Q8[;Kr6%5NK,Sb3LM3Q\?X[alt/-QWc@R_%ttCXLa_5IAqq<or1RJ>C>m6V@WeaK$')#.!&Xj*_!UpWfm:#8tZB_)*6Kp=qR+@##q62qpn0u%QMOKtNNroG-7>2.=Y6=XC@rp!*KF-Q-/]R>@AQgpYYg'b=m>H6TlPB\24H2jAJ79S;#FRlU,GrZ/@)\Ek,>>r7HmlRD[s&nMT[0m%L9FTC0/I`!<XO3i2iBH9'g,I(o.efb8BNdjG%mG][$d,cdkPbB\4_S)eU(RN<N+[m)Xo$D-#p_hDl1L*&>Z!Hm77A9S"o1TQcA7>%@H\g&2R_H^7SBsDV:IEOP):Br<+r-!(CB\ETr:UP>etg0'+>U_6'k<C(C/o_:?ac9#)e4`5oa`9I99@5,aPF:J.>7bX/O4WP2[27%Y>kSEHPm1f[(&cp!oX2CB]-RG>tZ<S/Fr!R&7:1'iOD9jV4Yfa6"^pOQVQB1cim!g)%)-DL-0SZ]P9#*Z6TXhHkT,-Rm?LF2f7Yq%X-LRGiWA^_+B<+/_VnNe\ABm&>8(D2"?htCP4d9AT`Xa1l$5@No1H'<CRH.']qjHEcetKH'Ohp]CH0.I9-Cse1q9]sRk(Um/s3IJ%N.N@RVCDTl^=9II83@4&QU\fS7Oqfp`[RRD*]RTBXJ2#rHs+AuC$66O;>h.3f9#e@[od%PX>tR'/[T(G(F5n3UK#N>gB%`YCYBYf%jIT"F)pFWu2g*A9I&WK+b<#/GJCgna:VhGC-m9E.!qW8^KJM/1q,1?:]k-"&k"GA?8o[3R?Nr9rR\[o1^20O!5^XG!LP+.kba4d(%jjhqtK'38C0@SmrHs%u^&l*^-?T-`l"m/HJU_WtT@(oSQf,PL`AO,sI8%TlJ1(1KZ9;8'#I$rZ$i8hVRPHP)_V(qL=,u_;"]9I7X%pLQYcW$r)Q::=N.+--40gm9K^aV.5591mQ-PoJeNFk@tpb)"!G?5r)]Goe*A"8ue+Ca"HYfIn!%_LQFT-ILFeK=(!3MRb!JV=;0#%`<a?>$hhaTU/IdAq(M(/.Ihb?!oi^mKE&5Se0XF.P5eF<ZOm?gYY/:SA>CIKV.t#Z7?IL(:F?2@QbCKb!@D5]aO1CuQs0=qM,L.]%%/%NC(p7G.;b0_XJ>o27Gg+!SW=DBeZ+tn3TW/W.O9/@;kEK7N5.M(a/%JXebWKWS.577dWB=k7%?3t6?rk2L^^h"o0\(2R=]&"'%2@9tIa8uNWa?qGuD@R#thR3IjAeDG!QkDfLL]RaN1>8ae!q*`qXr;7eeo`13^k%mZ.HmqCN.b.sJuM'DGICE::e3J/$u+$882)oN%;GT#=0U3FVD$^NGaJb=,P;4V!_%[cPZ=&QK+q(:=#cWbT=YN96OTe[OI3>:_(/,(7PQoS:mhhbM3UiC?;nig6L;Ln?`AEr+UJ`"(%b,CO/;e-SV0U:W>a!.@reG@sn_,Q"8h)G]OB%n(5@B,7f^p;HN"!XM]K;fIb15\2])VA(.739Yq=\)m;'$+)J!,rfhbu@)n#IBF4%EYLmCKM#r4[1[IGK..E_U;9eH72ejd-Se:JG;`)@L-1i'Q+#@BkG+5<#n\Lp'PK/Mqa)1N3/qft+t=bQKSYeO.ZJsV6mY6g.\f7^%=Z)>#!Y]15/4cCd#ubCLQnYQjIOYkOJBFgX#ZF/k6A,XW"X_HnN'pX^KW-.&9UI/t:uk.0AKmlFJuFl1jRG#7p&J)/a=sZhC[70m%MIDX/@1%Z7-,V"=+Lj,UhbKn6JQo-a"2dg30NlRPV8D:l0bn;;lQ-dQ'8e/]9UOJGJI)uWapKH31eNGcGg8U.WJ$g%#([&D8ZPrV%^b$G1(C6'e7mM`1.M8OU4si[b&.f-[VSq.d,"s;K"VIVg+,Y=t;>`9p_Gjc4W:C3U%T"bh@61u_&B#e*B!"Ig<QB_p.-MAd_Lr/X%Q/]+MaE/H/C!;2YkaReB;h2+Z%jjZH.1`9jMFm;F`d0Cc0Pr;K'-9g_&+=`sOX-Cd?tr8K)jkM1Y!U!XM2qbXV>@6]]WEO;dU47(%!"Vpu!9k_10F^/I?rqV2j7J"<@RLH(YnFF</YQC,0To7Jb(*&o@nf#/[eutr/Vu+'GqMu!9GpLGJ>o:G"/[hdl;KD>AngQP""*8[%;[,pP'9WDq\X1,F*Dp50pV!$cc"XgD+XMeb&kF\YWCPF''0"2_9hp\@9JMHV!jaMC[Y+^g+o,J=JLMt/'UXWX=9VIN)NPLi8dVt,%_LW#S3B8cDFn7p&\0g\XBM7:!FO<J6^f2.1,Z[6`#s'Xa_9<X4KY?%d_8K)l9"`UZMM)+2V+F"*af"])/n"jD"B16(0Kbke?s4LO%0V,LWJhOO,9WD:;G=$r8J?Cf-_1Yo_BJ<"B$l2O'/g"1Lb;rqWJh6EIAcN'JPAD*Z1_;@(OFL=*.58$]U0B;5:i*-\%a:fP-/MO-%QK3]o-nltDQ#^8AOqJ6uE]YW_R)07t$Hsht\a).^]G#kSkHOJD<H&>1iYJma$;=*]q1Jgu!NqZ-?p`?g*14#nJ@&;HoY;pb$HsuG%->(&(E_jQ&=ePV*b('fITOko\]SSq)fdHluCi73pelcI&,n-0@ch*PW>1f4K;FO9rJZ0S3jhN,S25.hX9cn!>->uNP.\!l&30^ae%pGB"$dX=b^IMokrhcoh0.@luJBdpn3R:.L$CSp;K79PK306-THr_dMRl#A*LAYVX9J4mlJQ[g5)m$Cm=0P8(a4$7)h"T9:BWA;k?%;YEaGQ*=VQnX$OgC.2mA?TK2/BW)R;930d_A$r"Jk*1iPTta"[=3tOsc3fJS-M3WUd?F-.U5ZHEH@g#;B6hFFflE7>s&*PI\-N/D%jR4"AGsQpoPlB)CXd[UDZ=n>JIu+/L8q3f`CX?E<g(MK0R/W8qfU2ZDabXDbkV&JUHM!Q31J3.2&h-6F9.a>hVa,a2!IB7>XjUQ;%H7Z/G:F>_#``f4RC_W"deP,`k)2BO<V:CZ2JMWGX?TR#F2V/XJ&CQaCZQd.^=;ESuWl5IM4(c9]a#mtL6pm"9;]daqVjGeE-NdtW%=?8L`aadMD""(#c-Oc@t@kMQYVes?=*<W/F7'JBL-A\V;PmD_pHQ3H]b3;8kd$Of3?C((f._04dIu.ehZW%dT(5u-bJ#W8NkqA=f%Y2Z?JoTtXge+-,+1E+Dc$gaB,,1"VLr!8N.EZEfA4g\qS9%%=W,'XGcL1hJ/JOZBi"B)?'[?6"_Z[jh]C3)kD8E2VYYM(mR;O.[;%pYS_j,k*,d#[,$%b?Rc36Hm,p`B1%7'[$1QHm\1Paqc0:W)S!X9AtI;ZXld_!EZ"l;#5saQmV`iFTdpq*Y;2[#BQ>\Y)HK&9jlYt%a`<G7k("nH;:TKE@QINb=aliZ**3;lZI/NJY#JY["O"Vm/0U4O@0MBZnSkYH:1Z%cTjZ2M6b-TA"Dk;C"FksL$$9(-SG3.O=/&lC%],RXAdI)t,eKI!^MXhOur"2`V62a%f;4NM,$p\GCMG_;T`K%'P?**s6KQ/K$>@8utc'\^)Ue#W#9ML0EWCCGSR'FZrg&e;(+s"$M%!LC,35mSSqf93QlNMeR`S(Q.DiAq;XfeL&Lr%JG^!So)oo>#AT\gnXRYIW#cMj;Y:3,RE>0q#B&FsQ6ili*eX00[*q^%qBVMqA!A%q=J1'3X.FeWC@F^\KZC]Is9aeS.Zo<-6-3eN2?]K12:dlT*5!ql2_2]o[-2-V,ZnG<K#`UdH3I(XhDM[:<Ce^ppK)k((C)-fC"%Q%rR-M;ReP",@>_tJncNe(oT"`,5?g43>qM:_Dc9!]T_cZ]_IuRKK`T6sTeO!.7:Q$`hb=E2.kpH-8hVF1Fd6m0T#'F?<C5YB$&+kC%;F9?*"q7HO;F4dmFmAEtM:<qd/1?2[:!+$<M3PlGn-*g?gZ'!flS=He$$)Td^_*Cs7,P.F$AW^nJC5'&@@j0[;HSmnh3:eS%Xq:_%=/q/;hG-%a3Qd"Q(dc1F\6%T@\#)g3$6N>+;moLr.NE?<WE%j1\?&R]-5;c0rNSj@/8]f%@Hc/_'NVkr&YSGAT<NQpG*Pk5,,>_&%4pcq:TbN`R.AO+8"*P>I@Cd"J>%-oT,Pi3f54>AU_I/4B2C-aRgA[=iC.X]iGPITR:dklmX&`D4)[P?,>%r\aP\SCEdL(Ws:##AR%9W1WB5kQG=`Su*K]NeFhCtknSOI[e;$i'a86&Re6Ge/#NlJNmga!oO^)_cW4bo0I\,],I/2JO2FNRbNR;N)KtiQ;nE1Y4&`2'mBo%rK.W4\)NZl::#ZT";<@r(D;LpCj"aZ#qQ,aK#=9r!m?@"B&Q<^gq&W2NI'A!no^$+=bK2<TrD&mBMj+939;7aVAf@geG%/%hB=)s%gL'_])`eGm$N])kE*Hi*_W7+/,8c)cML,j,F<Fc-SeI9r;A@-6l8eE.8tF*9kUWaOh-EHG=1]?I\'aW&XgJDmIh=H49p.%)VdS!(%JK@tKp8DI(65m5Q,3H9o="@L[V+m.@.#u?&E>)2!6rr7hL"m7GE7l@.Q1[mdc=BL,b2@MpjqGU4'"*t;`dBkAk/f?[QBe@YnVPZ%%[@SJFLVWj>C)9NY.TV:UPral&?%R!XSR&2m!=_RXJ&]'Og9M)tKofh^g7'gfZeL4bb(<NWC^!r8EiQ@t*s&-;jIN_fa6%ppN%jN@%'V-mEjB7L1WT\9a?b#?fgSPmrr(Qon/?bDr%;s1SFZJA>hF!dPH7WO=9W(a#3WP.aX=?P:5t?\3gITor&?u\jAK_=g76n.IX)ZU(%<#'rb18j!T>Rnbe@D)a9+-P@9[DMB;^dD`X.3I4E<.Wf%WfW)%cQs2+>!lFUdZPN10j9]TEK$p"Jm+7&)1L@u)aeVqd\crY#25+p%_!V4='Y@NE_7@gTgP%j:Mf^BBaY@?@?GuG:X[VW/B,):WS:Hd+OgGte@Ak(("qJCKQ64?R.*J8Kjk@6nM1P)VM:2B9X:Eh@WgT6L%eCl=].qq#"Ul*7:j^hF-DQ#)d8h`eJRJViaEou:V%SK(8)9ou@Fh/j#<,E,*?>L?YfHnS;e137d,)4K=JC).a*9NNo:Gia!]!\3P%/je!GS/bFIqt#Ncej>JPEY!\%!Z=IYJ\3^0D(KakPn:0?/<++_n2e>%-%aH:'.:&#fK:ogbrp'7eJ9b7D<^Y(>>#/&.R1?je\.Jj%0W=lH?pKU#?\<dAcn*tb@O5Dop1T,bQKX2OP2mNeLN8rJra4V<g7g$)A8;HH<H[dleg)u9(8t%0A6[lK'f0C*4[;gskW;+H,^2B2%a_ULP27odOTUR'(a"rG?1A^HOD$/$e;Hto*k<]:Vp`$"K22^*G"rTWK2`\>cUZF6f]VuGfF_uLo1DFC&WPQspHUtl1At.npX@](f%5upCqV+%^AldcHrj<95`dZep+DNHcp&Jfm2+HlB(0Pr'GjU*`>YSK&Lr@SuXhD0$r:?g2`O<:1i"oa=K5mOf-AiWf$S:]]-DZ38'%nT)g;AOb\PMXHmOmnDP4]/+?+Q*#60]m`!?J!:YISKTL#I%85rYTp3^'I1,NSPU-oITomAJeEB1]7fo72sReL<kC;qk.['\]>"eu%Q61'-Z'!T91RRJV'+nK4P!JT#8VfVcKf5`tAOVqa_GUsqOC;YfC8m"9asgbuLapOr@B#&48h/N]Q&8sI#tm_>.&hlr,&EKCP*UuE%1piED&X$,1;@s1OBYFaF7FZJ3ZE'fGC)]=$P_u]5d8CQfPZ>$D.hs41,qSPIBrMAM$-/kd$rj$gmj2M0i1V\54@rQ[4/-[\;TWg[%;M7slg/X#<Kp]AJKVN.KP_rj\DcA1fTYIj5KGrGj'qm/iE!7SR,(emt6=G)k1V7@p#`9K*3iA5eOC4)@&R)dU!c(jf72/_[1psR9%;/0Eodoq]I>01Yc-N\!.X:nH$BdIJa#fkgKFX#P0`1dT-4-:fBeVQQ/Y1AF8cj)[4C2R7F<g)$jOGeOr=!n'(92[-hPp<k$&J>E'%eM9EbP#[m8#sqWXPR17R!\><_Pp"K>GC*>A:sPf`/E&KoOB$msP7&tS?0Z7u<*UaUjU's&6$8maaTe%3>&J>F+<:-_8s!kDh-QMB%VX@Fj63;8"KaO5/nU-mj:23[8=s^+J]q300)FE0F'a]J]+K6!,5\O%AaJu/BU;bP-'rGPo(t,@7?;'C([oXkHOp]Yf6%[3Sb645V%l+/W9e;B2SrBaC*b64)AQW1KL.ha1[2(92,aZ_$NGD"qYjkqU.K1R/q49iodg*Z9]IT-T7U1V692XogpNY?9NM^Y@le!b@(es\sE%F.IVD;#hZ=gDM5MI)F[gYUKo2Pe[>lA_A5&_F2!9oeQ^Sa[62d#i_po5;j2cPX#mh7ct/Bk:4nAOFsE0:701<]u<Z&+USk%`<3"k%FPTc\P5:hiC"iK#E@>hQC691I7=bccm(L2[j'2'S,R[+1bfX)sVWmPaj]%G="X5>)We*$,NYj]Bb6if9RTGLo<@J:V<<Q=/%Iu:o%BH5c^$tF-+FW`NNQ3O,0K3"l^]cpS47E6Of8ib_r[%o*oMIp*Qc;_%AF6^@E2Nb3fmg<W1hdc;bXE_q8@Hh!$S%Vp8r+-W\3\lR'%GtJh.R^YZBVZG^,VjBn?#V>R\1_q`2+<uM'W_BfBfXAla\56\1I7fcDPfjXm%.k.[GH$J;)]Lt"KIGrjO?DZ[=eo04\sb<u]&mnW%gKI7_61W+)X+\DOH+Ck4J8['OF[_LhH/XuP8hu]"mO,@Uf7]m0U4nIYj=O0d!rD/9G<0I67>!l'Uom&s&_q37:bCp0bLPa?/)?@,%_.]640gJ?B.a@WMBn@QFWH`Ln25\9;!(>'i"n9Z8.Bs9A?=qK=S1b`rY5EkQ[5R#>nGUh2!WnGV"$neA=I+5e3Wb#AQ$uXeEd*8n%Cu(q1&UYo@lQH<e%q#uX:_J7KSVJtd:4lkq7MH(a_)cL6kTg^MS9UpD88M9XB4W7<Z9]0+<J\,IiC!#=b0puVo4SCi2aLXWgnQ/G%\):hN7*?Ip?-W0Ym6%.+XTIfj-/^!?I]9rkan&D5BF<4rls`FtHur.!SX[9.$G%^/c\O6)@55ml<B>3^O$X;WQ+]>][3]cXHFpl=%?R8@N2lgZ$_f\F9=1IRs^I'Z%JP0#FWPp4K,9HgPL)#N-donW59Km>.<R;.@Ro`G)`o!$A<AZfb-\6hM9'e@<J<g7$!cGR\nIAp,%(O0,b/p'#Mb5\4`p8p:RZ[!jaf6@8X`K+*h2@E^Ao8ILbdm1&Ban*S!c]WcD\ocfjh;W".NP4SY5XuOd^^ohpWQK-7lE?%q?&7j8%o1R!:.J/RiAR:3a$Du/C9OobahCTdamSo(:0JJhrB$Ja!!^j.uAe"*:+9O?E8V/aWFk.B576IJTB<A+8Wln$JjbbNSR5JREAkc$$%=US2O70j#H_08Fh-]N\Ukfi(!Pr5<t\oQC\V$dEARKHo!jo*Q;b\<1sL(*&cCWs,aaQ.mBb#Q"*el^B?]-<kZ=(9FB^roAQ&1Ci<%$>W92JSR'@YU656>%0)8;JC--2,rU-9!!m44tX%Z'&-!721n>\$>Y4d6W/ll$>]9tVA7\)P!t#7$>ZM:VOP$2>$cqM?u:TT5@2V]%oioh8CQ0`EUU2+VBksf<paHn[;kBp[):uGLCF/ShOtph(0dd(Q15()k][+bVK]Y$'GUYtU[CibeT`)*Gp4G5-i_jR&R\-OE#nKb(%'GjoF&?0ZaBW3k8?AqhT6QT>oN!m6&kfW*<@<p"<@BtXMITL7.L$E;VTs[RrICS)NF):t"_XKq8VQRde.e6DhamgfuO6Wg.NPL];%MNs[rYb#..[DEL`S.Q99;P+>.k].+N\$aeCULOQu,!BIu.KYhjWjRT:P('YnL*\@0)G%SSUC!W#S8-1TMclt.ej;Q[,,^sBTjRs+%^-C22B=5.+Ui@rSRZq"a%VR/M/]j*B<a,t(R9d3XU9UJ6CLj>3*7?]L0m-+,p"$.5Hl$)%[42]?5@(r[4GA)sJbK8s(:C5!p/$D&%-I@2UNRE9+p(R,M!pp4"$qq!-:rtMmb9`=I?Z)uf/aGp#/pU!t:i9!Q&]/T\\[Cp2'-p4:a-2fnX"ig3WUu9<LZ3'V;N%=*RPK@@%"2:(*A$n22;Lil@C2:?]_7OGt$tuNgf#RoKC2<_fPpTI7ZQp8_,'9,T;rS<if_oi+JZ[KBm94E[f,V*!hAY^^VY/O8PgG<mjq%<;%]6\6HG='!N9'`Ssj^Ndc"<`C*G8[Pg7:!Tq?J&**4"YHJ9:hAPdq(nW2&\_?"Xf51Bjr4_jZlF!9co#k98]j6=M]-aMQ@G-,:U#)%qLZ6*)@P@IL"><&elbr<4_Qs@3bp!qJcAW-/K+jB[&220k!YukR^(\8[>!0[m9$;[Up`&4G`C3eSMatVE=LS&:hWQ*HC8`#VM3T3%fL_VkITfW]%F:9?/h4\"gg;J8VSUYHGrobqP`\V"QpXb]%K:h-=AupE6cpY'=Ap;[TfX*Vb*89eD*s:?W\BOhr>KIURZ\S)&F+7p%2:p9)OAE#V^.4Didiq2=TqfP0hK1>dM)>r2jT;Hs;-&@uG/q'=-9Efb#+hfiar28MXKn^0<`2J^aBG01K(+2u]%:Q%:+YHndfdAq%@Ri7H=Gs70hZq>t=l$7u(,Z@5=]6-=\<rEtCB+km2:h=Be7MWYAtqIIW3KAQ>mb%!TW;(S/6^aOCGpVkEef_V#t<E;-2]GKha\8.%R6i8lC9/Sbe->qDJA?gVCGq_He6"5q[XO4D6o:U=O\'JdUr&RX-<+*J;W399CO$X$Vkh0JKMtcWNPkj<"LBir:.]jkn.mj3i]!Cc%[(Mjg&15rX6o_H_>&GSDA4,'l/"Dd^C*K.qibF]PBlQ!EkGgE01WZGh[[P@9\@*;D;d*C"#+^uZj+l_nAMlR_(KM3sPS@.sec8Q`%F6/40BM.TjM.ct8#A\@fU+*4F`r2(O<=<XQP@u/fPS@.3acmQAPPrA8C.0/"-Iu2'SRb@9Wenq3Q4Ht[>KN+q<T@"t=Z)=8Bj!;c%-6&K=X^k&iWek7Yl`*f;-"YX!*$o1H6<d\q9dN_9<Xk2u7FX/kWKke7i-t)>'CZU6Cf<10A^qokP-SgPR?Fjj&1kn;%-d96DFmtg%PtWU,<Yt:)EEP.iVPL:3,nm;Y`I]P<WeP5HX/Z?>KW8e0ne!2Z<4c;$#c9'@'*M6;&rN9a[&.":Im7_KBgrnA+QB,1Org/0<?kFM%>#\44rj8UBC)SBueK!gdP-ShM.^#h,>ktn4R`L;6>rD!*Uop/>Hd]K?RZj8k<KdnZ?+#iSW<iO#Fk,PKBjESjf2(\35suQl0`^f8%(jJkX/aF<A<OH3YiL-XC)VcYjWl>Z!>/i$@W<NPLPZ0GL-Xeo_TtCPr2eD619<)EsdunHT'IP3W$jCQI;GGG9;Gp6O0.El$Zs/(U%:;LiTj^MCk9nY5NWYlc!l_L2B4;6=FX%E+!f2Hbj^V-i*\Kj\*H\-^%^0*^)?j=T"nl#(q(2PfQbP&gDPqi7p=rEp'[9'tDkj<dR%,*G1RS0"^9nr7W3m&3"8FfL<f-HXKQLd7\dV5K%LoW0\L9Ej8\8njDeWh"o`lD\&.2qb1.B)cu<W>0mILWST*lI8d3_162_0$SI,%.]9-^aBT3L2%kujP%kb=US\t/T']B'W><pf\>5Q+ibF`\Its+!A3tK32:Nn_Umg@'+cAi^2/u6?5@p$XX-6fMrcPn-*[T>T@^N&/%)P,;"WTL'`;U#FA]qh*5LSUC#10mdPA@JMU4XJW0UNT80B`UFDeNi:@e.$^'D<`4#C7-9PLS>\j*K"Tt<]LoF)X$.SW)f%P3Yg1!%Q?PbT\;4Ee9l@oE4m2mZbq>o+72CZK=s4^2Tr,j"^T4?eP.7Kj<UL)s9o]':Lcq;LC7"@sjO?^(I`eYSlQ("\r^D#k23!>X:<dXf%S=7iQhTMn+\ug44&f8%:VjNp%oak'.*Ql'_R\:6?VC&M`[tripoLKDm@XY8U)(Y$PV?X>dipoIc#9I&`BX:@22;E#3;@=ZQfqm1B%''tC<)SF9;V.S&9-RR.k/u;T,gEEBtO?^/&JijrQ@3C:n)Mt&\Q<I\ET;sZQe3lu96kX#XqVnm!g*.VBC>@&rI_khs&*5UYR8Z\:%,68c+J2A,Zg<unn8nqtM=&M+Ld34"Z;08h;Bb]rLC3l^D9hhh`n8j%'.M\qIA_+ih>&*1=n$UZ<"LW$E@A*hU#LTGD9_4%()@dL[%PSs[!+JgE&''CPH]9X?LUm@5`!-_7;/":IOOBPf!SjQ!W;Dlfu,D$f@Xm^HpC<")1$E7SbQgI+S,Z4ig#8Lnkco.e^RWZKHUK/g7%Ep0HqcJfC56\YD8;H'Rkqjj5qHN0(*j(%LtC/L-t92?"QcU1Ng$mrTZ>%/5iY,FgH,:KR+k6(4j.B->rJoO>]`H\;ZB'K(X:lUP"%9QIJa+fAqJq59aOC02UVk$,Y0X`c]^5dq4`2.g&'3AlVBh!:q:5]#%N!u!rhE8?m'"eoa_LNO0*J`.hh#=QKXYfsX/bI^0m9%mKp%Lc%_7lkEH0*;gLN"-@,]<J/H@+feWTMVhspU5B!^=Z'*lm':@OQp504TTodc[3f$6)b+62.(q7V]4BH$h-99PC++B6];uop.?mgG%2]7mVG$VN(o>a@6jk6#">YCY+Jnk,Rb_Mi0!:,E5>-P_*'\,1K+fH0uZ4TsG#XPjl6+)50'!$4L6ChVUn1I!aV-:]L9guH@75\c1%*/\JW9d-sEW.oW86W":6&Vr<)a=%k7/#j1VI42,7-:'N:9!gjGX^+cJ%ag'))A$_?TNW'P`%J!##g$@L%;"s_U=uG1X$]adTF-!H%<23ih.*/=JrD$7MbM(uXh[`8U#ag%%HWdaMFS-fXk-ePr%IWnN<<E]T/utlIm&@#iC76\N69'4:!U?\Aq#pU#n%5`k_I:eklRo7S%T_+QdeLl7Cqjjr0V"Z"5(<,V^>ZXW=`mQO2WpI<3\^iiJ2<ugYWjTPlmn^N:5D>X84%.4f<NR94R8[)pEfc'V=rZj(<DC4):fWFe%go7;B(KKcC(JojLC,'X$G""8:cQ.mX7*8>'9u%T5arH"J5ft'uC-p(5JniXU3X"!K_Jfd\&Lqi/WjR#JVcHW*;S3-K@V)L9`bg:l%08Hdm%[B'Ie:MeiG!._,pd7j%f#L]bNDQ$1:X,OfVjs2AAPP6CPnZP[Xi(C.3T\a!.W`b3&Lt-1W<"GhaJi%'D:_]";W\Ni;la2$%bqeacU`,@Ne5U3&;MLo\P9_TC;cSfBR6stK8/\G-$$2M2KUSEH:I(=H<K083;cPE'-*!81aLXdi;Xnb57+KZL&66>3\._jm/p"HX%eZMPKB_0^8&YuDG1Slc\Vl#md\Z)R*gcB/F%T,)mA56.4=GBf*KXb"Ci3'(,`kOl@%?o^H<O7q0TrR6]plJLnen(1J6RNq\C-p%4%Z>,,WTr_F,q)"pRG?HeTA56:8M?2>!7pI1)6WZu9R8[2sB*JXBBu/kE?rpBmLi]'`Y[/Dm8?4Vu8hXm9_IP's-I<c;*R\]5T?:o#%adgLgX:5\LjqLGMdII+J9X6[!ITN,HBius<h8<gQRT9P&HU'KK^(i`h;`63\Ks8Z`R4jH8h"HG*&<`DoK7n__&C`4h]Jh;k9ui\f%L(`Z&\odRafeaFLBZFS4l_HsXA:EB;2&=9#8Cb)iQ^]Ab*4%,bGh@[cROXi;j,n/Hi00,W<L4FQ:>M!WrZk3IQVCD0P:^he:$\ft%6IGt1Bqcqb`f6F$8``Z75$8dh(![5M5Vl+R$$];`9e1<)fuc]3R[+-*.oi$PG(3^..*bB.1njG*E?`XaXU*S\?861`LtrfZ0QL%I%F>XY1AC^RP:eI0jEEQO&9l,5m"jOEk-)!C*Iu7DB-j<)b[%dEJdT"=o<RcIZ#=b9DKViGlP#4&1Tg_*,'M[VVOMu2rb=2NFU1W,U%o%''$;jYPubd"(CI7mRcCEA)a;0bj$.@QRs<X/<5<-]7mfVN?mJro+/9bVt2A>`g8eNU4.'M[%B+(lopW[-@3Wn=8=VS_43']A4"%3'bm*Ml%fN\#./2I_#H>KOpUYFCisT:=V1d[rN.R,Y3[:#(27R15j:Z.;2K,[&B7@q1PV$o^Fsm+OQ,d!1VoPBhe*=/f;oWBjKY]%['RN12%!_I=!<<]b;#Q`qR)##W(ne!cOc"ci0-a&\`B67Cmo"r4Pa%QE)Q\P^8stM#>l]1VIbJNak%'ZZt4401i^L=&S0@Ji007t%UhlJmDW1X%r+(!K,`"V<n1AAtQ2Q@85N%`eTQ4ZhdBj4WCQqSGC76PVi8IouXWG`[Rc]](^GM'Z%.HjSl`$A.DI@2gZ>#`TN_JM$%2_>>!feYqD<Q]=dTBsl%eUueDbTmAo>2A,BC%/sqLpCa5;i3V=^BjJ-:m[8<]7cb\i5lakE9-g)[&f\W!b)9=PR3iq=%s'L,@j:j%^QoUE!/MTPaYDo'C2PS=;f.Q>fdQ>8Niu8R'0pG3/Fqc#mbl35jl:DL26EG,Og8\g`5j46C78d@L#In8'A#U9)H>2X9?#&$>W#7R%CKIu*9@YkMF=QdEIFEZ')2G5+%dlV5aJLtC0jo9hZOqU`GWTlGG*NW4_k<ILLfPh#LT5'6]q)4$AH=3A[>&Fbe<Q[?:Xq:=Z7@68%g87[YK&$p:C"lQFVe4T<%@V"9n#bk!@]7OX&t3NdK-^jT;D[\QL(`GSBVrn4P&?hZBoK+HdD@3YRVS'["Jp1O\Z%Y;Yk%/IJnZ%7%.c[F'9^>XX@9fTh<pC<7_c0=)2eOHWMJ5Yd,cn+E9O!"=H>.)3;^alD.Bd<2hlAiF3;(_l"KYu7oe!5"$#62BR];.2p7bsKFn>_,%da"GY>ZtAB_WB3$f-g]f+i5A_WYE^`7Ot],M$ei;)tqR'I]B4NOh`Y3eC(i5@RuAcC!@AZC`S43RY2?!$3OSn[99A/>1m*`h\-MH%#b[K\27@--c9.N#3]S%`<%lUfn5KrlX'FA@<-PUSFEAP1d_[d<pum/:jCE<H&32(^>sV*<0gR=lp;8[P/+#sP1K!;DDP$*S8s<m+%eHnY!1I3KBDUT4rBrUNaQVqO?S'Zpi)F/S[;B#M^WK_"s:Sfn`1n6aGo1PuZ)R).s9(P@co1PuZ)M(nD:n%2+$Dk/=4n^LmVK_&1%Z0[HnTepgaVbe9Pdj^MnGG.i:Ls%ND6>?'c'M?Pc)`3=FR[Z4'1jLF`-->I#cU=>2(7/[.:7C+!nk@P)F,se%M)o?Z3?@=Z"d(F\%2.b,#CooV.M?MOSTem(\*("B%RPpirq'HHFV/Z4,0`cE<2PDP1Su+'Tl-2.-1265P&4Me1Um0)\;ARG5*AV=GhSW?XVJeM+dc?rA%P?'X*"I6@D2n*k,UrbV_-*=VhQ)UPc2brPCbG<6=*AV?kS%:?ob;UFkC%=tp8W-*j2''Olht5iYG4_T7;Mce^QUiWrm9V!]0Kb+Y%R_b[nM)8;a)Y>FC:I:$k?*5$?/c@,]<iINhLnq<+/s9gDj&74_!N8pC%7A`IdVu(k]f'HM!hU.=,;,1G"oIP_Gc".QO%;7=!BnP`%HtAh=120lHBu1&p121\<LJ404KMs5B/2!,%_VT%Z8MeH0+d5A-#g/qh-_eA=AC;*)C(UKC9U_3M&bC(7[#<fP@Jj%Oc,MbddOkTE%_3]MPP@i\GO@b'5hP$,[n[Lq6brAe'PIBqFWKS+<iO08f1pktYdV`!%h!(V+f`sQPNQWRYT8-/[?4IT]O`%fB_8penZmZV7JR4U3%"=g5OPqZ+bj)G\pTI@.P.R8t"7d6UT0M\3SB`p#2hd0[X4>Gco<6scM&%+6@Sl748:RFPp]!^8BdNIq!W23da%m8@iMNF&jN(ZfT%'2-g?]g$f(#:QF,='\jsmo!lOYp#iB>,nL&\?phV">6!@lX;lndTUYl[4.DRM+if'BaR*>$sIA1(<$.=[*k&NTN7N5b/4`(@5t.'%[F3LS#[1q:>%ska[S*Gg2uuokN3hDbb:Pe.F@i<;0LNu-[`qkn;JG\MLK#0rKgecA+>'G<PU[cDEgp$3FJZ@?=Iq+?<(b>39"S>8%D$d%AU>ZeYK4?rqdN\6?<(`@;LOZoe#-d-77c/s&YlLo5G)dH507\F)hO'Dm`R6Hs%O>W=Ic+N_9g<r[V%KhQMP\ub3OI5]9nud'%7?$a[Q=^.$MP[`:%mhg!*Tu]=Nk2?T;;FiE(dp-W=B]OjB%t;Q-lI8CV8:P!>%s9V"I(YJSNNhh9<kk0fabDHf'FAkBe3UOe^C[2%9XV7/'cD%+9laq[nU!MMB;BMj.35Z0(QbpB,@JDd]"4;Wbb:<!EH#Zh'ip23@VKHOn]C5?36J4?`^*#7[!W?-r2NRBET&<O1+b*q%jmd*kN,f7:jmFNh3k<&.d(Ng*5TQ>%)U=ie9P_j(C!op6XYGJ>SA_Co#"$$k1$uPW9kl/Tfrk'K9S7X$p'(9Em$rrIBQY`#;'p$Z%9]I7k@[`<RQq+&`RZ5"$3R:`K>ja&."pHaBf)d2?E)WZB)PJg>?5go(%')`pR:,<L?CK$sKVbd0(Z@;,/ELDI"\.SD+J,-:'8`Or%_6f$-gB?!(^2jRWZ"AZ@C!(3)b.7nV&HKENVDWo-2o2j(!9,VuAkn)4C#SPL'MQ\sX/M"1kuS<_!PpT5mB]^CLL;%1c6/K$N!RqE%%_]5#8["iaAu*nYk\*T?97o(Rpi`30"Thu6Dg`<nAf]X2#juGAj9XMidN!*;2RPA!8e/_%J/HhbSG&"0EN5jH*SI.`EN#^:VN>P,%(RZB7h038.*M#^8'2&Gp+/8>N;2eIgJm)@+i8kO&jjM@3S9em]H+t"dA#h0J<&)*.Jn]c[b7mX6oJFS<+d`J+o&-\]+D!c\ItuC/%HfeVj#I[Rf#I*%D7r6(?N^*`p-LXl=`W@FE-LZ!biYo@BBTF8q,c.D";mV__;=-[Tq#$6JWHn8]N4r-tX%qN,^c`=\4u=&8!`;^0%+/#JSmSeu<5Uu^DpJI1l`I1_^6Wh8MmR'jE?/14Z*/D$7b'GN);s6*TLjEb3>SQ]h`-pRNT^L:W>d+4',W[m]bLoI*?atT5r8J5(%8s8pWIuo>W>\Z*\Ed3APO5"i'+#nbkqs93]VnN[_[++h!baJ_BKP=1Mm,h&cT>XUAWVbHWqgaD@O_T>XP\.S#_EQm1/5lR&Zf6bW%5*slV'0K>q+FrNskt/`U0s"-EYYRp8o)>F8+0^q1ck%Ql,2brKTPuY6&MPoJ/Z`eNU#Q@kYl+.0"AGYJj9j)I^lSl4*Cq%L^>e!_%-N]#`c;"N/ONYI'ai):@9Ya1RSkQp&S0(/7L6FWcJEn%]!cA6<#1uKSTF*&f1'%K2fgP/:!G,"U@*g^u9Yach%jp5u-n9i3*@Z%B%!CJXI7)4.;n,87Qplaj\@KHaUD^PSro?/^0@'E(O#e5hIPT^WXDECbY,Q]k,b!?/(8mr83LU8:;!2fq[DRLJ8!m-N,*aX;IA4QdZ%2NS>=i!XVj!6L<*^)S8`P6Cjt'4Y@jAY<R)!Zs@cbXhl.UgUEj^h9TO6taP^*KE<^3"mT*')3J?F-=<X8qnV\i`-U`js5Kg=krED%I=[PA8`5Gg.C2ps;)5?a7l,hAl/\D+kOPge=PsW7F0`SKVY+>JkD&mWJL;@],Cp(ljs5ME#O^DL=(_Ls=Q$Gu*nL`V$79i@^dII#%\GE2BAB4hE&"!c.i3*S:"8jE5\-/!=%K$raSBSeO&"F&Ri3cA_-Zejo9;21>JO_Rt;t+<a@!3T9iFL"3+#bk_H/M[c#b9,\"0];,%K*S!LmlM&m%JP5Dn(Y*Ss5q5V9T%6T4SdGJ5s5#05JCe\?Sn$$R`ZF@jbp#,78s#VWFYYc78s#VWI3)m^1]!'1mK__aqme6Ml-&6%;jfPqoV/=4d8[hn.UP#t0:L$":$%;1o&GY*njQLQU8`Of<5*#q?Sn$$R`^[ER`ZF@jbp#,78s#VWI3)m^1]!'1mK.i1mK__aqme6%Ml-&6;u*/eI*kp-BI[@GQ-8lqWI3)m^1]!'1mR/k;u*/e9J;jW(JX"LVXd/Sq4aj9d8[hn.UP#t0:L$":$%;1njQLQU8`Of<5*#q%?Sn$$R`ZF@jbp#,78s#VWI3)m^1\u\^1\u\^1]!'1mK__aqme6s1^CUlVG:lDh$RApM9ZPp$o6U?i.V-nUKQEs3^iCD?'Bt\,Xd;%p\ODUp?-%C2^&`p(&2UrDKEF)(Mj33PH;7PR(*RXm`R0SMS9LMB["8k`US3J@!3jS?G6tNJJ#N:jS5R_"o]LIR?=MR/'Z9#Z*bMe%;'/nu8g'qkG.!,2.`UQ:b+%i3X&37M&"j]c(CjL>\KQ!8qfO_BDX?j[6&Q8hq1+s3TmA4!'>*`H:Z3V:&:8Z\)%$aNmBoBk=6WTX%Ou=h]q[sY'Lj4bt`,b(NAc+H)$I:iebi6KO*)JqV;bNTJ$et<t'-5A3S&HccYaMaHVmVXcdk%'"*)#GH@D,Z%D(JB.^Ej49kk5%`%O0+VBaVL`TeiiW76P.P-_g9GJ6(Gbh0:"!G+X#emD$\pe9:c?2X2Rr%NKXk<:AU8BL+4GT(+9->+N)B-SWrL#c0Y*)CXA18@)69-%o55f[.t#E615^:_>%*ceFC\Gdb9K<p'>uoj*58sO?_E,RB11\g6@]J`(/diL_CI4M+89@OAh@.9PYD.!KY_Yu/bt>k%QJ6`!c;Zr%g7N/F"dt[q5&jLsn(-5JWGsgdAV`U&BpRM.`IVH?:@Hqb@]s(jdXUu_.6"A-N<!Ag\ZnoScXc6fE)%\`JU">3K)1PH"-W/)6$l(M%hlC!RCK5!si:c(rCK4GEgGP32]/&9lXQ,1DX-K#pOi"T3:iWgT)o=,'21Bn/P"(4GPV1T5i.H!V=sNRG"k%G1qRU;9@kCd-o?s1_%,n3S9@Hj,AAuZGqDBrSG/77-tPVe]F^Z.a*WOK4InuW]fH#,i[ZhUtOn.c<;.=-^&k18-8ErgPpPS(9O>VPN]s))VuDgVTF^>4u@%k&P98Yn%0ujg9Jg[1U!rP5WmDNT"*lgT6^gFugf&>A\gN>:(!sB"`%["u8=X6]ma+_tF?o!Egl'/[n?NHleV<ZIQYL/BF`f&T9$4%EFC2F_+V#*NE^WNlGD9+cA#U@Z_kmO$:?#)+"Z!OmK,S5+O;rBM.fp?,')O6YmU2NM'URG[G\p!`?-@g\(9<i*gg3+6]3_#Ap>Jb%_KUDN&=F10fm$!S=(DMn3=AaS0Gg#lDgqDr5<TJ`b:WI32^Yi\Na?oGDUumB)QcKa+_!Cu5r3QM%&ouJ.pLN0len?Qh:(c,BjY+-%)'GZf*Qi<@8:cmSoP,5L1o%&Z`nmjLJ-g/==KonZ(j:X\b=tjh>cPM(0m?[/:[dMiP)7U]1KFg*_\1O)nk(te7+'VKo[$Y&VFn2<%Q7bg[G+B#@GrT,E;-B16LLBkXQ\]MAo3:-'kC3/o[\599mHlC4?+<8JUnI'SebB3WfTj?=]V!.-&:sJMqGT?*n0QA2f6+:^SKkjP%VWk&hP@9]!g7$IHLb<#6ON/O#1:CbG7#0[Lc7.a,iVC3T_feXU'F7p!YID"mlrkG([W])m#=2+9O"6J_NY1bR?GV5E3BAA-^:IlP%KHNU=IMrQ'P($QYor]rg"'*3:,;E=\:%-*!&8#goF>\I^$RBmINi3\Bf7d9;@\(=eRjqLob)ad[S#7*[J`%g>af4ZhZ,f@!Dh,!0%V'-=Y>8COZ[II>OgK@+FOL^>?(r0Z=4tSO5]FlJ&_IjbRP$,)#8)`[/U$tJ7fB!=Noo>8dR`6GA3NXZXXX3MP+-*I-qIJYKa0r(]%A%V,eo+6=%*LiV#K!nJICpqs='C5(Xc"]5nCXKJ>`I<#IG,T&uk<@pGLl2(g\!;ID+nof=p<6:R3Bc+f$I_brk'N!Ift`W8e"(-X%SH`-2l.HIFMqKpMgZV7Cn")*MGV+fp%A(g@Z-4<bo)mQ'Bh/+b%4!CnSCt&*"e7]E+Ymca*#mh,(fB_R%-&6:caGC:CR`mbFP-aH%PPNFKpp\Kt%qcYo%&Se9$VlS7LU3"-r*t&_%&T$82U=6m2J`&+<_u<[ce5H]6`>>k+A9keo5I_caiY<C30Yr9C"($QbO4EGH;;B4%!!]:QF6i)QQIYq=Dlg'JIa64ZAHLoJc_8E-k0;6*.BJfKq70g3&om\,kXLfHq)R3c@:c)1$Y>SHhtagS(LaZ(fe/tPc-KN<WsZ2J%r*20W;U1c(l\5d_I<0MRZ?nXAT"XA@lh#<1NpP0H);K7P'A=ebS=SUL(U^/D5KVWD%^<h^OHPrfi0n.'-bC'ZJJc=&q.\bc'2YdL%nI%IF(n+;*dkpR*`m`[We\-LA':8d`X70IeN:=E<?4I&XGh@$k3(;3$60su\\3*Dn^!V+K+q1SgqPNCF=WtBdr<Mg+5cU-d!fc1c%@0EF)mE2r$I)<i>OAGeF5fsb&R[/MCOIWRs2@C"Db="FBS[1=MebqoJD]s\3e_p-95RZRN6"!s]HAM)#lEfEebLRanM9VcW&]t!Z%=UMdiYEZF._Ie!'4&d@!e?Jfo?qALGn]IO4:V]uH9,d8"1$]m7[J*Z$bc#qs/IY_&YeASF-"8Nad/d^alY-efN9m]!c*g4][^20V%hqp6#X"i,$LDf7,+DeG!WiS._$s=RVBs]l-mcTt`6VG\X^L'='M!=94N+*RjFPCDq%LitlF9;iNYN:LUQK[i@nuam3H55TSZIRO,%;@Wu(^U=LjkeGh_:HVkjc.^5QjC5@2ICr136tA+C'd[^>?=m%c`po!`?N&8=?0id\K1%??db@g1o(fNX*q&_V[t<^3.fbVfar5I@%jJ,^;2L!_;.U`<-MpE=2%pMmUO7JXt5O?NsYL0<X+CN/KJJ^B%8(jlLWZnO!]`^dOeo!+FK/,7V=tCH#`&[OoQ^s$e5k(E<HU%l=%re81,M=Fd/k%G/*g;VFJ*)a>'\R+ZD?Ol>+&WsE8Ot8-XWL>@/afH&_AHN0q+fMI'l-5A0Z1JYMYmZQI]<WpCP#,ae*P"AaZiKDa%*\gtLli'JXcp/iJd<H(aH2SP\L1e&6aaSUu/>"JuG.Pq&PRJeG)KE78o$!RSWrb2`2K_2\Yi^3^_`UmicRs$bco&[J]6mY;j@!F5%R^$;1aenBq'+r'CmQ@T@q!?$26^V2SK,Jj@0t_DoI5_3IIbet?@RPqG#'j(VdWJ^B1$S`K9Qe?mV5@ho2^n)se1N^PaT/9U%+nPk%&)/oJg:!><='FdE:L2a\RjE<]2a;n%PP`X3?h)cW4abs2?f/.79`4@>bN\ASEO2a>R4B0io,$3Yj3uoYHZ/<G!OmN)+)hIerd7fI%L%AjtIeWAL%K=B,^.\I_mVTI8d3\u3(48I'iE/6q8V!D<F#7BB6E7oB,HJA0ku/!.-O-(j^8rH=/tc7\Sd)$!,obuJ7cplTV+&DT%&;-ft*jB%kC>nf8"d.ZU2p:V;1Cpf*O\.1,7PN2j)E?Z2[[][q*(tWoSjE5c"f<S+OF<QEYrc@;DGqi#nOH7-\`%LAQFX2!WM*U#%7!&i*m;7g_?ZRG"O6mfD6^a:^d.f3^,<f[A`F-26/Em@doj,tD?L\npf>M0#kO/Cb]KNC/0@o+8FlL@eS@3#pK6`%VXE#pig7h)1%Xnl[$%WJPoM:dUBJ_47.JV6J(o4YpS`bTL*i=/[RR'XC-c6[,&Q;(]=`%-^Iq'?eRB=,_QP_3+t,/_mjG#+:)>pM!$,U6,W4EVTd%__u7YVFO\g>>44+l+MlDH<l,QfQR?Y1^ItuY3,8Fb98!OAbA4ZCaZ;E&dpU%D(KI@2HJ\NqO/ru2BrRue]]3S)@q4FbEBEBnEXVm%Y[8S0>Gq6="Q_Lp1G2SHq'=-7YS#V6T&,m_aTcOc),JPo_CP:J[WX-T,NoT8q9)X\gK"X@@PE3=mO\6I=k]=?$@?`,Nu>5'n3sTl%//FK+fc)]1nWr!2)q5MeYL@5O91$f%]cG$o@P.\,Wu.Ph.Tq?)n80JuPUpVT^9n*Y5oBbZ9A6N+9&lWkoXuJU>-NJkbkuY@NNa+*%$a-?OScL<@,aT9.V'n#!nN=tr"E%RJastOa]>7ls.1uR\+=?W*JRdK-FV8n,Gm?+3'FtFZ]m&l7O?RE=DL`(m<Ue]8Xh67*@]j#>%+VoE2PrVg3Y-sIZ<RWiB_>,+LjaI0ka("j(''u+frB0\:<5"q<gCoR2Ba*"pC8"=%(>SMP2.+i_QrX=]P'RYC>eGCDOdmR6odg;R%(G==j*OG5;W#Wm)6X7Nc0#d^DHjZ4i;Ja;"#D%s#._A-7/\KN6Up2AY6OBJ7!C_T'7.*rY/44D?]E&BIbi]hm4'taAW1HBVn<>EG%qpQV[05uEL1_BTW@M:LsC(^:=%[f(fADgLM.C3!7P5m@<N/,?bh1SH&E/GhELJ.`6l>\:KKa*sbNsB,$!+H]hcXtQN8VNNeR%#Q-%2T4,4TIs?!]R^r@dSrT&GdD4JWQcp:'RkqU@pu6j4:Zt-3G-DT9sQdr9\JHa_EaJ;HZ)e8DNH<bi)Q[?[@]<q>pF>A&Q8nkT=Q9]%0kCpq,Y(hu-Cb:n!E5J!"&*Q4!N&J':?3b;'Np_RFg;+HX<<+F:e+1ofC,)g.0BVaEP=f;lm7QDq>_`@Eu[+mP`5[/b&)q`lY9JS%bZ7^fZ[tjg'U$i>%5ML^8X.R_A-uGmk_Q!!T#s0>5Rs1`1>)g<->!VBHT:Pd!LSD>j;\qIMYM9@6ZpV;N<$,2Ng[2^'HUId-j*>I%"DG\HfgoP.o4ll&#iVF*Rr)V[fg&K'KA<O81hH9CR5Y@FD3bVfF]\[5_J`^@pD@Mb%(.L$i0^JQ4tb%nSt8qm_Fsuuc3gfc1PPh2%@WLGd`?<4_nkF3MGaXZK%5VQ;R+VS^9GP`@%[Eb4<,J7pH?D;]$92f:\P1)Hf7lA!C9q`DWQe&Z<10I,Ngd8/^_b[$;a>2tSec(`%JBj$i&N*!2[Yc4UC<A6DdOHVZ$H'$s\Bn'>1p/Vs;,_GlMQF-e%I<M="=Ie:/$h.\Pkb?FJhuk'$\X0:"IaXA1>_cEjYn7efDXI=%]D\EE^tp^EH@`ruf2a(M@CoZo./9;G[O\=kj:6ap%@'@!fVnr82hl"T4eVr,DH9V=,Te.rJ/*82LPVXICC/2$.u0nC]U^@=LJfeJ%Kc!1-a@]'Kpn_D9"Wn3V>PiZ7VBUO2e8h.Ha]g%C0!/G`C\?+AIEp.ZKSmhZL[dEh.WMFd<;H83-Iot!&(#246D;>SQF%!9Ym)GA%%a]*8(2bh&=:G9baL2:I9XCF9!MKm-!c)IS+B+r0;%JR^C'aIAN/\Po!:ApIP)G'MYcSXATJU)*Q5OJ<-F)hG@!7)o[2$br])^PZ%joK<&b,s!V]M2E2Sl!03cu/)O>bK)QW*M93J_b'2g"s/L2N&JL.g)$@2MmlY=%?N*:-C"mrOHM(71MEfD4.t:[cS#i>(kD@K21?B%<';g0V8,n?3++QtM0O%pQ=CLVZ-O#PCD/@39u7>`_.nl9I`kX/\Ldn:XF0T@R0gIr"nG*<4F)E-jk_!FCP,U1ggJo*R7u"WeA:ja%e8JPp=O1]?S<94T.7R&P`!I)`*cPG'F*:obodYrWI$DKUq'#L<$)o=!Q96%ESqaES'-M5.+/q_[;`Z&5;(4X7M[6X^:tbMYf=j+n%0@uM^'YT;X1PS/'&Ku=M.^m9mASN&5r?=jD)C50sleE>fK]()2k89p4CJe[<E>sM;.>Wd34oR.R[a@\#;]K:M>a83Ch'"*A(rbPB%,SOtY,A0Z*YqCra`iF>n"ml`(S!A@E>IQnA#JfL`4h4@e3U)oHQ*A'jP-[t"nrKijZ2?/sDX2:'*/En;FqJR0-XsQ,@Y3PK-Xq:U%%s^'mK@mWM(9#(X^ohj=jC><\N'bR?@%g2^G#$&<PHbQikqNLI><3A(\hXq\#op)U*0q;nZLH"popDeNNOdGnoPH^;RC#+(<F&f;%S5i1XIQctl-=/WT;73-ie3Zt#aWpT6)d/36/FuHGNeQ4N;e3O3hl9%6+Qk!M]-08s3"h.$`Qot>HDgt"#8X57`QPo5+no@@nZZfU%[s3UM%L>Ga`feV#\r;d9RL.SgC/bh-(gPZc!1;Zc-qDi3^*pJm]P_NeZ5U@r+N0BG`&14Nn@FWplU;UnJ1%kP1n(+#3'&(]h:i!"%Nh*lNT(NBuY<+AV(J*sjXLm,7"PAg\VldGhKj_eE9Un5)G#1ka\Hf2H<[3*N(;/AVkEUet&I+Y";@5=:mI:Xg>=Q/M:%7m=-PtN;%m^I-?P9g98[rmGG;iH1enBW.EE+@QO<rH8a(JP;,k!%q`b$j@@h@a!`R@d!M9aRm+GLjc4/M$8"?"2K1Km&n%'Y=uoB"cGf!RVH[%1t\sh/Q:*N."*`pE>P:]1tRtamFo%0j!F#iTls)e/L=pXe8>j9+I1+ZOB]E<&]Ml8;HEX+>0e83??l(kCAig;`&haE8dZ=]Hc7?f%2"-\gh!;R)]WE/GCk<<T=)mJ3;P42:[gU_/rYApdMo_a:$^=YS^cZ?S[%:i1DW-jPFSMo-Pn(AZ[1+u$aT6g>M'S0!)InU`bG_8,%I/u&n)k>cj'XA>IQ*?j.l/$/YIsgCrT"$f(,<+eAFZ5(sEB_(k[-^Tu7;\cETp)h#<?-:*Ejjl+WXr9-%eT(0o5RT'8A"KYh6hM$%fl&5e_P"Q4XU-'@Um$H#UL:IPaVf2%fdchXhc_QY2p/T^'Y&O\T6?Q^)bop<qD\TF2FTd+Nrs>[M=VKH%_u?S?hO$kmS9W]InKcc%VhQ>K2+hm`*s^^Vb>^AA#NW%G1W.66OmBS4QpAj#qm^?'7[?3p%.uhg%j/8`l/V,Q=]4WN%`$mGf.qaoJ@c<+'troZK!adSCq%W]%mI'"(?QgDsCJGW0:<m;sPb-U"S7TU/K9]3Wi/&.nFXOXL]9@=%3<]kO9+&CGf$h_mX#i=/m]pH[]j0H:*1*!ZYuV='Qa:2S#^Q#^%h((f&0*fl;Z!Yu'fc9VoL%FS[MhaAAf9)=:HTTt7#T=+!B2Pd[jZ=jAO[.ZKSAB2\baXYtQJKTlp$>:p<MtniG@6Iq%Z!GB86L\t%[^qLQQ%k!o'=CI[<_9Pn+^W7la=dV(gJt/$.=4<oH"@l33@aiWGr,P>Qc[nJ\sNQe-6:"RY.IMP-d`Ec]1E$SkS)O/].3ct5R28[%@Che`N0?L!@LO%())a:Me/WOAic]U=D*3dZ[nB?Gb)AE$]:ngA-lQ+EG)PBfbeM*$1pk*D%,<J-5<2rSJ@eciRdC1>5ECmQWZ6aL%7M_`fkc9eTa+4r75"\h:)&FuNP&!^[L_N_'mCH%PBM<rsjk,AOp2?8VSAE)0db<s$JD92N+l%lBV9$NM]ItoXb_lRj@=&?sFrC."%heo[SOmi"SAE8aI=oi2[@I4U=0\C8aH>mT<'=R5L&TnYklc16aULA=o8Jn.n_ZGk:cp$4&WJFXr1C4IZmn`,uRCrc?eU8B9f-b+\%JK:,6JF'ipCW+1egrm,'0-Il%7KZ7p@!3LL/^WDYA/ABQ\*u_^h-TJdY,!d;M6JNB]@>5ro[uRt\eQ)cqMF/])uN+r@#Wt5rTUqD%.Ba(tA5d"N>GBH!F`VI$kKZu`#NI,7l_ie>03BHcffQ6jWdr`m\:6h[P7sN,]pll_5jUPb/9&l7m5fA5Z8hpPf"):&YXnS+24KNi%+I<Tm]1B/3@^g^9ld"T-@q9%l-)&JdDie8a)r/E";T%TYO4+g]A='[VhTd7U;8cr=pjh]H&XukJecW54S>H^Z]t$,BTnpbAc4f#l%i+Mk:@<R:!KFjgZCmJ<H%Tml^Oqi7nIAa7*qPXU3E0g5GepXXD+*_ZCXL.usl*,Q@^fK'#h@:,%$r,"k2Xdo0$JA+oDU+4@K<WoX%io8)F_Bq-Y*$_0^6'Fi"$NM,cZ)[p-::!N>j`IY[fKG66JF!b_`37?TdR!H#/U,E]@=:T$2Ad5/,V-45ds"sEdD`3'8IN`p37QaC%mi]KWfe+iO".$2L$)^RZY'5$Cgr?*F!QG:/'/1eR2[$F.^$@2aHLC%r.j"SgLN!(No64mmT:QDt$DF'oB3>D<qK2XcN'BN)<PS.V%HlHthLUZ7)`q)Xre8X8Oo_qo6?PLjF_QY8+ckEVK6lKA$?m$GIFrK:)!Xb)7MrL-+>ZZRqe"$K@b62]/5?fP=Q`4F6J9@nce2cg1%eopj9*)Zgf,pGu'XnYe:GWs"R@cVFoZ?s[:$63GrSJ=-]a9>Vr#7RN4,ntC^Zf6T'@bO*5-MNo4HR0<6OhVH@?"PN3i=!"Fn\N*H%\qJY2f"7VtCpWJn'#8"FPMIcgP<bdH=rY4I#09M:)-F6S"'<I:MF#Pr/,P%r9"_#fGeci(]JIp;40\(%"7(s+.PuhW)/=AO(L];f%0<+%7B`+*R^Vnl?Y/nQ/!SbTEaPBk,,QVnp28D#3bN3j/L@m\S."O(F!)sD23I.G\%N."I)R+d^,n^W@i<5D$FU!NQD)sOaf0<]U%?=j2Q"(8aT]0g33@7pQGXmZB">,$^(6JR+IeKtiQ#s`]->6Z1i`RP(?X>i];ik,GT2CZp*'+ht6Fto:ZjS\S[%n#VbV;u71)e`\`%P;>TShsU_'eCcu0*C99gISE+g6+UI0SL>l<pj'JLFNLdG=-q@J[i)87-Hs9pC#O)1aDItg4YJOAMhbMa1J/Dc\t2FDG3$_&/B2Tm%#c!m$R,`"eck0=0R83&q=ej8e:Q1\[0"^Xmpq%,;8Y>]<SQ:6?40+Rg]9O)4NMs*m;:pI31RPW[d-F6r4Ihp)1?2aR=qO%)((5`u%(#UEHhSOjS/$deR&7(H44p):njBZ=s3%BNC"8&mn&jaS^ZR?5#-mZ,M+C^@B?7Dop-^\0G>9YBsSAn.5ZTqsq_[[%GWg(P1C8e?>%Jl-d]k3<9e0U]m3c19Q/I`0ON^+2MTL*%3.>i)->3A[I"Ap)#2kNJbP)CCMTm-X&YHUJ3Vh%b+)87B=Uh<;a&i6tDf]uAQNEM:i:%=>RF&U,1lj8"Vt?JSoG^+DtMi&gpataf_DTf8d#"A0D%2OOR26m*.4BeE4+Bk6<i'fd/6W@-&s.5l@dEVYQU,5m'UW$(3HEPeQrN%UYJ2^W;$IL\"aVmqWV_GIbFQ<lZN6o2a@95rT>:%mc/58s8CjRNuriI_oMK6J8oun%*B:fl*C><B7Aq]$X6o&qY_b?K_Cn2P.(0^%L*kqGpBgf-TBEWH2X\?Eag>mN*;D<kpKA4d%c=sl\$c:K`O#Oi\,Pge_mRUp:-Wsi2->e.h(O'?3UXY'#CYpMn".H2N:-9+e]7(t%YkBX#'!/%0!;bNGE^4YW'er0#=/.*M(M)4a.2okA,tDS?'_%7eYK_^\S(nET;*u_h$2#!c-sQ=]Yejij2D2lS^WEh,j5K(#VAs1Z%&^%Dh:\6/KXdh?dQ=/'(3B;A*Tqjr1+b//"Zt'N](nB/BRUUM[B\;#cee"J15CI4_McCQ.'gXUpW2W6`"`&UeBChulIKcR8l&DD>%pKU'o3PW5?Ub.<3Vn$M)=4;r@@+KgS\5.rQ"=e?G]2'8V70V2[h27)IaO#5)HAWt"&AXsqI,l"H>`fbOY=,YH'cFqY5m9f+/Bhda%4R\s2a@$/.:adK5CQ-AH&Es1uPL6fu+L&7g$3Igq\\d=>\M#m$Dq'TNk9p01]0OrSJFSr(BIgWHs")@_G4_M55<\C<n,)LQ=:'>7%CHKKg-nE&JdD#Vgemn.oleTXLf#4?CVfNR>epY*bXQmoA`QCZYho$hj`d%(Lgh!B7G,^kt=nLB<)NV[eblo%sciNV<0IgCW672+P%)q"UBEAQ/>#+Ys1He!@.2&*5F/c]FUTa$&LnoS4GcY\ucH+5^[B5&.3M5g=UgU/@OG7_p.gL7s7(>Y59lq)h'<Q2k;[W)Gh3Nn[u%<e;I>`W![RMhsu7\.bLO=.L@95c#I,C,'PVMj/f(PK,u_p2oNoIS/-SWGu:"4bSA=VF(nt(5tFX-iiO5EsOo8WgXm9;j4=&lrhd^%3-G`=#@0Z.Qk1^OAN?[^Zq=U>l4;F97-<"M&s*]$nX1sDjeRb7S*Q#]-Us-`i<T$L<M[M_K,<61Q=Ss^\]^!qHS9Rl_qWS$DZ047%HbXCq^Z"8lU3^eUT?j]g/-`js&+KQkpAfZlq"d.(T5MAl&)^N<ocCmjp?VGQhEPA\#Om`P=761HTC)`/Ho`,2Zi>^;o4NRCe*hak%N.9FJ\_dD^de3F?*]nn%X_koO0ARCgT7-+8i;K![$iF-"e_>]M05_03n2W2O_kVY7i1hjCWd."/Po.@-Em3j,b6WNgaXcQ)4IAZ-%X2e6'2anAlg9QnIX.H"S<k2Hb?BtnWnE!QaL!6&DL4bcj:qe][@,/plPtipT@(;KP]S4b]BllKT,^nLkps5d2!34>C@M0D%[n8Ri%G4bTZ[4tn+E#d$L3YOE1e>%>2WjH#h-jOm?N#'`_;*9n?_S]!HbE[Q>a_02af`<RR[8fF"\VTYAZ^teI'5Ce>mjb>0;L*%M[Th''%#B?HiQ#TmIS)_&Ske1,=<^hg1TbrjQfBb"qji"J[PF:\#9L%3t&X2fg[;)"a,pc[?%8-:)DA)!NZE/ADc.E<T\"Ai_q#L"?l;bt(%E\6c'L+X\&[S&AhYuSD6WPd(D-*a81Bf.ENBl0-":,s/1VqNgJ"]$\NE^5$mQr`"ZNh&e%ZX$LlY<dYsjOS)<\3DeSJh#[nWXP$5%Zl4Js;4=EoYZ+f#lb/[c:"AC-cc&cU`8J*[e06p"@,QMf3,MCdFpJ;aQ/:/p2HAQOS?jZ?flkerWI2Z9;A'XIXpl_RXNf1r;WlPc%MKT%cL)EBkdnX:2.TW;OR:,"::k3P$kNG&Z&%X=d<#ZK6W"$mjZrX@3D,T`"b/9\p@dkoVMSf;&BnO\>IYgj4'&&VsE&g_ALg*/k%;8FaOQde)0SQ\W6@3'rnjGBm&26s--^e9B%A?+i=`ojF.Pmb`(bQ[+&U%F7Sm;*b6"8!eWa[UlZA)@nB-?+X?d\Wm#e:^@K<=&!G%/6g*?AdreRL@fPiJ(,Om4W1dp$=kH.L"[LP&=P5tj_A\7SSq2f@;cg-EhIlZoAGESI1/m%9`!K9Yf+4<?24Da!fqp1LDGN[5(1E.%HF\)38)UXU"KtFJl=[96I<uth*WhBlO81H?nWU1e\"^a3],"gF$[;T5LRt(7&9c!H`++d$Fe5r+nZu!l!4:R>.6sFV<C<K+T,*\Z%^1e(]>1s?.;3[]pq1X,cGXHd&eO.']2pA;jS+VkFMhBMI;%JLP1eP%`ooLTEa6(D-+l@\;B<"l&O=88Ldo2t#k2KosPD]gu1nF"P%E?he8dThlITi;^$-<Cr<`M"[m`V.$jF>f,P)B(,_I+-rnD5`7q>9g>-6q+iA!*N%BRiG[PTHXQaWlnt"8L,eVI6#,*bg,WO=[i=J%W_B[a6pc<Zg^/<Ycq<jH-t,]C3>1FNL3orqXfKngP!eQpa&rh-')PP:Da\ViZcK]Q@OeGD+]4.n\nKY^_S_+d+9[4Er?9!e1^bL)%Mr1=8!ltD"nYn4AK#fl22he20&;fp8q'+eJG;f_aJ&F&2Z=m=W`-3?3Lh_=[0rZ5b9q*kVPtj"fb426;:oP:JHZIGD,J,gO)1DD=%f1oVogo?t/L0T73dUCi(l6=Zm_8qBF$(JSR*o"t(2<nu*7_?'>n[UO]@+?kjPXX-o?uYA)LU#P*k$,4O9Q#Y2))DZ/8mXZq=gZrW%.qM_XZt8KmHhBK,4d,RO;*P#W4d-?d.\?rs$[;$=T>psW3eN>NRlB_&7>.H4H2GJRe?aTF*%mfQ^i6@P_R&Srjn$u0]bm%dbl"og%%b,oY0;H\Q6/`G^'WN=Tl4U:,5l[_[2SZd=d"B2h,[Dmm#DJ)6cqu4ZDb4\[0;+r,X0i_uY8MNBQBGAM?C6HH/E]Q1J%+.6#VD!h%"hIO`FYu^S.IiNQM&7.i59mYgI?h(F"PqGCC)/JRn\=>$_Q&S<i>J5)1\[D=V-K>"kGL')FH(oJ&lULDB1"6j@*D+MnpO6&5'c+l%8_[kRRNqs_2J]Eq4J0NNiM=VX=8"4YFQlu.(:YaDUeNs!_*X*SZdUML0nVCM\hZnG&,a,NB2n!"*>j2/8S0rD2U.hb+6[_c7e[SF%i[ZO;3+okW>jjMZc^Da,Of&Il=h-W(U'C_!(G."9.s*>p-!>H,12%nl?CTm^T#AeR!*Ws8OI5gKT+iL^99uQF9q1qK10NPkMK0?J%.DVi^.fD-1^S:@fb?u&KhV/9p:jGVl-nCZrUaHe6[k0YHXKR\UpM<p$BKksf$\d+^<$Ba#Gi`o(d1#)lXe_nAR'^mW<8j"n)>iq]%GneZ(i%/I)Q=:jC#_6`G@kjV,,$)dVS`QO7G[WfXL.X?)]mnMq=\?+=j#Pn*%[(:pT1Td'.d@#IF.,HK1e2AGUD(,He#g5MUQi=R%o/fjF3Fm^c5O$]Idt[I?9[d2C`8?Qoe#ee*)Q[9LBb5Hed8DM2!AVFoBWQePX3QKtn@6;SWn'%HB25r3i*P<43o.ET:a=[.H(8(L%I?rIsB%trL3tH5WV(]t)[#;QA*lct^S0]b!@FPU^Q-L[CM7C]q^tc,VI*ih?G"_5i1p$ZGAfSA08ML'\OTUf<7$J8#bDlbXFN4j>%)mPIHaIrYik'*VtX<W6Ho;%iPeuT$fLc"PMaLI,K)QX@uYllD+4Hh"h.-)5"(\Gm+l\e%'oCh8BI/8H^?^=W:fIp">^OMgQif('g%omY;`:LCeBS0>SLhCn_j?bKh=nEecq(Hlg7ebd>[?b0V:\F.u;(HjtZp%q1-bHKbUc7n!S`u$qap=1l%^ZE42N+"%M^,j9l@FVKA%0mG\M.q9"V^G*[cPPj`V%(!:T3l^+8pFB_^n%U-fhuV?2N\U;rIXR0k"/oQKA+5QSeM.8P$st)dYUf0_S`L6i::G^];)7aBs8B]P%rEoK+&"XMq+)c)qOd(EHqp-?d0FU5;bS#O_&F'PE(2^ks(J0Qnq6+HXCPi>ZOW$^&4GaqmH_Pn#9uE;PrT<.2s67FY;ubAYJ,8r,%*i&^1J,9-Tn,Ml310"5DOm:\W1B%?E3ClgJ"`8,&D)3StnIKh+im]&s9X^uN?b/(Br9!_C=V>clU5l[G[PQacgf(dRhgO$<,NrO_%O\_XP9R?%%LAe`9gT*'BN57W5+J&B@-&n)oP&rAZr_gMEn^,GV"dgDc*Dt94n4ZS;gRH,VJS26l$m_r(hsQ3"EE@'#IC0-%8Q=f"%&tr;.[?GH$S=GMsm6t#MPpa%?K5/V4cT3Y?V[pO=f&Srdd0XN/-34W&M21XOoq6]Ep)sa"ePZgq`WZ,M:i@GODZDDA0,[>uM2d?<%HU.cP>[7gJE]?18VUX-1@COd^d9ftMIO2nl`RGaH_j@2r)NIloCGTBm&j`B?T#>HHV04m%)eB`"+YPZlJkhKd!o7BKlXe[d:\G@^%Mkb=73Rk?@'3$oFV&AD/]/*p8/1L@SPBgCKp+2)<`mtWYWek8J]nnJ*,WW:jWFF`"'&d<k=4ZRJ$^VTo6uJ?b#*r@=\?Q`[m9%4:%mXe?Z@\:2R0+$ee_J9.J887fP.X*$Z3pRrBgm,Tj.7hLMTs+p>";uF@K-]pSmV82k*E8Iq)h!\g*VZ7ln%92:<M%=*b"d6UU7Fjs%@CP"rk3.^rE*B#b8'8?"cNr&\P]9c%oZ][g3R-gO!smP780KXPb)o%23pr9!jMdH2KtLCb8$*N<6R#g)b/:9r!6A>o;Fgc*\&$0L%4".=1h%`qbVNV\/FkiVI'Ot3BaLsCf+ZV:#'PG]nSdC`P)Hsdo=sFn;W8q8UFfQ/&_2j1*IV],WG17_k%8\D<=1XXoB$pKmFB!-V%>b?`*OF\Ds7%8loSVGc`T&>>3MCl[(hc"%BgHj+jFf0sC!];5,^+6h>S]#@M,.85BgJGP>?Bc];pWJ=tp^ak6r>4j%[!g'>s"#aG%C%9$NQm"-NK&@^u1M"i+D5$+Kik<m&+H]tL>;BiH6ub<N-E<1.NsV>2@LfZI=s[tKe>T.2qqs^TiWH#FRC&"t75B21.%0egYU,Ad%VHC9MOE2M>Oi4D`Epa]EZt\MlA<_0(A8fC=Emd=P_$,lGqr"%q,RIHNFO6:IbC#I'`N>]q\W>ZJPDM-RPmjL?6rNLM9".*R\Q5Sc%7tlC`X@UBl,[t+o:-.Rp_cQk[5;#VIH,O\]/th!+bM?6*f#W[6,`'BH%'CCU"Hc+pM+AV=eTZj@:$O^K/;/PB\HV$(K+>9-a$="0%,G#in*Fqq[3^P?i=X=r5)0I=Ggi[4ML/GbQoh^mk12=l\1(m25&>\+%=>.`G:!-`R:258_*$NG=Jha`VQ[Uh-$g36H25HheUb0@j%3S!B]d6S3*l9tW'#]o1=[5+hE(as8c]1BnhOFkqqPUPNDC-/:'+O@4-A?nTsb9bjS^Tn)QET8&(ct?GA_kRr&U$3,n=ZtaM2>>8<%'+TOlF4Uim$=^5+?GaSnUC&`"'ep8,AAO[r_QpCi/VrG]mqcW0pQSC\BRnJsjs\5+#8pIa]lP3gPc`=r@`01Y(U2?2;AOni)p]SI%,1:mW"^KfPh47RD:9[t9Mj!"Ej2R%=2au02\=t+6U&&T6">S(#TM.fKY.b<!b^%d1"-R?l/=[ND3ZrhO7JFN!G\,SCOkJ%,o1JI+%c>+Q^/#kcs/QTqN,U#T9IJ1Xt3Z-hoAJ'+:YCuT896X:_qVtN+p#+Uj<-$MNk@Q]nmMO76gm3),DU<JA0.`Y5L`r>f(=(1uI3n!m%\O"VKn2r`jj+V#=7C1]]+c@b`kM1icHOm0BO[<YoVUN(AcX#>>e%7okIDjCB+ncMjk1tb"9c`("8@Q$tRu+Zp8pr]Yj+Kh"aR7h3%jt6[+GW1MjO6+*Tjh?"T?<:6;[9>F8Q]u]hP'\.'GGC=JDp,aiTtQ0Ah3MXHDUWoj.B'S6r$C[fh);=H)[ISfpiPso-25t#mfksH%Aa\L35R5t2JkN"QgZ0:$STBFDHZ+6mQ_U%q%3/'8h)RF@Xn9lIJ`SV>c*o:Jk1e[9c9+Y(pFfZFhmTWSgPcQ(3ahC1E9n//`q!tP%lm^,gFU-)bk6;fJVnASGc,_"rrCGgX'CQQ8/q"L7gn!tYqR2tuL:4K_ig?=Oc!m7reC1mX%+6#3iS0=QYt,Fp^27"rhr`Lr0AT-h%^?raXh>9+Q9+Mb`Gp![ZD5>aLFco$gQ8sa\0=mgNSX?KjNF\+`FI?!/YX*G0/4.kkClf6f*]f:2%FQK;Yjff4:sj+1),g`X&.$\C%=;5I?Q1;`M#>GYLlF;am%;[iYK5As2&"Q3?.2%Uk]M4j:#>*V17[,Y&+Be\C),dAm4!W13R11q>6c*d202Yu#35UY#)>CiRI"=[X%^""UBRNY!M8S!poiDdcSe9Sc!^t(e,$[o`[H6H1q!?dk7\MYgD.H<&VBrZ*+m%ZqB@@O))^[5+FWgj0&gi]4*;3H<gU$@Tq,K"'I%?$c;.JV.Lgle8h"%aoKUVuMNuH/;R.""FNfX`r2\-GdNl#o[&*glWkj'SB-(p`PLQ%=C`\\8+\"*atGr@PZ,EPG^0>ED395PP$oW%m\f$`%,%G4#PuTb$lMH*D@oMQ6b6>d&sh=?R/e^\`KYC]X9_3,Kj*oE&VM&HM'8_2Rcj9/bJ!>g1<#LYd'=lCM'4NhVMu)-a/fX.%"pZ<"`o'18!<M'jbBh5'Vf.%A6TZgZ`?6D2PFiBOmcM:b),pNteK3MCa/@r6^0lrEj4me6cp/oO:8`kp(jI3fin.s_+fq"$;@4Ld%^<gohY0LZ4"Bt4N/IO3_?CWq.c#n36S;US=SN2+3:VQ.;kK41\PfX<d<IDSR@)S.jXN8%K;9J=r8PjGG>:Tuib9t-:Je^&AXMN#/%+lhF9bi6j_BqdFm[;J-#)>?nf9i,Elb04EsC,&/_m/fENN&<2?<7HmAdUdFM(Idk*+();p,A$kk(Tc3X[pSq#l*u+CBP[+sU$WBl%c1Vb;DD@-5eR"FR1,\1qJBn9G,ccX)[^+8"f+Vd%/jRIJl>MrF44J6llZ`D-aAgFj#rj+&UBX`R-)s'GDJ8=ZH@BPJqLt,D'g^eM%$$jM7Bn6jo"M8&6,9s#<^uE\D)TCA^GV,[MJ\_V[Y::XYH[rPAjO'0UB9t4upAiALa=d:k:EV4I^9.-JG\jZ,^[/kI[q&'Q[GL/U%N/]RRF3%%M<Ibr*ldKje>CV%sX'`U01$7UMp+[rTq7_=Vq7[BSH@K::*bQh[2EnK`$AsFhEY:b%8^V-bUsO*763I:/JP*C@otQ>a%JrDeI"_o<Vi][\]!`4:s/l7)6p`ug@9;-+<!L!s:o6$r8%<n^`)br:mB*C$EA9X(94Fe-OWMC@M*F9Oag]UMG.p&L!Hf]=3V]6?;%dQj:*7UT6?9IXMo[9"-/FWTs"i3!N+YK95`Mk\"R=AhHX.-:_e$C3ubA:@f\h@^o^I#oOcicA/gYCRFJmNs(9?ATI%n,uN^>-5;J%08hnF'YEtZToqUk8;<#6TV2H%,;ptoTjZWmiW((a\1=4fV_mm/i]Jbn"Zf1pBInp.&bilE$>JlFS#IT`%'mIMn>ld'Wn##<og6:Y%C9LO>+N%pU/o>j5S8=:M"mdS[0\ISDT=>>^(;eeQJJ`qVmNQS:hZspOb\r:;*+Y/l^:j_6\MRNf`Q,/+6F0r@HNTGXJ/X!-OoBUf%)lVfRpg++"=q*B/@iuJiqUT6""=s;5Z::*T?=&kCM)pmTnOWu,M,CQKRlG*9=6&hG1;:l##F4(e^.T-:FEQIob][JF^/LI7Co5pg%c&E@$gadGp<2526qqsjlpe(9um63[&L5D!e7o/AfnP2bJ9dT2<[0>@l!q(7($hd"?>)SeZ(">GDNG\lG9;<F,Nsp%HdM*0>`eB*C%-u5/9Usc-ES*Q?Y2f^X!fV*'g%<o'>K5?fSAcW["Ssn[*iqk)<a0_LQ_]@pG<aicdi\%qW&Wiq>6'K9[<M^ZO-TgN]W[k+OO'aM@%=`=3cmiT[B<O/TVDM4`9Kj\Z\\-l&Tc(]CF\2P`g&A+Wrqe0aKS0)fUhY.P1XH\d`iVC$FC?(k$Qq7%$5-.jR*)^TP)D$m$X]_$+%2c@r7Yo-,<ZRShnG3OA_GnSb"`h>p[iWR-loFuBhr*fZ=H=p*N)QQD)j:rj"IO1iAAf8N&o1HLGKX)UF"l1,miAnE>]<nD-fC>#M%mS%]0$m(i&>Gi4@DF<UVS1;_Ze*_X5\-,@Kh:P+k!>js%k)#Z2ZC?t\Tr0=#Y#l"M$rEVbmO!5eaDSjFKq>$']3JM3!h[u^`uR;H%>^)<B/mCd%[g5,c+a<qV"A_n8]eO87i$k>,-`naU<L78!:Mj-`VZ?%s"QBW1ME:0g17mDQ_R_rmFG_:19k?X;&`u]VNZC.a9K+8H%"J(.'4/u4!3X&29pD+]iME:07#H2_[b54uue7RC,;k''!.I+E);Ab'??+BGG3CQWN3A!`r!Rjb#Fs3b3isq*.%66ippX'dt$CL6,%2aL#["*K7)A4KAqe.'6feZOdF`0!suFZY%f,,YG+-Mb<9;ZLr]%LP3b<4DAO'0-5h1%Qq8EXJc5Mu,.-Vl8bGr"B:)U7/\r0ICaR%QJr3077_V6J/c6+8GCXu*l'3k]!&cUCS\M0^aVO[.Aj>";j;;=J/c9Q9!ig%cN0Qi//rQnYQ?e<h[7M6OiA5AmLmg8^aXY,O(eYT%Ku]80f94Yb>4)H7:X8gU=X)K4V;*Ra-!USLga`JMbDSa2]lPjI%?mKs8]E"-'Xc`(OdiR(19FdoA?k/&2;0Qn.pu;FAV3]o<l(X]%k2$gERN*>9EG_p/TY%Oj2@(*sc+VX2Rj,F*KG-6IFE_e0J$1AR9Xgdj0QhUKge^qNc=pK=aLQ(([kC$)pO6SK.-=k58j<=0*E9.n%XMa(uEPF$"i%@Vd1IptuB<M_4i/SJ9Rk!#n9#2WK*(`R?W5P4&;/PVkSdOP4<'OJdO8sepqp:4O"/`nTg\O"8)\0dX<`!Gt>$.`N%?k>?KTU(Gt"dYH;_**sD;H>Q@iL$oRijZ&mYSe*'Q71&8e3S4R9/cksH3nrE/+)[9<CLXG/Z>u\eXDXJdnmTCJ`Lig_W<E%R3@H(%0dooS,On-<p<$<t-UE=)D,ND;5->0'@]Kiroug7sJU-4]g.KqMaN\!j1^<l214*G(2%kh[d*c3V4*f1\;ObA+8k7es4.m!CI2!n$%.lu8Tjus1C\EF6'/atbDc!JGrYZ#DjXTB\pp.QYhX=AWhA%LVkK1*9(37QV;dDJomB7X3O;_G*Aa9"B0:c<j&90qTP-QY2QJQ4H0%mcF6#-<-R.6AN?<gm6#<a"SPBlUjnlko%$1kEH#l[tm]c(1(,I:K["W_)1os0bE$n;PF>(XLuuImm-<=@5>-=g&akL69AF4/X7]p%GKoYlV&H]=<`Vc:P$gQ9No9,[/']Sm7:@Pu@IX&g0Ui5o"X%itZ<f!Ag#%dhp(I[L>6p(/JGl+QGCs$?jN[TA?Nc@fWgkj39sS:P%fsMJsOrP"^-]t;b5]2P)g0Zn\,UOps+8Vl]XdK-#NHT(-U2Lc6VBB6":P(<GD$.)P-=2/Pr"o]SLm,S3AjqEG/3MAO8gAL/K!&CB%hZcOV9*X$sU"(c5-<U1UhG2F+CM.nIU9bt_?\I+-:$'+@SOC_.k?1ku^E&#-k?n:Ea/.gFEFFQtdrUoZRSrN=n/GIW,.D/*!T>"G%,'Tt:H*rVCd2;UYA$KjgOJ9>>&\0&MMSjE_&8X"gL\.Y'0tIuu`4$5ANW=l??>7'!k"E;X+t;1$la$$&Md4-"SV@'H9Iqhl0aKc>%`Ga49@X2h\W0-;r"-?_B^H6BXLtHjdC89s?iQJ*05"K?sCPR;<Ye=0C*Oe&I$DaZWKChn]ks09W>risXirZu)d?Yb2/]mabTDTQH%(N/mc'F)3E+l7XqAQ;=jK]?Mi68gPhY$FSJidW*&5'09'qBA%,7eg,*<Hsm9-15SXf*[26%>npP$a-jM:3>/Z["D\3BBK3qW&$&V%CbC00aL,*0*?K8Ef3X;H-F9scE_ECt/U=1`%`AuNg(!8RC[41.YsPV,nLa'k&iXcd+qY[f<,8\lZPt7#Q?;k]&8Tl:WEgfP+28=D%FqX'0[#hp_&[:&nqG&Lc>E4S05+Xm/()sk$](@L]jWN:H\,#lP&[S0(12jMU(1G]_(aujaX-.#1#0OmdI!(&)Giq^'2AXjJ=_J]1%$:DcL'9q3VUoul"]el#5XEG-Z(937lml"U^Kq%@5^uX(bV24%d8?c19)Z\GP/VOck^Co+m6OZuLm^pc(J?>6c]!F;'l(Oh-(s\5'%\u6GPqGQeaOBc:i_e'U\4Xd^^7EoXjA^H/c1nQo48"oY!:'#8@L"_6q+HJqag8\Go'12*FBP']d_Ydkq:SDq\;^9;t$Np2aftU7]%m"3#,mBA-q,1h9P*ojCNh+bHMa/?Z;.3>rI34QU?'\WB^K!h\lGI,P7LiI]!4(P1N2X^j@p)`Y7Rh5Y3kG!0Q;#AnY(51C)]09jk%%TR58q%.:ZbIJK7f)`2#\JZ[%.TA[rL2<_rnT8ZdH--Z\At+c.L'p%$#dp_nkhRB2/p;7/DSY>E6mTDa0Y(,/hB!`2gm%+"P1447%Ha>'-AG9t,jl3e_HT/`\WQc[VQ;Qh>N@/>aZL$Fb>5*S:jn8-Ij5JfPX1TB:\P^^IGW1.n&U<'D)cbSqY(_(p9)FF6h\qY.38C!E%Kl5-RUCk\_fa\eF`5B9Jaiic5c*2spPlGiDbHe`=[iY.eTXM!.q-Z>@gTnD;K1,SBRsTcU]<KK%^%J6ZZ?nMYZo\j3gfsMncbmF^%TtRhX]g8>t%Zc(^%VmMP48/r9Ft"</SS\rAqk\dp7_:e9no"`UD$i8?^Hm4[Vp2t.bO49CH?>uFWl)S7GctbI>eii1(UP=P&niAV%F^fC-=E+LBbu14*8H?Qt!QjGHpt?Fp+jaP@Ak*u%!pp8Mkr_:`p)99O=#Q*Qc$#Y)B#%!_:B6T:"3_=-)m:6OGeiBDLB*OmPgf]h%$T6X<HO8tT>R<-&_;[.[-75''o2:(67Q]=(Agi2O,s+KIcs[.$Xg8]E.+@.ZP=/Lf:q:rY=niJ)1u-dg'kcRnfEfZ3phL]$KLU;s%&eb1t.dbl/L^+'m>UHLOe\Naf6lC7[VAO!f5!h[)ZWRX+[pLR7WB:1(m8D74LDF:.X92%`L-9)$,qk5J>JP7se99^ZR<Ht4XX*sD%e@t<s.F[]E3a7LkdpBS^/`g?'Ba5pcMI`e*!_Vj>7h`W!m>H0q'tT/=k3/J4!J.e-n&hTJ0rLmNkMo85).9V*Aq7UA8[d+(@;2WK%Hh//T.n[(;O#qcp9c(K2TGIheQUL<%J-%D@H.fF,6;b"9[(TbB/g?Cf:kk"YE.RV%oaW*ch&;3%\P3G?.Qsc`hV3@upSY4o1W\@S%E8u'[rX5.K4gO1pNnWhOI*(Z8NDISJI)-^-!P#H?-C05,SHs_DO[HCe.kiu+f9=*S#M4&?F%:Bh/P*BuKZu*]ZB2b8CH#>K!D"5]%\O`EfC<%]Eg"'IPfdAIt#VO+W:o*?^r/F8oOZ@g`9*WY;L9S-CCbA.U1\9L'D"#eN)*VO>S_GIC*i7I`/46*d%'[:[leK2!^nA6C%Lk$(^Zn0KH@Zo!R\HU@8fU's3Fm7ZR8I_qTTZ;->0i[9gI).kFDps=#*Wu!_1tT\jkBV[5m.LA'bGqMc"QtrO/tl/NfNdbdK6diU%m6Q<mgO@3u[aE!&<o@Uj.[-<<qG0K_pQtub/1_=bg52C-n6D_I"?b:[h^Iga.k.W/nZ7rk3]C`)7+Z"Da"1OFe.)POgIbfgIg%G5%X'J!Tg+$0V?FuFXWg@L(+3jaH\e:sr`_7:0"4IesopZn]]tJp4IAcc5?(V1/&Rdkn(1bk4\i*(&Z5RtfN*SQZ`b#,=l0j)scGu;V%pXmNV>E:`2P=T21j+gui$I'm\3[4#QOgu_F%BQOtcs1VN>0b+F4GJ/5Jbqak1'#S\5,p2q!c0L<[$B<ZWjW:c"U7:A[AjELMrD:>%Y.>/sNi\I^+)SPGb-op6D&Hp>>M\%FGE^_!W1u-s$JE9H"/TJs,aNHT6C5;Ci1,AE-1[pN&93N7BBn"L8-st;OJG&5\NoBTp9sj-%"3pP5`$tE+UH%LVAE[F-A?J:KV6#Y`";ork<8_G.OWF&uODaVLD]i=`4p32p.G?s&1Vinl8CsD7T(Puk\0AOXDHRJEg<-EDg9(QF%C(kSJ3@-08>?#HXgX_IdmJ!am:s=<(d0?VZCL/-!9%EX$PV6uL6>5BN9LNW)`%j(\-k_P+4a=a]Si[2,PC/aWpsBDsoqDLaj[$4Y%q`BZO!DBHJ_#-r=(5(>LcU'\BCp2WkOW=,DbaB4g`ekDRG/]S_@]cD?]Aa;V%0:;4:e2?O?^DRS(`L^c\XOmdmI1KpN?mD9B)<]h%$cY>\_;2B$0)H(-p9'Ab7n3.bjC"()]'VQK_87_q<OR('Q.?']=H<X;B#_!QQ2.+AW-[u-KMP)YiBRqGi8X0'As>qAVpbmR'5Q^t%ZDS,#)^u)lj?"OFfrJQjUH=';*'4<P<TX[f.KVN*#^?fYMY$2n]+lMbU<E=SVR-BOFcgDaU]Ag8FU\L;]J?ZRLr44f#aTuX>o"A=%4$IkE;?<'>^unJ`n'mg0!OY$`jH/J4\o2A@KF(T`,[(B\WL'q1D)=B+2`R0)TPO3\e,p\Ra0@@4ptX(F-kM0HcM#1+;F(NfSiaT$%`R25<b'C[p^A#?>5)b&b60:4K1b01pNEA3DZ>d?GA4k$[\6L_b\.ug7'\Nu[:nUu@\%3mB3V")pi%B%Fm(Y+b9sECs%5_$WGUKa9%j)XD!b)Zpjb0;\D'Zu?hC3'WMhhK2u4tmZ/#q8`f")ff,BrVP)BhkPs$]lUQ]8Ya!I4WS=Z_%+59Wn8oM4Gi\WtQO2Yu>1;mKBU(%pg&f"cl>,9[cJi6Wp0Q"[Tn)O`6q"M\Bl$A$D?/elGiui7CM<h2iGCY&U4Y]>h%Zui$i,L77p%Z0NaQre&@)KL'=/P2IWLS[Hno5%#75PgXkp9\^uTM]$9JDnmRUmG7nA;4bEWbE'0J^`jh].V^tE+!mT^R5R39t!j'oH]7VAN(n0q6`=2p[/T@th8Htotp5"2J_&cG"n%Y,HI)J59%(YCm(O!\.:"XAkuL:p/?l*p>&cj!AONA=lE"]S!'%[+t6ZT-Da)gRD1X'KUPt7*?gIkU@,r\%L'd,[.?;*Z982Qs9ns%m-#lR/PCk?U8Q)>/D;VIVgscf*#<i-TNoOu3d?NmlVa8UGRCBS<dV>!T:p9S_7P8r!,EnDn8)aU6qmY8__R<e\^E7L;[XN4i$l"*%4OgW7bHO:1FsE)IA6S\*\j<6Ea`S'X$(W9jZ3$JF:6B;%Eat$C%R@ST\%5M#/U8*07);rA+WWTIVIe>@m2k%J\]ecu+:"j2LD%$T%;-CVa(oe$+"eih,1g&,CK^RX7WJW+@B%`hURoRfa?udP#!ot%%QYSdI;^>Th:([L6pYgZT+f>=^AL)"X:6BMK'-AX\ZsbmD`uuaE%Fh$BK-ZTPhguI^:=2R)uiGjCjm1R^3a=4oFP>d/p^Trd_i\qt2NVd!(=I0!L_p4hNS%HEq#P2g(FEL^cp]8%M`i;^p\!WXKBhDnt%r4L]l(Zf,7a.ed%]R*?GS]3FtIu)JbUbT&2VQ)G4?^V\Ef@u)*Aef>F:U!te/p'1WYFd_`q>KaVqsEP;q:K)gPlJ\-i&5LL?Mr9-%^Y`D3dU=0P&O^X'[kfsrr7HB@\*P+j>HJt:+'KH9DXW]IR,Qfs`"W<5ghuGA+<9)"'j:6ZnODhMr.gS,[sNJM$[7#/#O%D5^+fk2%5eki.6'7G_2o1\(>Mj\+q1eKreiW2@8)IDs0;YF^&DaU>o(r$rAR^"@iX<eQ:iE_t`IDR7Z#9=0U_g+NIe1D=h&el"lJU5:mY]?&%9oMHK<RL">#m&)'.@-Wq5.B03RdS2H-B\:FrQI+^?FM:U:6A%$W_X^;UWQPms6PQoN3,1bE4bXf4E%R_^jj9SI\XA"YE"1?XP0rH%*FdOQ!7@t[M6',%3^f:96bJDngAIB7Y.E6>pA/6Lfm9HpI"2-5+^/<dGB*Ptp4V:;]nQL3H<8qhmE,6t]ja6NP3$MgMmD4*T!q]=%]AiKoDHXY.gW\:@T:#o>C[77gd\OQX,^(qmGAu*hmOcW=/$mcP$icc/dEUO>]`5l;1'hgB4FL^Lo6If:FnN0Zf"%Y.S.lF5@oI_X%DGOtt*)L_&<Yc^eb5P&WUANc<dVTi^$##L(?"HWWrOQEGO_L91i"kp1rhQmNH5ll1\'4`_4m<31T4JHk@.0XrZN5T2eN$LRL"/32%R7=X1nQ,5rk:`s(k3_%!ILlOshDZk+M-JU(U+P)F!a56"RB>&Pk_Iadl>CO$I;j@'Vg@%D0g[k%)rB]cq!mNGafouI[okBI5I2oR%fA8#YY%$AdUK<W$_U`W9<T:(bOCdmHfkS3Ws3e4:IW(9QE)*NnHbfZ;4lB]([Y4\[UWJPPNX6g-FB_NMcBgKl_+A/8B;N3!CW%4m%o\i$jAj2$aqU*`#>X?KBflCskK5EVE0osNGDYJ"W@n[XEp[-%+j:>+"@kh9tPM'7O`G>DK5M^YZqGrm;AdF,_m-?%ulNand7\E'"%5A`?*B(IOFp=Q6B@5->OV*1I@a)>-O?1soheXq?honPkkBQ)gY]l.H%gFKC,qYU<)htl#]rq,$%?i@sY/-#"or:G3*^Am@<IfIYO%++Em`s7#u*J,%@)s8INGpquPbr:V5Is/-r&IfIkm^\bqCJ,%uPh>ZNrDh%f)5Q9Vc^]39Q5Q8Rhra_>L-/SQ$^\Tm=rGOpu+$[%\B`~>%AI9_PrivateDataEnd