<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"
    default-lazy-init="true">

    <bean id="upgradeTaskMap" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="0.0" value-ref="upgrade1.0" />
                <entry key="1.0" value-ref="upgrade1.0" />
                <entry key="1.1" value-ref="upgrade1.1" />
                <entry key="1.2" value-ref="upgrade1.2" />
                <entry key="1.3" value-ref="upgrade1.3" />
            </map>
        </constructor-arg>
    </bean>

    <!-- Upgrade version 1.0 to current version -->
    <bean id="upgrade1.0" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="changes-1.1" />
                <ref bean="changes-1.2" />
                <ref bean="changes-1.2-nonRegServer" />
                <ref bean="changes-add-1.3" />
                <ref bean="changes-migrate-1.3" />
                <ref bean="changes-drop-mysql-1.3" />
                <ref bean="changes-drop-1.3" />
            </list>
        </constructor-arg>
    </bean>

    <!-- Upgrade version 1.1 to current version -->
    <bean id="upgrade1.1" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="changes-1.2" />
                <ref bean="changes-1.2-nonRegServer" />
                <ref bean="changes-add-1.3" />
                <ref bean="changes-migrate-1.3" />
                <ref bean="changes-drop-mysql-1.3" />
                <ref bean="changes-drop-1.3" />
            </list>
        </constructor-arg>
    </bean>
    
    <!-- Upgrade version 1.2 to current version -->
    <bean id="upgrade1.2" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="changes-add-1.3" />
                <ref bean="changes-migrate-1.3" />
                <ref bean="changes-drop-mysql-1.3" />
                <ref bean="changes-drop-1.3" />
            </list>
        </constructor-arg>
    </bean>    

    <!-- Upgrade version 1.3 to current version -->
    <bean id="upgrade1.3" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <ref bean="changes-1.4-might-fail" />
                <ref bean="changes-1.4" />
                <ref bean="changes-1.4-might-fail-after" />
            </list>
        </constructor-arg>
    </bean>    
    
    <!-- Changes made in version 1.1 -->
    <bean id="changes-1.1" class="org.jumpmind.symmetric.upgrade.SqlUpgradeTask">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="sqlList">
            <list>
                <value>
                    alter table ${sync.table.prefix}_trigger 
                    add sync_on_incoming_batch numeric(3) default 0
                </value>
                <value>
                    alter table ${sync.table.prefix}_data_event
                    add batched numeric(3) default 0
                </value>
                <value>
                    update ${sync.table.prefix}_data_event set batched = '1'
                    where batch_id is not null
                </value>
                <value>
                    create index idx_de_batched_nodeid on 
                    ${sync.table.prefix}_data_event(batched, node_id)
                </value>
            </list>
        </property>
    </bean>

    <!-- Changes made in version 1.2 -->
    <bean id="changes-1.2" class="org.jumpmind.symmetric.upgrade.SqlUpgradeTask">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="useReplacement" value="false" />
        <property name="sqlList">
            <list>
                <value>
                    alter table ${sync.table.prefix}_node_security
                    add initial_load_enabled numeric(1) default 0
                </value>
                <value>
                    alter table ${sync.table.prefix}_node_security
                    add initial_load_time timestamp null
                </value>
                <value>
                    update ${sync.table.prefix}_node_security
                    set initial_load_time = registration_time
                </value>
                <value>
                    update sym_trigger 
                    set initial_load_select = 'node_group_id = ''$(groupId)'' or node_group_id in (select source_node_group_id from ${sync.table.prefix}_node_group_link where target_node_group_id = ''$(groupId)'') or node_group_id in (select target_node_group_id from ${sync.table.prefix}_node_group_link where source_node_group_id = ''$(groupId)'')' 
                    where channel_id = 'config' and source_table_name = '${sync.table.prefix}_node_group'
                </value>
                <value>
                    update sym_trigger 
                    set initial_load_select = 'source_node_group_id = ''$(groupId)'' or target_node_group_id = ''$(groupId)''' 
                    where channel_id = 'config' and source_table_name = '${sync.table.prefix}_node_group_link'
                </value>
                <value>
                    update sym_trigger 
                    set initial_load_select = 'node_id = ''$(nodeId)'' or node_group_id in (select source_node_group_id from ${sync.table.prefix}_node_group_link where target_node_group_id = ''$(groupId)'') or node_group_id in (select target_node_group_id from ${sync.table.prefix}_node_group_link where source_node_group_id = ''$(groupId)'')' 
                    where channel_id = 'config' and source_table_name = '${sync.table.prefix}_node'
                </value>
                <value>
                    update sym_trigger 
                    set initial_load_select = 'node_id = ''$(nodeId)'' or node_id in (select s.node_id from ${sync.table.prefix}_node s inner join ${sync.table.prefix}_node_group_link l on s.node_group_id = l.source_node_group_id where l.target_node_group_id = ''$(groupId)'') or node_id in (select s.node_id from ${sync.table.prefix}_node s inner join ${sync.table.prefix}_node_group_link l on s.node_group_id = l.target_node_group_id where l.source_node_group_id = ''$(groupId)'')' 
                    where channel_id = 'config' and source_table_name = '${sync.table.prefix}_node_security'
                </value>
                <value>
                    update sym_trigger 
                    set initial_load_select = 'node_group_id = ''$(groupId)''' 
                    where channel_id = 'config' and source_table_name = '${sync.table.prefix}_global_parameter'
                </value>
                <value>
                    update sym_trigger 
                    set initial_load_select = 'channel_id in (select channel_id from ${sync.table.prefix}_trigger where source_node_group_id = ''$(groupId)'')' 
                    where channel_id = 'config' and source_table_name = '${sync.table.prefix}_channel'
                </value>
                <value>
                    update sym_trigger 
                    set initial_load_select = 'node_id = ''$(nodeId)''' 
                    where channel_id = 'config' and source_table_name = '${sync.table.prefix}_node_channel_ctl'
                </value>
                <value>
                    update sym_trigger 
                    set initial_load_select = 'source_node_group_id = ''$(groupId)''' 
                    where channel_id = 'config' and source_table_name = '${sync.table.prefix}_trigger'
                </value>
            </list>
        </property>
    </bean>

    <bean id="changes-1.2-nonRegServer" class="org.jumpmind.symmetric.upgrade.SqlUpgradeTask">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="upgradeRegistrationServer" value="false" />
        <property name="sqlList">
            <list>
                <value>
                    delete from ${sync.table.prefix}_node_channel_ctl where
                    node_id != '$(nodeId)' and
                    node_id not in (select s.node_id from ${sync.table.prefix}_node s inner join ${sync.table.prefix}_node_group_link l on s.node_group_id = l.source_node_group_id where l.target_node_group_id = '$(groupId)') and
                    node_id not in (select s.node_id from ${sync.table.prefix}_node s inner join ${sync.table.prefix}_node_group_link l on s.node_group_id = l.target_node_group_id where l.source_node_group_id = '$(groupId)')
                </value>
                <value>
                    delete from ${sync.table.prefix}_node_security where
                    node_id != '$(nodeId)' and
                    node_id not in (select s.node_id from ${sync.table.prefix}_node s inner join ${sync.table.prefix}_node_group_link l on s.node_group_id = l.source_node_group_id where l.target_node_group_id = '$(groupId)') and
                    node_id not in (select s.node_id from ${sync.table.prefix}_node s inner join ${sync.table.prefix}_node_group_link l on s.node_group_id = l.target_node_group_id where l.source_node_group_id = '$(groupId)')
                </value>
                <value>
                    delete from ${sync.table.prefix}_node where
                    node_id != '$(nodeId)' and
                    node_group_id not in (select source_node_group_id from ${sync.table.prefix}_node_group_link where target_node_group_id = '$(groupId)') and
                    node_group_id not in (select target_node_group_id from ${sync.table.prefix}_node_group_link where source_node_group_id = '$(groupId)')
                </value>
            </list>
        </property>
    </bean>
    
    <bean id="changes-add-1.3" class="org.jumpmind.symmetric.upgrade.SqlUpgradeTask">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="sqlList">
            <list>
                <value>
                  alter table ${sync.table.prefix}_data_event add channel_id varchar(50)
                </value>
                <value>
                  alter table ${sync.table.prefix}_data_event add transaction_id varchar(1000)
                </value>
                <value>
                  alter table ${sync.table.prefix}_channel add max_batch_to_send numeric(5) default 60
                </value>                
                <value>
                  alter table ${sync.table.prefix}_incoming_batch_hist add byte_count numeric(22)
                </value>                
                <value>
                  alter table ${sync.table.prefix}_incoming_batch_hist add network_millis numeric(22)
                </value>                
                <value>
                  alter table ${sync.table.prefix}_incoming_batch_hist add filter_millis numeric(22)
                </value>                
                <value>
                  alter table ${sync.table.prefix}_incoming_batch_hist add database_millis numeric(22)
                </value>                
            </list>
        </property>
    </bean>
    
    <bean id="changes-migrate-1.3" class="org.jumpmind.symmetric.upgrade.SqlDrivenUpgradeTask">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="driverSql">
                <value>
                  select channel_id, transaction_id, data_id from ${sync.table.prefix}_data
                </value>
        </property>
        <property name="updateSql">
                <value>
                  update ${sync.table.prefix}_data_event set channel_id=?, transaction_id=? where data_id=?
                </value>
        </property>        
    </bean>
    
    <bean id="changes-drop-mysql-1.3" class="org.jumpmind.symmetric.upgrade.SqlUpgradeTask">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="dbDialect" ref="dbDialect" />
        <property name="dialectName" value="MySQL" />
        <property name="sqlList">
            <list>
                <value>
                  alter table ${sync.table.prefix}_data drop foreign key fk_d_channel_id
                </value>                
            </list>
        </property>
    </bean>

    <bean id="changes-drop-1.3" class="org.jumpmind.symmetric.upgrade.SqlUpgradeTask">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="sqlList">
            <list>
                <value>
                  alter table ${sync.table.prefix}_data drop column channel_id
                </value>                
                <value>
                  alter table ${sync.table.prefix}_data drop column transaction_id
                </value>
                <value>
                  update sym_trigger set last_updated_time=current_timestamp
                </value>
            </list>
        </property>
    </bean>        

    <!-- Changes made in version 1.4 -->
    <bean id="changes-1.4" class="org.jumpmind.symmetric.upgrade.SqlUpgradeTask">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="sqlList">
            <list>
                <value>                
                    alter table ${sync.table.prefix}_node_security 
                    add node_password varchar(50)
                </value>
                <value>                
                    alter table ${sync.table.prefix}_node 
                    add timezone_offset varchar(6)
                </value>                
                <value>                
                    update ${sync.table.prefix}_node_security set node_password = password
                </value>
                <value>                
                    alter table ${sync.table.prefix}_node_security drop column password
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist drop column history_id
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist drop column event_time
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add node_id varchar(50)
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add start_time timestamp
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add end_time timestamp
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add network_millis numeric(22)
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add filter_millis numeric(22)
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add database_millis numeric(22)
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add host_name varchar(50)
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add byte_count numeric(15)
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add sql_state varchar(10)
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add sql_code numeric(10)
                </value>
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist add sql_message varchar(50)
                </value>
                <value>
                    create index idx_outgoing_batch_hist on ${sync.table.prefix}_outgoing_batch_hist(node_id, batch_id)
                </value>
                <value>
                    alter table ${sync.table.prefix}_incoming_batch_hist add sql_state varchar(10)
                </value>
                <value>
                    alter table ${sync.table.prefix}_incoming_batch_hist add sql_code numeric(10)
                </value>
                <value>
                    alter table ${sync.table.prefix}_incoming_batch_hist add sql_message varchar(50)
                </value>
                <value>
                    alter table ${sync.table.prefix}_trigger add source_catalog_name varchar(50)
                </value>
                <value>
                    alter table ${sync.table.prefix}_trigger_hist add source_catalog_name varchar(50)
                </value>                                                
                <value>
                    drop index idx_de_batched_nodeid
                </value>
                <value>
                    create index idx_de_batched_nodeid_channel on 
                    ${sync.table.prefix}_data_event(batched, node_id, channel_id)
                </value>
            </list>
        </property>
    </bean>        

    <!-- Changes made in version 1.4 that vary on different database platforms -->
    <bean id="changes-1.4-might-fail" class="org.jumpmind.symmetric.upgrade.SqlUpgradeTask">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="ignoreFailure" value="true" />
        <property name="sqlList">
            <list>
                <!-- Not PostgreSQL -->
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist drop primary key
                </value>
                <!-- Oracle -->
                <value>
                    drop trigger TRG_${sync.table.prefix}_OUTGOIN_IST_history_id
                </value>
                <!-- Oracle -->
                <value>
                    drop sequence seq_${sync.table.prefix}_OUTGOIN_IST_history_id
                </value>
                <!-- PostgreSQL -->
                <value>
                    alter table ${sync.table.prefix}_outgoing_batch_hist drop constraint ${sync.table.prefix}_outgoing_batch_hist_pkey
                </value>
                <value>
                    drop table ${sync.table.prefix}_global_parameter
                </value>
                <value>
                    drop function fn_sym_blob2clob
                </value>
            </list>
        </property>
    </bean>

    <!-- Changes made in version 1.4 that vary on different database platforms -->
    <bean id="changes-1.4-might-fail-after" class="org.jumpmind.symmetric.upgrade.SqlUpgradeTask">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="ignoreFailure" value="true" />
        <property name="sqlList">
            <list>
                <!-- PostgreSQL -->
                <value>
                    drop sequence ${sync.table.prefix}_OUTGOING_BA_history_id_seq
                </value>
            </list>
        </property>
    </bean>
    
</beans>