=== Write Only Node

Write only nodes can be configured for nodes that are only designed to load data into the database.   This prevents any triggers or runtime tables from being installed on this database but still allow data to be replicated to it.

.Advantages of Write Only Nodes
* No SymmetricDS runtime tables (SYM_*) installed inside the target database.
* No SymmetricDS triggers installed inside the target database.
* There is still support for bulk loaders if provided (MSSQL, Oracle, Postgres, MySQL for example).
* Allows SymmetricDS to load data into dialects that are not fully supported yet or may not have full trigger support.

.Constraints of Write Only Nodes
* Can not be set up to capture changes
* Requires a JDBC driver 
* May require table creation outside of SymmetricDS
* Requires an additional database to be used for SymmetricDS runtime usage.  H2 is used in the setup below but any other database could be used as the runtime database.

==== Setup Write Only Node

ifdef::pro[]

* To setup a write only node, begin by adding a new node to your configuration (See <<Add Node>> for details on adding a new node).

===== Setup Write Only Node For Supported Databases
* On the database setup screen of the connect database wizard, select "None (write only)" after selecting your database type.

image::images/manage/manage-write-only.png[]

* The remaining steps in the connect database wizard are the same as if adding a full node so continue through the remainder of the connect database wizard to complete the configuration.

===== Setup Write Only Node For Unsupported Databases

* Click the Add Driver... button to setup a new JDBC driver to support a write only node.

image::images/manage/manage-write-only-driver.png[]

* Enter the information for the new JDBC driver 

Alias::
Provide a name for the database as it will appear in the future drop down list of available databases.

Upload::
Upload button to upload a new JDBC driver jar file to the SymmetricDS /lib folder

Driver Class::
This will be populated by default by a class in the uploaded JDBC jar that implements the java.sql.Driver interface.

Example Url::
An exmaple jdbc connection url for this driver so that when it is selected in the future a template will provided.  

* Click Save and the database setup screen will now be populated with your new driver information.

* The remaining steps in the connect database wizard are the same as if adding a full node so continue through the remainder of the connect database wizard to complete the configuration.

NOTE: Uploading a jar file is only available in the standalone installation of SymmetricDS, NOT with the deployed war file setup.  For a web container (war) based deployment you would need to add the driver jar to the web servers classpath and restart.  Then provide the driver class and url manually as explained in steps 4 and 5 below.

NOTE: If the driver is already a supported database by SymmetricDA and the driver jar file was packaged with SymmetricDS (in the /lib folder) or has already been uploaded for another node there is no need to upload anything here.  


endif::pro[]

ifndef::pro[]
1. Begin by setting up a <<Node Properties File>>.  You do not need to provide any of the db.* properties just yet as they will be adjusted in step 2.

2. Adjust the db.* properties in the write only engine properties file to utilize H2 for runtime information and configuration.   The db.user and db.password values are required but do not have to contain values, an empty property for these is sufficient.

[source,properties]
----
db.driver=org.h2.Driver
db.url=jdbc:h2:file:load-only;LOCK_TIMEOUT=60000
db.validation.query=select 1
db.user=
db.password=
----

NOTE: If you have multiple write only nodes under a single installation of SymmetricDS you will need to provide a unique H2 database name for each in the db.url above (default is load-only).  


3. Add the following properties to identify the node as write only and provide connection information for your write only database.
----
load.only=true
target.db.driver=
target.db.url=
target.db.user=
target.db.password=
----
NOTE: If additional database properties are needed you can add the prefix target. to any other existing SymmetricDS parameters <<Startup Parameters>>.

4. Add the jar file containing the jdbc driver provided in the target.db.driver property to the /lib folder of SymmetricDS

5. Restart SymmetricDS
endif::pro[]

