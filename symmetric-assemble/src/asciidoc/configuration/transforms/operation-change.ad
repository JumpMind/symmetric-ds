
==== Operation Change

By default the the "source operation" or "source DML type" (i.e., an insert, a delete, or an update), which initiated 
the transform execution will be the same operation applied to the target.  There are two ways you can override this behavior.

.Operation Changes
|===
|Source Operation|Target Operation|Setting

|INSERT|UPDATE followed by INSERT if update was unsuccessful|Update First

|DELETE|UPDATE|Delete Action is set to UPDATE_COL

|===

===== Update First
ifdef::pro[]
.Check the "Update First" box to attempt an update before an insert on the target when an insert occurs from the target.
image::transforms/transform-update-first.png[]
endif::pro[]

ifndef::pro[]

[source, SQL]
----
insert into SYM_TRANSFORM_TABLE (
	transform_id, source_node_group_id, target_node_group_id, transform_point, source_table_name,
	target_table_name, update_action, delete_action, transform_order, column_policy, update_first,
	last_update_time, create_time
) values (
	'update-first', 'store', 'corp', 'EXTRACT', 'ITEM_SELLING_PRICE',
	'ITEM_SELLING_PRICE', 'UPDATE_COL', 'DEL_ROW', 1, 'IMPLIED', 1,
	current_timestamp, current_timestamp
);
----
endif::pro[]

===== Delete Action
ifdef::pro[]
.Select "UPDATE_COL" for the delete action to initiate updates on the target based on the transform columns configuration, see <<Columns>>.
image::transforms/transform-update-col.png[]
endif::pro[]

ifndef::pro[]

[source, SQL]
----
insert into SYM_TRANSFORM_TABLE (
	transform_id, source_node_group_id, target_node_group_id, transform_point, source_table_name,
	target_table_name, update_action, delete_action, transform_order, column_policy, update_first,
	last_update_time, create_time
) values (
	'delete-action-update-col', 'store', 'corp', 'EXTRACT', 'ITEM_SELLING_PRICE',
	'ITEM_SELLING_PRICE', 'UPDATE_COL', 'UPDATE_COL', 2, 'IMPLIED', 0,
	current_timestamp, current_timestamp
);
----
endif::pro[]
