
=== File Routing

ifndef::pro[]
The FILE_TRIGGER_ROUTER table is used to define which specific combinations of file triggers and routers are needed for your configuration. 
The relationship between file triggers and routers is many-to-many, so this table serves as the join table to define which combinations 
are valid, as well as to define settings available at the trigger-router level of granularity.

endif::pro[]

ifdef::pro[]
The file routing concept is identical to the <<Table Routing>> concept except that it is for files versus database tables.  The 
<<File Triggers>> specify which directory structures on the source node to watch, and the <<Routers>>  define where the data 
is sent based on the configured router.  Similar to <<Table Routing>> the simplest way to set up file routing is via the use
of the *Auto Create* button.

[.float-group]
--
[.left.text-left]
image::images/file-routing/auto-create-1-triggers.png[]

The default entry point for the auto creation is from the file triggers perspective.  This will allow you to select file triggers first then routers.

Click *Next* to select from available routers.

--


[.float-group]
--
[.left.text-left]
image::images/file-routing/auto-create-2-routers.png[]


Select the routers (direction) to associate with the previously selected file triggers.

Click *Save* to setup the file triggers and begin file sync.
--

You can also select routers on the first screen of the auto create if you would like to select routers first then file triggers.   Both approaches will
result in the same file routing.

[.float-group]
--
[.left.text-left]
image::images/file-routing/auto-create-1-routers.png[]

Select from available routers.

Click *Next* to select from available file triggers.

--

[.float-group]
--
[.left.text-left]
image::images/file-routing/auto-create-2-triggers.png[]

Select the file triggers to associate with the previously selected routers.

Click *Save* to setup the file routers and begin file sync.
--
The file routing elements created by the wizard can be maintained from the File Routing List Screen.  New file routing
entries can also be created manually from this screen if desired.

IMPORTANT: SymmetricDS will not create file triggers until they are associated with a router through file routing.

NOTE: Once a file routing relationship is created changes on the base directory will be captured and file sync will begin.

image::images/file-routing/file-routing-new.png[]
endif::pro[]

ifdef::pro[]
.Required Fields
endif::pro[]
File Triggers:: The file trigger to link.
Routers:: The router to link.
Target Base Directory:: The base directory on the target node that files will be synchronized to.
Conflict Strategy:: The strategy to employ when a file has been modified at both the client and the server. 
.Conflict Strategy Options
|===

|source_wins|The source file will be used when a conflict occurs.

|target_wins|The target file will be used when a conflict occurs.

|manual|If a conflict occurs the batch will be put in ER (error) status and require manual intervention to resolve the issue.

ifdef::pro[]
|newer_wins|If a conflict occurs, a comparison between last modified date of the file incoming and the file currently on disk will be compared and the newest will win.   This assumes the system clocks on each machine are in sync to perform an accurate comparison.

|older_wins|If a conflict occurs, a comparison between last modified date of the file incoming and the file currently on disk will be compared and the oldest will win.   This assumes the system clocks on each machine are in sync to perform an accurate comparison.
endif::pro[]

|===

ifdef::pro[]
.Advanced Options
endif::pro[]
Initial Load Enabled:: Indicates whether this file trigger should be initial loaded.
Enabled:: Indicates whether this file trigger router is enabled or not.  

