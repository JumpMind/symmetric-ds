== What's New

ifdef::pro[]

=== DB2 for i Log-based Replication
--
DB2 for i replication (on IBM iSeries AS/400 platform) was expanded to include log mining of journals,
in addition to trigger-based change capture.
--

=== MariaDB Log-based Replication
--
MariaDB support was expanded to include log mining of the binary log,
in addition to trigger-based change capture.
--

=== Progress OpenEdge Replication
--
Replicate changes from Progress OpenEdge database or load data from other databases into it. 
OpenEdge is a relational database management system with a 4GL programming language for building business applications.
This dialect has bi-directional support that includes change data capture, sub-setting, transformations, and initial loads.
--

=== Compare and Repair
--
Compare and Repair feature allows comparison of data between a source database and one or more target databases.
The user has options of all or specific tables, level of comparison, immediate or scheduled, and whether to report or repair data.
Comparison can use checksums at a table or chunk level to minimize use of the network.
Parallel threads are used on each database per comparison request (compare.queue.per.request.count) with a maximum
number of threads available on each server (compare.thread.per.server.count).
A report of matching, different, missing, and extra rows can be kept, including a SQL file of changes that
can be viewed or applied automatically to the target database.
--

=== Insight Manager
--
The Insights Manager is a sliding panel on the left side of the Dashboard that presents the user
with proactive AI-generated recommendations that can help optimize and enhance the system.
The user can choose to approve actions, schedule reminders for a later time, or dismiss altogether.
Insights are collected across all nodes in the system and use pattern matching and rules collected
from support cases.
--

=== UI Improvements
--
Screens now use lazy initialization to reduce the time it takes to login and navigate.
The Manage -> Jobs screen has a new history icon that opens a listing of job runs from the past 30 days along with
a graph of job statistics.
--

=== Security Improvements
--
Web console users can be put into a hierarchy of roles, giving them permission to create or modify users at or below
their current role.  Web console users can be given a "break glass" indicator that prevents login unless another
user breaks the glass for a temporary, time-based password to the account.
Web console users can now authenticate with single sign-on (SSO) using the SAML security standard with a third party
identity provider.
--

endif::pro[]

=== Performance Improvements
--
Purge now uses "exists" clause instead of "in" clause for correlated deletes if the database supports it.
File sync now stages file changes to improve response time for pull sync requests, which also helps with network timeouts.
Routing now uses a cached list of enabled nodes it can route changes to for each batch it creates.
The default push and pull intervals were changed to 10 seconds to reduce the sync time experienced by new users.
--

=== Operational Improvements
--
Old data gaps are marked as expired by routing for performance, but left in the system for purge service to track and remove
after a longer time period (purge.expired.data.gap.retention.minutes).
If purge service finds data in an expired gap, it will repair the data by queuing reloads of the rows by primary key values.
The sym_outgoing_error table was added to mirror sym_incoming_error and allow users to provide resolution for
data conflicts on the outgoing side.
All HTTP error codes now use 600 series to distinguish from any network devices that use standard 500 series.
In some cases, more specific HTTP error codes are now used that may cause older clients to log only a general error message
with the error code, which include 601 bad request, 602 engine not found, and 605 client already connected.
ifdef::pro[]

The symconsole command line utility can now perform operations with the license key.
endif::pro[]
--

=== Technology Upgrades
--
H2 database version 2 is now included.  Users with existing H2 1.x databases may need to add ";MODE=LEGACY" to the end of db.url
or "set MODE LEGACY" to db.init.sql (the Pro installer will do this automatically).
Spring framework libraries were updated to version 6.
Spring Boot 3 is now used to run the Jetty web server in standalone mode.
Java 17 or later is now required.
--
