#
# Licensed to JumpMind Inc under one or more contributor
# license agreements.  See the NOTICE file distributed
# with this work for additional information regarding
# copyright ownership.  JumpMind Inc licenses this file
# to you under the GNU General Public License, version 3.0 (GPLv3)
# (the "License"); you may not use this file except in compliance
# with the License.
#
# You should have received a copy of the GNU General Public License,
# version 3.0 (GPLv3) along with this library; if not, see
# <http://www.gnu.org/licenses/>.
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Naming convention for keys
# Noun (Object), verb, condition (completed, failed, etc)
# Camel case
#
# If the string is related to a unit test, please prefix with "Test"

Common.Option.engine=The name of a configured engine.  The name should correspond to a engine.name setting in one of the properties files in the engines directory.
Common.Option.properties=The properties file with settings for the SymmetricDS engine.  If not provided, defaults are used, then overridden with first symmetric.properties in classpath, then overridden with symmetric.properties values in user.home directory.
Common.Option.debug=Print debug information in logging.
Common.Option.no-log-console=No output will be sent to the console.
Common.Option.no-log-file=No output will be sent to the log file.
Common.Option.verbose=Use verbose format for console output.
Common.Option.storepass=Password for keystore [changeit].
Common.Option.storetype=Type of keystore format [jks].
Common.Option.providerClass=Class name of alternate crypto provider.
Common.Option.help=Print help with each option and description.

Launcher.Option.server=Start an embedded instance of SymmetricDS that accepts HTTP.  Setting this on the command line overrides the enable settings in symmetric-server.properties.
Launcher.Option.client=Start an embedded, client-only, instance of SymmetricDS.
Launcher.Option.secure-server=Start an embedded instance of SymmetricDS that accepts HTTPS.  Setting this on the command line overrides the enable settings in symmetric-server.properties.
Launcher.Option.mixed-server=Start an embedded instance of SymmetricDS that accepts HTTP/HTTPS.  Setting this on the command line overrides the enable settings in symmetric-server.properties.
Launcher.Option.host=Optionally pass in the network interface the server should bind to.  If this option is not provided, the server will bind to all interfaces.
Launcher.Option.port=Optionally pass in the HTTP port number to use for the server instance.  If this parameter is not passed in, then port from the symmetric-server.properties file will be used.
Launcher.Option.jmx-port=Optionally pass in the port to use for JMX.  If this parameter is not passed in, then port from the symmetric-server.properties file will be used.
Launcher.Option.jmx-disable=Set the value to true to disable the JMX http interface.  If this parameter is not passed in, then value from the symmetric-server.properties file will be used.
Launcher.Option.secure-port=Optionally pass in the HTTPS port number to use for the server instance.  If this parameter is not passed in, then port from the symmetric-server.properties file will be used.
Launcher.Option.max-idle-time=Max idle time in milliseconds when a connection is forced to close [900000].
Launcher.Option.no-nio=Do not use Non-blocking IO for the HTTP connector.
Launcher.Option.no-directbuffer=Do not use direct buffers for the NIO HTTP connector.
Launcher.Option.http-basic-auth-user=Setting this option and --http-basic-auth-password will force the server to require basic authentication for all operations.
Launcher.Option.http-basic-auth-password=Setting this option and --http-basic-auth-user will force the server to require basic authentication for all operations.
Launcher.Option.winxp=Enable workaround thread to prevent system clock acceleration on Windows XP

SymAdmin.Cmd.reload-node=Reload data at a node (or initial load)
SymAdmin.Cmd.reload-table=Reload data at a node for tables
SymAdmin.Cmd.export-batch=Export batch CSV data from database
SymAdmin.Cmd.import-batch=Import batch CSV data into database
SymAdmin.Cmd.run-job=Run a job immediately
SymAdmin.Cmd.list-engines=List engines configured on this instance
SymAdmin.Cmd.run-purge=Run the purge job
SymAdmin.Cmd.encrypt-text=Encrypt text string
SymAdmin.Cmd.obfuscate-text=Obfuscate text string
SymAdmin.Cmd.create-war=Create web archive for deployment
SymAdmin.Cmd.create-sym-tables=Create tables required by SymmetricDS
SymAdmin.Cmd.export-sym-tables=Export tables required by SymmetricDS
SymAdmin.Cmd.open-registration=Open registration for a node
SymAdmin.Cmd.remove-node=Remove specified node (unregister and clean up) for the provided engine
SymAdmin.Cmd.sync-triggers=Create database triggers
SymAdmin.Cmd.drop-triggers=Drop database triggers
SymAdmin.Cmd.export-properties=Export default properties
SymAdmin.Cmd.send-sql=Send SQL statement to node
SymAdmin.Cmd.send-schema=Send schema change to node
SymAdmin.Cmd.send-script=Send script to node
SymAdmin.Cmd.uninstall=Uninstall all SymmetricDS objects from the database
SymAdmin.Cmd.module=Manage modules to add or remove features
SymAdmin.Cmd.backup-config=Backup configuration files
SymAdmin.Cmd.restore-config=Restore configuration files
SymAdmin.Cmd.import-config=Import a node configuration file
SymAdmin.Cmd.export-config=Export a node configuration file
SymAdmin.Cmd.import-cert=Import a certificate
SymAdmin.Usage.reload-node=<node-id>
SymAdmin.Usage.reload-table=<table> [<table> ...]
SymAdmin.Usage.export-batch=<node-id> <batch number> [<filename>]
SymAdmin.Usage.import-batch=[<filename>]
SymAdmin.Usage.list-engines=
SymAdmin.Usage.run-job=[pull | push | route | sync-triggers | purge | heartbeat]
SymAdmin.Usage.run-purge=[all | outgoing | incoming]
SymAdmin.Usage.encrypt-text=<text>
SymAdmin.Usage.obfuscate-text=<text>
SymAdmin.Usage.create-war=<filename>
SymAdmin.Usage.create-sym-tables=
SymAdmin.Usage.export-sym-tables=<filename>
SymAdmin.Usage.open-registration=<node group> <external id> [<sync url>]
SymAdmin.Usage.remove-node=<node-id>
SymAdmin.Usage.sync-triggers=[<tablename> ...]
SymAdmin.Usage.drop-triggers=[<tablename> ...]
SymAdmin.Usage.export-properties=[<filename>]
SymAdmin.Usage.send-sql=<table> <sql>
SymAdmin.Usage.send-schema=[<table>] ...
SymAdmin.Usage.send-script=<filename>
SymAdmin.Usage.uninstall=
SymAdmin.Usage.backup-config=
SymAdmin.Usage.restore-config=
SymAdmin.Usage.module=[install <module> | remove <module> | list-files <module> | list | list-all | upgrade | convert] 
SymAdmin.Usage.import-config=<filename>
SymAdmin.Usage.export-config=<filename>
SymAdmin.Usage.import-cert=<url>
SymAdmin.Help.export-sym-tables=Output the SQL to create the SymmetricDS tables.  If --alters is specified, then alters to the existing tables will be output.  If a filename is given, the SQL statements are written to it, otherwise standard output is used.
SymAdmin.Help.run-job=Run one of the scheduled jobs immediately.
SymAdmin.Help.list-engines=List each engine name and properties file configured on this instance.
SymAdmin.Help.run-purge=Run the purge process against the configured database.
SymAdmin.Help.export-properties=Export all properties with their default values, along with comments describing them.  If a filename is given, the properties are written to it, otherwise standard output is used.
SymAdmin.Help.create-sym-tables=Attempts to create the symmetric tables in the configured database.
SymAdmin.Help.open-registration=Open registration for the passed in node group and external id.
SymAdmin.Help.remove-node=Remove specified node (unregister and clean up) for the specified engine
SymAdmin.Help.export-batch=Export the batch CSV data for the given batch ID.  If a filename is given, the data is written to file, otherwise it uses standard output.
SymAdmin.Help.import-batch=Import the batch CSV data from the specified file into the database.  If a filename is given, the batch data is read from it, otherwise standard input is used.
SymAdmin.Help.sync-triggers=Run the sync triggers process to create database triggers that are missing or re-create database triggers that have a configuration change.  If a filename is specified, the SQL statements are also written to file.  If triggers should not be applied automatically then set the auto.sync.triggers property to false.
SymAdmin.Help.drop-triggers=Drop one or more database triggers
SymAdmin.Help.encrypt-text=Encrypts the given text for use with db.user and db.password properties.
SymAdmin.Help.obfuscate-text=Obfuscates the given text to prevent casual observation for use with javax.net.ssl.trustStorePassword and javax.net.ssl.keyStorePassword system properties.
SymAdmin.Help.create-war=Generate a web archive that can be deployed to a web server like Tomcat.  The name of the output file must be provided.  If a properties file is designated, it will be renamed and packaged as symmetric.properties.  Other than the optional properties file, a war is made up of the contents of the web directory and the conf directory of the standalone installation.
SymAdmin.Help.reload-node=Send an initial load of data to reload a remote node.
SymAdmin.Help.reload-table=Send the data from the specified tables to a node or group of nodes.
SymAdmin.Help.send-sql=Send a SQL statement to be executed on a remote node.
SymAdmin.Help.send-schema=Send a schema update for a table to be executed on a remote node.  The table definition is sent in torque XML format.  If the target table is missing, it is created; if it exists it will be altered, if possible, otherwise dropped and re-created.  Specify which tables to send or use no arguments to mean all configured tables.
SymAdmin.Help.send-script=Send a script to a node to be run there.  The script is read from the filename provided as an argument or read from standard input.  Only BeanShell scripts are supported.
SymAdmin.Help.uninstall=Uninstall all SymmetricDS objects from the database, including the SYM tables, sequences, functions, stored procedures, and triggers.  
SymAdmin.Help.module=\nManage modules to add or remove features.\n\nmodule list                 List modules that are currently installed\nmodule list-all             List all modules available to install\nmodule list-files <module>  List files for a module that is installed\nmodule list-deps <module>   List dependencies for a module\nmodule install <module>     Install a module\nmodule remove <module>      Remove a module\nmodule upgrade              Upgrade modules to latest version\nmodule convert              Read engine files and install required modules
SymAdmin.Help.backup-config=Backup configuration files to a zip file for later restoration if necessary.
SymAdmin.Help.restore-config=Restore configuration files from a zip file.
SymAdmin.Help.import-config=Import configuration for a node in the form of CSV or SQL data.
SymAdmin.Help.export-config=Export a node's configuration in the form of CSV or SQL data.
SymAdmin.Help.import-cert=Import a CA certificate chain via a URL. The server certificate and authority chain are retrieved and each authority's certificate in the chain gets imported.
SymAdmin.Option.catalog=Look for tables in catalog.
SymAdmin.Option.schema=Look for tables in schema.
SymAdmin.Option.where=Add where clause to SQL statement that selects data from table.
SymAdmin.Option.node=Send to this node ID.
SymAdmin.Option.node-group=Send to all nodes in this node group ID.
SymAdmin.Option.force=Force triggers to regenerate even if no change is detected.
SymAdmin.Option.out=Write output to file
SymAdmin.Option.in=Read from file
SymAdmin.Option.reverse=Reverse initial load from client to server
SymAdmin.Option.defer-constraints=Don't send indices and foreign key constraints
SymAdmin.Option.exclude-defaults=Don't send default values for columns
SymAdmin.Option.exclude-fk=Don't send foreign key constraints
SymAdmin.Option.exclude-indices=Don't send indices
SymAdmin.Option.exclude-log4j=Exclude log4j logging framework and configuration
SymAdmin.Option.external-security=Use security files outside of the WAR file for encryption keys and certificates
SymAdmin.Option.alters=DDL changes necessary to alter tables will be output
SymAdmin.Option.file=Specify a file to use.
SymAdmin.Option.accept-all=Accept each certificate in the chain without asking.

DbExport.Option.compatible=Change export to be compatible with given database: db2, db2zos, derby, firebird, greenplum, h2, hsqldb, hsqldb2, informix, interbase, mssql, mysql, oracle, postgres, sybase.
DbExport.Option.add-drop-table=Add drop table commands to output.
DbExport.Option.no-create-info=Do not write statements to create tables.
DbExport.Option.no-indices=Do not write statements to create indices.
DbExport.Option.no-foreign-keys=Do not write statements to create foreign keys.
DbExport.Option.no-data=Do not write statements to insert into tables.
DbExport.Option.use-variable-dates=Substitute dates as ${curdate+-millis}.
DbExport.Option.use-jdbc-timestamp-format=When true db export uses {ts 'yyyy-MM-dd hh:mm:ss.SSS'} format for exported dates and times.  Defaults to true.
DbExport.Option.no-qualifiers=Do not qualify table and columns names with quoted identifiers.
DbExport.Option.comments=Write informational comments.
DbExport.Option.format=Output format: SQL, CSV, XML, or SYM_XML.
DbExport.Option.catalog=Look for tables in catalog.
DbExport.Option.schema=Look for tables in schema.
DbExport.Option.sql=Run custom SQL to select data.
DbExport.Option.where=Specify the SQL for the "where" clause
DbExport.Option.dir=Indicate a directory to use for the export of files.  If the dir is specified, then a file per table will be written to the directory.
DbExport.Option.exclude-columns=A comma separated list of columns to exclude from the exported tables.
DbExport.Option.use-sym-db=Use the database that contains SymmetricDS's tables.  This only applies for nodes that are load only, extract only, or log based.

DbImport.Option.format=Input format: SQL, CSV, XML, or SYM_XML.
DbImport.Option.catalog=Look for tables in catalog.
DbImport.Option.schema=Look for tables in schema.
DbImport.Option.table=Specify table to import.
DbImport.Option.use-variable-dates=Allow date substitution using format ${curdate+-millis}.
DbImport.Option.commit=The number of rows to import before committing data.  The default is 10000.
DbImport.Option.interval=The number of milliseconds to wait between commiting transactions.
DbImport.Option.ignore=Indicates that conflicts with existing rows should be ignored.
DbImport.Option.replace=Indicates that existing rows should be replaced.  They will be replaced by an update statement.  This only applies for --format=CSV,SYM_XML.
DbImport.Option.force=Ignore ANY errors and attempt to continue on processing the import data.
DbImport.Option.alter=If the table already exists, attempt to alter it to match the import definition.  This only applies for --format=XML.
DbImport.Option.drop-if-exists=If the table already exists, attempt to drop it before creating it.  This only applies for --format=XML.
DbImport.Option.alter-case=During the creation of tables alter the case to match the default case of the database.  This only applies for --format=XML.
DbImport.Option.filter-classes=A comma separated list of Java classes that implement org.jumpmind.symmetric.io.data.writer.IDatabaseWriterFilter.  These filters will be applied to the import.

DbFill.Option.catalog=Look for tables in catalog.
DbFill.Option.count=The number of rows to generate in each table.
DbFill.Option.schema=Look for tables in schema.
DbFill.Option.cascade=Include foreign key dependent tables not included in the table list.
DbFill.Option.ignore=One or more prefixes to identify tables to ignore. This argument only works when no table names are provided. (e.g., "sym_,sys_")
DbFill.Option.interval=The time to wait in milliseconds between each transaction in the database.
DbFill.Option.weights=By default, an insert is performed for each count ('1,0,0'). To randomly select between an insert, update or delete on each table, weight can be applied so inserts can occur more than deletes. To make sure inserts happen twice as much as updates, and deletes are never performed use '2,1,0'.
DbFill.Option.continue=Ignore ANY errors and continue to modify the database.
DbFill.Option.print=Print out the SQL of the DbFill instead of of filling the table(s).
DbFill.Option.commit=Number of rows to commit as transaction.
DbFill.Option.commit-delay=The time to wait in milliseconds after changing data before commiting.  The default is 0.
DbFill.Option.prefixed=Prefix of table names to include.
DbFill.Option.rand=Randomize number of rows to generate and commit.
DbFill.Option.repeat=Number of times to repeat the count of rows.
DbFill.Option.rollback=Percent chance (0-100) to perform a rollback.
DbFill.Option.select=Select foreign key dependent data to satisfy constraints.
DbFill.Option.truncate=Truncate the tables before filling them.
DbFill.Option.max-text-size=Max number of characters to put into text fields. [32]
DbFill.Option.max-byte-size=Max number of bytes to put into binary fields. [32]

DbCompare.Option.exclude=A comma-separated list of table names to exclude from comparison.
DbCompare.Option.output=A file name to output delta SQL (insert/update/delete statements) that would bring the target into sync with the source.  You can use the %t pattern to use the table name as part of the file and generate a file per table.  (E.g. /output/%t.diff.sql)
DbCompare.Option.source=The source database engine properties file for comparison.
DbCompare.Option.target=The target database engine properties file for comparison.
DbCompare.Option.target-tables=A comma-separated list of table names to use for comparison on the target side. Prefix with catalog.schema.table if needed. Use with use-sym-config=false. 
DbCompare.Option.use-sym-config=true|false.  If true, sym_trigger, sym_transform, etc. will be consulted to build up the datamodel to compare. Default is true.
DbCompare.Option.numeric-scale=When comparing decimals, how many decimal places to consider while doing the comparison. Remaining digits will be rounded. Default is 3.
DbCompare.Option.output-sql=An output file for SQL statements that if executed on the target, should bring it into sync with the source.
DbCompare.Option.config=A reference to a properties file path containing additional configuration arguments for dbcompare. This properties file allows you to include table specific configuration and specify arguments such as where_clause and exclude_columns. Where clauses in the file should be formatted as [table].[source|target].where_clause. For example, with a table called item, use item.where_clause=field > now()-2. If you do not specify a table before "where_clause", then it will be used on all tables.
DbCompare.Option.date-time-format=A format to be used when comparing date time values. For example, using the format 'yyyy-MM-dd HH:mm:ss' would convert date time values into yyyy-MM-dd HH:mm:ss and then compare.
DbCompare.Option.continue-after-error=true|false. If true, the compare will continue even when parsing errors occur during compare. If false, compare will exit. Default is false.

DbSql.Option.sql=Run this sql statement in the shell
DbSql.Option.sqlfile=Run each line-delimited sql statement in specified file

Jmx.Option.listbeans=List the JMX beans that are available
Jmx.Option.listmethods=List the JMX methods that are available on a specific bean.  Requires that --bean be specified.
Jmx.Option.method=Name of the method that should be invoked.  Requires that --bean be specified.  Optionally provide --args if the method requires arguments.
Jmx.Option.args=List of arguments that JMX method requires.  By default the delimiter is a comma.  The delimiter can be overwritten using the --args-delimiter parameter.
Jmx.Option.args-delimiter=The separator character(s) to use for arguments.

