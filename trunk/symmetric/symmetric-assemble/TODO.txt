TODO = *
DONE = +

* Go through every class and fix javadoc, remove unused methods, follow conventions, and fix generics/warnings

* Setup build for 
  * 3.x

* Port CsvLoader and DataLoaderTest over.  Check-in and make sure all unit tests work.
  * Add settings to channel
  * Lookup/choose datawriter based on channel settings
  * clean up error handling in loader service
  * SqlScript for Informix
  * Implement a jdbc batch loader
    
* Use data processor for extract
  * verify stats capturing, outgoing batch updates
    * extract millis
    * byte count
  * add database reader filter  
  * unit test
  
* Integrate Eric's SecurityService changes
* Purge stats

* Get rid of IOException in service apis in favor of IoException
* Can BatchInfo go away?  
* Use HttpClient?
* Add table copy utility
* Clean up service tests    
* Purge OK records instead of purging them at a later date
* Test batch inserts for router service
* Remove all references to data_ref
* Change the default server mode to multiserver
* SqlMap create constants for columns and table names
* SqlMap, TriggerTemplate format better

* Test timezone columns.  Do other databases other than oracle and postgres have timezone columns?
* Test batch insert performance during routing (esp on oracle)
* Test to make sure that autocreate for all databases doesn't recreate symmetricds artifacts every time it is run (DB2 might be having an issue right now)

Performance Improvement Opportunities
* Pluggable data loaders
* Make push/pull/routing of channels asynchronous
* Sync based on updated column values (timestamp or flag)
* Transaction Log Parsing (vs. triggers)  
* Optimize triggers (don't capture old data.  option to capture only primary keys)
* Routing optimizations - allow a channel to always sync to everybody.  Update sym_outgoing_batch to have a PK of batch_id, node_id.
* Web Sockets protocol
* HttpClient (pool connections)

Documentation
* Change getting started to instruct user to update properties in the engines directory (for multiserver mode)
* Update documentation for extension points

3.0 Change Notes:
* Use SLF4J API exclusively. Log4j is used under the hood.
* The db.metadata.ignore.case property is no long available.  All configured database names will be case sensitive
* db.spring.bean.name is no longer available
* dataloader will now load each batch as it arrives.
* datareload.batch.insert.transactional is no longer available
* routing.data.reader.type is no longer available.  data_ref has been removed.
* jdbc datasources are no longer supported
* All data loader properties will be configurable by channel
* IDatabaseWriterFilter replaces IDataLoaderFilter
* IDatabaseWriterFilter replaces IBatchListener
* db.default.schema is no longer used
* No longer stop purge from running if there wasn't an initial load
* Extensions no longer have services injected into them.  If they need acccess to services, they should implement ISymmetricEngineAware
* Node concurrency manager no longer allows the same node to make a second request while it already has a reservation
* Added stage management job (that purges staged files)
* Removed support for db.force.delimited.identifier.mode.on & db.force.delimited.identifier.mode.off
* Removed support for db.metadata.ignore.case
* SymmetricDS tables are now created in the default case of the database
* Now supports mixed case tables on Firebird.
* Got rid of the isAutoRegister() method from IExtensionPoint
