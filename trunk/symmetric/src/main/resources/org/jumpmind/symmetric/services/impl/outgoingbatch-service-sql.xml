<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="    
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd"
  default-lazy-init="true">

  <util:map id="outgoingBatchServiceSql">
    <entry key="initialLoadStatusSql">
      <value>
        select status from $[sym.sync.table.prefix]_outgoing_batch where node_id=? and channel_id=?
      </value>
    </entry>
    <entry key="unsentBatchesForNodeIdChannelIdSql">
      <value>
        select count(*) from $[sym.sync.table.prefix]_outgoing_batch where node_id=? and channel_id=? and status != 'OK'
      </value>
    </entry>         
    <entry key="insertOutgoingBatchSql">
      <value>
        insert into $[sym.sync.table.prefix]_outgoing_batch (batch_id, node_id, channel_id, status,
        byte_count, sent_count, data_event_count, routing_millis, network_millis, filter_millis, load_millis, extract_millis, sql_state, sql_code, sql_message,
        failed_data_id, last_updated_hostname, last_updated_time, create_time) values (null, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_timestamp)
      </value>
    </entry>
    <entry key="updateOutgoingBatchSql">
      <value>
        update $[sym.sync.table.prefix]_outgoing_batch set status=?,
        byte_count=?, sent_count=?, data_event_count=?, routing_millis=?, network_millis=?, filter_millis=?, 
        load_millis=?, extract_millis=?, sql_state=?, sql_code=?, sql_message=?, 
        failed_data_id=?, last_updated_hostname=?, last_updated_time=? where batch_id=?
      </value>
    </entry>    
    <entry key="findOutgoingBatchSql">
      <value>
        select node_id, channel_id, status,
        byte_count, sent_count, data_event_count, routing_millis, network_millis, filter_millis, load_millis, extract_millis, sql_state, sql_code, sql_message,
        failed_data_id, last_updated_hostname, last_updated_time, create_time, batch_id from
        $[sym.sync.table.prefix]_outgoing_batch where batch_id=?
      </value>
    </entry>
    <entry key="selectOutgoingBatchSql">
      <value>
        select node_id, channel_id, status,
        byte_count, sent_count, data_event_count, routing_millis, network_millis, filter_millis, load_millis, extract_millis, sql_state, sql_code, sql_message,
        failed_data_id, last_updated_hostname, last_updated_time, create_time, batch_id from
        $[sym.sync.table.prefix]_outgoing_batch where node_id = ? and status in (?, ?, ?) order by batch_id asc
      </value>
    </entry>
    <entry key="selectOutgoingBatchRangeSql">
      <value>
        select node_id, channel_id, status,
        byte_count, sent_count, data_event_count, routing_millis, network_millis, filter_millis, load_millis, extract_millis, sql_state, sql_code, sql_message,
        failed_data_id, last_updated_hostname, last_updated_time, create_time, batch_id from
        $[sym.sync.table.prefix]_outgoing_batch where batch_id between ? and ? order by batch_id
      </value>
    </entry>
    <entry key="selectOutgoingBatchErrorsSql">
      <value>
        select node_id, channel_id, status,
        byte_count, sent_count, data_event_count, routing_millis, network_millis, filter_millis, load_millis, extract_millis, sql_state, sql_code, sql_message,
        failed_data_id, last_updated_hostname, last_updated_time, create_time, batch_id from
        $[sym.sync.table.prefix]_outgoing_batch where status = 'ER' order by batch_id
      </value>
    </entry>

  </util:map>

</beans>