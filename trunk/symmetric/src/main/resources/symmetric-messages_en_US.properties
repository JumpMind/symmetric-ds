# Naming convention for keys
# Noun (Object), verb, condition (completed, failed, etc)
# Camel case
#
# If the string is related to a unit test, please prefix with "Test"

AckSendingFailed=Ack was not sent successfully on try number %d.  %s
AddressAuthorizing=Authorizing address: %s
AddressFilterStringExtracted=Extracted IP filter string from ParameterService as: %s
AddressFilterStringExtractingFailed=Could not initialize address filter string
AddressFiltersMissing=No address filters were provided to be compiled
AddressMultiCastDisallowed=Allow multicast is 'false'. Denying multicast address: %s
AddressDenied=Denying Address: %s
Arguments=Arguments: %s
AuthenticationFailed=Could not authenticate with node.
BandwidthCalculated=%s was calculated to have a download bandwidth of %s kbps.
BandwidthSampleSizeParsingFailed=Unable to parse sampleSize of %s
BandwidthSampleTTLParsingFailed=Unable to parse sampleTTL of %s
BatchCompleting=Completing batch %d
BatchLoadingFailed=Failed to load batch %s because: %s
BatchParsingFailed=Failed while parsing batch.
BatchReadingFailed=Failed while reading batch because: %s
BatchRetrying=Retrying batch %s
BatchSkipping=Skipping batch %s
BatchStatusLoggingFailed=Could not log the outgoing batch status because the batch was null.
BatchStatusRecordFailed=Failed to record status of batch %s
BufferWriting=Writing %s
ChannelFlushed=Channels flushed because new channels came through the dataloader.
ChannelAutoConfiguring=Auto-configuring %s channel.
ChannelExists=No need to create channel %s.  It already exists.
CompressionFilterCalledNotCompressing=doFilter gets called without compression
CompressionFilterCalledCompressing=doFilter gets called with compression
CompressionFilterDoesNotSupportsCompression=Does not support compression.
CompressionFilterNotCompressing=Got parameter of gzip=false.  Don't compress, just chain filter.
CompressionFilterStarting=@doFilter
CompressionFilterSupportsCompression=Supports compression.
CompressionFilterURI=requestURI= %s
CompressionServletStarting=CompressionServletResponseWrapper constructor gets called
CompressionServletSettingType=setContentType to %s
CompressionServletCreatingStream=createOutputStream gets called
CompressionServletFlushingBuffer=flush buffer @ CompressionServletResponseWrapper
CompressionServletStreamSettingOutput=stream is set to %s in getOutputStream
CompressionServletStreamSettingWriter=stream is set to %s in getWriter
CompressionServletCharacterEncoding=character encoding is %s
ConfigurationChanged=About to syncTriggers because new configuration came through the dataloader.
DB2DialectInitializingError=Error while initializing DB2 dialect
DataPulling=Pull requested %s
DataPulled=Pull data received %s
DataPullingFailed=Pull no data received %s
DataPullingFailedLock=Did not run the pull process because the cluster service has it locked
DataPurgeIncomingRunning=The incoming purge process is about to run.
DataPurgeIncomingCompleted=The incoming purge process has completed.
DataPurgeIncomingRunningFailed=Could not get a lock to run an incoming purge.
DataPurgeIncomingRange=Getting range for incoming batch
DataPurgeIncomingAllCompleted=Purged all %d incoming batch for node %s
DataPurgeSkippingNoInitialLoad=No sense running the purge service because an initial load has not been completed.
DataPurgeStatsRunning=The statistic purge process is about to run.
DataPurgeStatsRun=Purged %d statistic rows.
DataPurgeStatsCompleted=The statistic purge process has completed.
DataPurgeStatsRunningFailedLock=Did not run the purge process because the cluster service has it locked.
DataPurgeOutgoingRunning=The outgoing purge process is about to run for data older than %s.
DataPurgeOutgoingCompleted=The outgoing purge process has completed.
DataPurgeOutgoingRunningFailedLock=Could not get a lock to run an outgoing purge.
DataPurgeOutgoingRange=Getting range for outgoing batch
DataPurgeRowsRange=Getting range for data
DataPurgeTableStarting=About to purge %s
DataPurgeTableRunning=Purged %d of %s rows so far.
DataPurgeTableCompleted=Done purging %d of %s rows.
DataPushed=Pushed data to %s
DataPushing=Push requested for %s
DataPushingCompleted=Push completed for %s
DataPushingFailed=There was an error while pushing data to the server
DataPushingFailedLock=Did not run the push process because the cluster service has it locked.
DataExtractorCouldNotFindStreamCommand=Could not find the stream command for event type of %s.
DataSent=Push data sent to %s
DataAckExtendedReading=Reading extend ack: %s
DataAckReading=Reading ack: %s
DataAckReadingFailed=Did not receive an acknowledgement for the batches sent.
DataAckSaving=Saving ack: %s, %s
DatabaseConnectionException=Could not get a connection to the database: %s.  Waiting for 10 seconds before trying to connect to the database again.
DatabaseParametersReadingFailed=Could not read database parameters.  We will try again later.
DatabaseSchemaBuilding=Building database schema from: %s
DatabaseStats=There are currently %s active database connections.
DDLRunning=Running DDL: %s
EncodingUnsupported=Unsupported binary encoding value of %s
EnvironmentVariablesCreating=Creating environment variables %s and %s
ExceptionGeneral=An exception occurred.  Please see the following for details:
ExtensionRegistering=Registering an extension point named %s of type '%s' with SymmetricDS
FileNotFound=Could not find file %s
FilePropertiesNotFound=Could not find the properties file specified: %s
FilterInitializing=Initializing filter %s
FilterRangeValuesChecking=Checking for Range values on filter: %s
FilterStringCompiling=Compiling filter string: %s
FilterStringIPv4Compiling=Compiling IPv4 filter string: %s
FilterReplaced=Replaced wild card filter to: %s
FilterSkipping=Found a Spring filter that does not implement IExtensionPoint.  NOT adding it as a SymmetricFilter.
FindNodeSecurityNodeNull=A 'null' node id was passed into findNodeSecurity.
FirebirdSymUdfMissing=Please install the sym_udf.so/dll to your {firebird_home}/UDF folder
FirebirdSymEscapeMissing=Function SYM_ESCAPE is not installed
FunctionInstalled=Just installed %s
HeartbeatUpdatingFailure=Did not run the heartbeat process because the cluster service has it locked.
InitAddingSystemProperty=Adding system property: %s=%s
JMXAdaptorUnregisterFailed=Could not unregister the JMX HTTP Adaptor
JMXBeansRegisterError=Unable to register JMX Beans with the default MBeanServer: %s
JMXConsoleStarting=Starting JMX HTTP console on port %d
JMXNotificationSending=Sending a JMX notification with a message payload of: %s
JobCancelled=This job, %s, has been cancelled.
JobRescheduling=Rescheduling %s with %s ms delay.
JobStarting=Starting %s
LauncherLogLocation=Check in the logs directory for program output.
LauncherMissingArgument=Check the argument you passed in.  --%s takes an argument of {groupId},{externalId}
LauncherMissingFilenameTriggerSQL=Please provide a file name to write the trigger SQL to
LoaderTokenUnexpected=Unexpected token '%s' on line %d of batch %d
LoaderUpdatingFailedInserting=Unable to update %s, inserting instead: %s
LoaderInsertingFailedUpdating=Unable to insert into %s, updating instead: %s
LoaderInsertingFailed=Unable to insert into %s, %s
LoaderRowsUpdatingFailed=Too many rows (%d) updated for %s: %s
LoaderDeleteMissing=Delete of %s effected no rows: %s
LoaderUpdatingFailed=Unable to update %s: %s
LockInserted=Inserted into the NODE_LOCK table for %s
LockInsertFailed=Failed to insert to the NODE_LOCK table for %s.  Must be initialized already.
LockAcquiringFailed=Could not acquire lock on the table after %s ms.  The status is unknown.
Message=%s
NodeInitialLoadOpened=Successfully opened initial load for node %s
NodeInitialLoadFailed=Could not open initial load for %s
NodeMissing=Node %s does not exist.
NodeUnknown=Unknown node %s
NodeSecurityMissing=Could not find a node security row for %s
NodeVersionUpdating=Updating time and version node info
NodeVersionUpdated=Done updating my node info.
NodeConfigurationUpdating=Updating my node configuration info according to the symmetric properties
NodeRegistertingFailed=Could not register.  Sleeping for %d ms before attempting again.
NodeRegisterting=Attempting to register with %s
NodeRegistered=Successfully registered node [id=%s]
NodeRegistrationOpened=Just opened registration for external id of %s and a node group of %s and a node id of %s
NodeRegistertingFailedConnection=Connection failed while registering.
NodeRegisteringFailedIdentityMissing=Node identity is missing after registration.  The registration server may be misconfigured or have an error.
NodeRegisteringFailedUnavailable=Node registration is unavailable.
NodeReregisteringFailed=There was no row with a node id of %s to 'reopen' registration for.
NodeUpgradeFailed=Cannot upgrade an unregistered node
NodeUpgradeStarting=Starting upgrade from version %s to %s
NodeUpgradeCompleted=Completed upgrade.
Option=Option: name=%s, value=%s
PostgreSqlCustomVariableMissing=Please add "custom_variable_classes = 'symmetric'" to your postgresql.conf file
PostTriggerCreateFailed=Failed to create post trigger: %s
RegisteredNodeStarting=Starting registered node [group=%s, id=%s, externalId=%s]
RegistrationEmpty=%s attempted registration, but was sent an empty configuration.
RegistrationFailed=Registration attempt failed.  Registration was not open for the node.
RegistrationLost=Registration was lost. Attempting to re-register.
RegistrationNotAllowed=%s was not allowed to register.
RegistrationNotAllowedNoInitialLoad=Registration is not allowed until this node has an initial load
RegistrationOpened=Opened Registration for %s
RegistrationRedirecting=Redirecting %s to %s for registration.
RouterMissing=Could not find configured router '%s' for trigger with the id of %s. Defaulting the router
RouterStats=Routing '%s' stat %s=%s
RouterRoutingFailed=Failed to route and batch data on '%s' channel
SecretKeyGenerating=Generating secret key.
SecretKeyRetrieving=Retrieving secret key.
ServletCompressedStreamReceived=Receive compressed stream.
ServletInitializing=Initializing Servlet %s
ServletNoneFound=No Servlets were found to register with the SymmetricServlet
ServletNotFoundToHandleRequest=No Servlets were found to handle the request %s
ServletPulling=Pull request received from %s
ServletPulled=Done with Pull request from %s
ServletReceived=Received: \n %s
ServletProcessingFailedError=Error while processing %s request for externalId: %s, node: %s at %s (%s)
ServletProcessingFailedWarning=Error while processing %s request for externalId: %s, node: %s at %s (%s).  The message is: %s
SocketTimeOut=Socket timeout while attempting to contact %s
Sql=SQL: %s
ScriptRunning=Running %s
ScriptCompleted=Ran %d SQL statements in %s
ScriptError=Error on line %d of %s
ScriptDropError=Could not drop a total of %d database objects because they were not found.
SqlError=%s failed to execute.
SqlUpgrade=Upgrade: %s
SqlUpgradeIgnoring=Ignoring failure of last upgrade statement: %s
SqlForEachUpgrade=Upgrade for each: %
SqlDoUpgrade=Upgrade do: %s
SymmetricDSClosing=Closing SymmetricDS externalId=%s version=%s database=%s
SymmetricDSDatabaseNotAutoConfig=SymmetricDS is not configured to auto-create the database.
SymmetricDSDatabaseInitializing=Initializing SymmetricDS database.
SymmetricDSDatabaseInitialized=Done initializing SymmetricDS database.
SymmetricDSStarted=Started SymmetricDS externalId=%s version=%s database=%s
SymmetricDSUpgradeFailed=The upgrade failed.  The system may be unstable.  Please resolve the problem manually.
SymmetricDSUpgradeNeeded=Upgrade of node is necessary.  Please set the auto.upgrade property to true for an automated upgrade.
SymmetricEngineMissing=Could not find a reference to the SymmetricEngine from %s
SymmetricEngineNotRegistered=Did not run job because the engine is not registered.
SymmetricEngineNotStarted=The engine is not currently started.
TableDropped=Just dropped table %s_CONFIG
TableDuplicating=Duplicating table %s into %s
TableGeneratingEventsFailure=Not generating data/data events for table %s because a trigger or trigger hist is not created yet.
TablesCreating=About to create SymmetricDS tables
TablesCreatingSkipped=No need to create SymmetricDS tables.  They already exist.
TextMessagePublishing=Publishing text message %s
TextMessagePublished=%s published %d messages in the last %d ms.
TransactionIDSupportEnabling=Enabling transaction ID support
TransportFailedConnectionBusy=The server was too busy to accept the connection.
TransportFailedConnectionUnavailable=Could not connect to the transport: %s
TransportSyncURLOverriding=Overriding an existing '%s' extension sync url handler with a second one.
TransportSyncURLBlank=Using the registration URL to contact the remote node because the syncURL for the node is blank.
TransportSyncURLMissing=Could not find a registered extension sync url handler with the name of %s using the url %s
TextPublishing=Publishing %s
TextPublishingFailed=Message was not published because the publisher is not enabled.
ThrottleFilterStarting=Before hit servlet
ThrottleFilterCompleted=After hit servlet
TriggerAlreadyExists=A trigger already exists for that name.  Details are as follows: %s
TriggerConfigurationCreatingFailed=Unexpected node group link while creating configuration triggers: source_node_group_id=%s, action=%s
TriggerCreateFailed=Failed to create trigger: %s
TriggerCreating=Creating %s trigger for %s %s
TriggerDoesNotExist=Trigger does not exist
TriggerDropped=Just dropped trigger %s
TriggerDropError=Error removing %s: %s
TriggerHistCreating=Creating trigger hist entry for %s
TriggerInitializing=Initializing %s for %s
TriggerMayExist=Could not figure out if the trigger exists.  Assuming that is does not.
TriggerMissing=Could not find an %s trigger in the cache for table %s and a hist id of %s
TriggerNameTruncated=We just truncated the trigger name for the %s trigger id=%s.  You might want to consider manually providing a name for the trigger that is less than %d characters long.
TriggerProcessingFailedMissing="Could not find trigger for trigger id of %s.  Not processing data with the id of %s
TriggerTableMissing=The configured table does not exist in the datasource that is configured: %s
TriggerUnavailable=The trigger %s is no longer available for an initial load.
TriggersRemoving=About to remove triggers for inactivated table: %s
TriggersRemovingFailed=There are triggers that have been marked as inactive.  Please remove triggers represented by trigger_id=%s and trigger_hist_id=%s
TriggersRemovingSkipped=A trigger was inactivated that had not yet been built, taking no action.
TriggerSynchronizingFailed=Failed to synchronize trigger for %s
TriggersSynchronizing=Synchronizing triggers.
TriggersSynchronizingFailedLock=Did not run the syncTriggers process because the cluster service has it locked
TriggersSynchronized=Done synchronizing triggers.
UnregisteredNodeStarting=Starting unregistered node [group=%s, externalId=%s]
URLConnectingFailure=Could not connect to the %s node's transport because of a bad URL: %s
WebServerInitializeError=Failed to initialize the web server context.
WebServerStarting=About to start SymmetricDS web server on port %d
WebServerSecureStarting=About to start SymmetricDS web server on secure port %d
XMLSending=Sending XML to IPublisher: %s
Launcher.Option.server=Start an embedded instance of SymmetricDS that accepts HTTP.
Launcher.Option.client=Start an embedded, client-only, instance of SymmetricDS.
Launcher.Option.secure-server=Start an embedded instance of SymmetricDS that accepts HTTPS.
Launcher.Option.mixed-server=Start an embedded instance of SymmetricDS that accepts HTTP/HTTPS.
Launcher.Option.port=Optionally pass in the HTTP port number to use for the server instance.
Launcher.Option.secure-port=Optionally pass in the HTTPS port number to use for the server instance.
Launcher.Option.max-idle-time=Max idle time in milliseconds when a connection is forced to close [900000].
Launcher.Option.generate-config-dll=Output the DDL to create the symmetric tables.  Takes an argument of the name of the file to write the ddl to.
Launcher.Option.properties=Takes an argument with the path to the properties file that will drive symmetric.  If this is not provided, symmetric will use defaults, then override with the first symmetric.properties in your classpath, then override with symmetric.properties values in your user.home directory.
Launcher.Option.purge=Will simply run the purge process against the currently configured database.
Launcher.Option.generate-default-properties=Takes an argument with the path to a file which all the default overrideable properties will be written.
Launcher.Option.run-dll=Takes an argument of a DdlUtils xml file and applies it to the database configured in your symmetric properties file.
Launcher.Option.run-sql=Takes an argument of a .sql file and runs it against the database configured in your symmetric properties file.
Launcher.Option.auto-create=Attempts to create the symmetric tables in the configured database.
Launcher.Option.open-registration=Open registration for the passed in node group and external id.  Takes an argument of {groupId},{externalId}.
Launcher.Option.reload-node=Send an initial load of data to reload the passed in node id.
Launcher.Option.dump-batch=Print the contents of a batch out to the console.  Takes the batch id as an argument.
Launcher.Option.load-batch=Load the CSV contents of the specfied file.
Launcher.Option.skip-db-validate=Don't test to see if the database connection is valid before starting the server.  Note that if the connection is invalid, then the server will continually try to connect if this is set.
Launcher.Option.generate-triggers=Run the sync triggers process and write the output the specified file.  If triggers should not be applied automatically then set the auto.sync.triggers property to false
Launcher.Option.generate-triggers-always=Run the sync triggers process even if the triggers already exist.
Launcher.Option.encrypt=Encrypts the given text for use with db.user and db.password properties
Launcher.Option.verbose=Log output to the console instead of the log file
