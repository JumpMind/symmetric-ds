<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"
    default-lazy-init="true" default-autowire="byName">
    
    <import resource="classpath:/sql/configuration-service-sql.xml"/>
    <import resource="classpath:/sql/statistic-service-sql.xml"/>    
    <import resource="classpath:/sql/outgoingbatch-service-sql.xml"/>
    <import resource="classpath:/sql/dataextractor-service-sql.xml"/>
    <import resource="classpath:/sql/data-service-sql.xml"/>
    <import resource="classpath:/sql/incomingbatch-service-sql.xml"/>    
    <import resource="classpath:/sql/node-service-sql.xml"/>
    <import resource="classpath:/sql/registration-service-sql.xml"/>
    <import resource="classpath:/sql/purge-service-sql.xml"/>
    <import resource="classpath:/sql/acknowledge-service-sql.xml"/>
    <import resource="classpath:/sql/cluster-service-sql.xml"/>
    <import resource="classpath:/sql/parameter-service-sql.xml"/>    
    
    <bean id="statisticService" class="org.jumpmind.symmetric.service.impl.StatisticService">
        <property name="sql" ref="statisticServiceSql"/>
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />        
    </bean>
    
    <bean id="statisticManager" class="org.jumpmind.symmetric.statistic.StatisticManager">
        <property name="statisticService" ref="statisticService"/>
        <property name="nodeService" ref="nodeService"/>
    </bean>    

    <bean id="transportManager" class="org.jumpmind.symmetric.transport.TransportManagerFactoryBean"
        scope="singleton">
        <property name="transport" value="${symmetric.transport.type}" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="nodeService" ref="nodeService" />
        <property name="httpTimeout" value="${symmetric.runtime.http.timeout.ms}" />
        <property name="useCompression" value="${symmetric.runtime.http.compression}" />
        <property name="httpSslVerifiedServerNames" value="${symmetric.runtime.https.verified.server.names}" />
    </bean>

    <bean id="bootstrapService" class="org.jumpmind.symmetric.service.impl.BootstrapService"
        scope="singleton">
        <property name="triggerPrefix" value="${symmetric.runtime.trigger.prefix}" />
        <property name="tablePrefix" value="${sync.table.prefix}" />
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="dbDialect" ref="dbDialect" />
        <property name="parameterService" ref="parameterService" />
        <property name="nodeService" ref="nodeService" />
        <property name="transportManager" ref="transportManager" />
        <property name="dataLoaderService" ref="dataLoaderService" />
        <property name="configurationService" ref="configurationService" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="dataService" ref="dataService" />
        <property name="upgradeService" ref="upgradeService" />
        <property name="clusterService" ref="clusterService" />
        <property name="autoConfigureDatabase" value="${symmetric.auto.config.database}" />
        <property name="autoUpgrade" value="${symmetric.auto.upgrade}" />
    </bean>

    <bean id="parameterService" class="org.jumpmind.symmetric.service.impl.ParameterService"
        scope="singleton">
        <property name="sql" ref="parameterServiceSql" />
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="cacheTimeoutInMs" value="${symmetric.runtime.parameter.reload.timeout.ms}"/>
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
    </bean>

    <bean id="configurationService" class="org.jumpmind.symmetric.service.impl.ConfigurationService"
        scope="singleton">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="dbDialect" ref="dbDialect" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="sql" ref="configurationServiceSql"/>
        <property name="rootConfigChannelInitialLoadSelect" ref="rootConfigChannelInitialLoadSelect"/>
        <property name="rootConfigChannelTableNames">
            <list>
                <value>${sync.table.prefix}_node_group</value>
                <value>${sync.table.prefix}_node_group_link</value>
                <value>${sync.table.prefix}_node</value>
                <value>${sync.table.prefix}_node_security</value>
                <value>${sync.table.prefix}_parameter</value>
                <value>${sync.table.prefix}_channel</value>
                <value>${sync.table.prefix}_node_channel_ctl</value>
                <value>${sync.table.prefix}_trigger</value>
            </list>
        </property>
    </bean>

    <bean id="outgoingBatchService" class="org.jumpmind.symmetric.service.impl.OutgoingBatchService"
        scope="singleton">
        <property name="sql" ref="outgoingBatchServiceSql"/>
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="batchSizePeekAhead" value="${symmetric.runtime.outgoing.batches.peek.ahead.window.after.max.size}"/>
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="nodeService" ref="nodeService" />
        <property name="dbDialect" ref="dbDialect" />
    </bean>

    <bean id="dataExtractorService"
        class="org.jumpmind.symmetric.service.impl.DataExtractorService">
        <property name="sql" ref="dataExtractorServiceSql"/>
        <property name="outgoingBatchService" ref="outgoingBatchService" />
        <property name="configurationService" ref="configurationService" />
        <property name="dbDialect" ref="dbDialect" />
        <property name="tablePrefix" value="${sync.table.prefix}" />
        <property name="context" ref="extractorContext" />
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="dataService" class="org.jumpmind.symmetric.service.impl.DataService"
        scope="singleton">
        <property name="sql" ref="dataServiceSql"/>
        <property name="deleteFirstForReload"
            value="${symmetric.runtime.initial.load.delete.first}" />
        <property name="createFirstForReload"
            value="${symmetric.runtime.initial.load.create.first}" />
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="configurationService" ref="configurationService" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="nodeService" ref="nodeService" />
        <property name="outgoingBatchService" ref="outgoingBatchService" />
        <property name="purgeService" ref="purgeService" />
        <property name="dbDialect" ref="dbDialect" />
        <property name="tablePrefix" value="${sync.table.prefix}" />
    </bean>

    <bean id="pushService" class="org.jumpmind.symmetric.service.impl.PushService">
        <property name="extractor" ref="dataExtractorService" />
        <property name="transportManager" ref="transportManager" />
        <property name="ackService" ref="acknowledgeService" />
        <property name="nodeService" ref="nodeService" />
    </bean>

    <bean id="pullService" class="org.jumpmind.symmetric.service.impl.PullService">
        <property name="dataLoaderService" ref="dataLoaderService" />
        <property name="nodeService" ref="nodeService" />
    </bean>

    <bean id="dataLoaderService" class="org.jumpmind.symmetric.service.impl.DataLoaderService"
        scope="singleton">
        <property name="numberOfStatusSendRetries" value="${symmetric.runtime.num.of.ack.retries}" />
        <property name="timeBetweenStatusSendRetriesMs"
            value="${symmetric.runtime.time.between.ack.retries.ms}" />
        <property name="dbDialect" ref="dbDialect" />
        <property name="transactionTemplate" ref="transactionTemplate" />
        <property name="transportManager" ref="transportManager" />
        <property name="incomingBatchService" ref="incomingBatchService" />
        <property name="statisticManager" ref="statisticManager" />
    </bean>

    <bean id="dataLoader" class="org.jumpmind.symmetric.load.csv.CsvLoader" scope="prototype">
        <property name="dbDialect" ref="dbDialect" />
        <property name="jdbcTemplate" ref="dataLoaderTemplate" />
        <property name="enableFallbackInsert" value="true" />
        <property name="enableFallbackUpdate" value="true" />
        <property name="allowMissingDelete" value="true" />
    </bean>

    <bean id="incomingBatchService" class="org.jumpmind.symmetric.service.impl.IncomingBatchService"
        scope="singleton">
        <property name="skipDuplicateBatches"
            value="${symmetric.runtime.incoming.batches.skip.duplicates}" />
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="dbDialect" ref="dbDialect" />
        <property name="sql" ref="incomingBatchServiceSql"/>
    </bean>

    <bean id="nodeService" class="org.jumpmind.symmetric.service.impl.NodeService"
        scope="singleton">
        <property name="sql" ref="nodeServiceSql"/>
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

    <bean id="registrationService" class="org.jumpmind.symmetric.service.impl.RegistrationService"
        scope="singleton">
        <property name="sql" ref="registrationServiceSql"/>
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="nodeService" ref="nodeService" />
        <property name="clusterService" ref="clusterService" />
        <property name="acknowledgeService" ref="acknowledgeService" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="dataExtractorService" ref="dataExtractorService" />
        <property name="configurationService" ref="configurationService" />
        <property name="dataService" ref="dataService" />
        <property name="autoRegistration" value="${symmetric.auto.registration}" />
        <property name="autoReload" value="${symmetric.auto.reload}" />
    </bean>

    <bean id="acknowledgeService" class="org.jumpmind.symmetric.service.impl.AcknowledgeService"
        scope="singleton">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="outgoingBatchService" ref="outgoingBatchService" />
        <property name="sql" ref="acknowledgeServiceSql"/>
    </bean>

    <bean id="extractorContext" class="org.jumpmind.symmetric.extract.DataExtractorContext"
        scope="prototype">
    </bean>

    <bean id="dataExtractor" class="org.jumpmind.symmetric.extract.csv.CsvExtractor">
        <property name="dbDialect" ref="dbDialect" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="dictionary">
            <map>
                <entry key="I">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamInsertDataCommand"></bean>
                </entry>
                <entry key="U">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamUpdateDataCommand"></bean>
                </entry>
                <entry key="D">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamDeleteDataCommand"></bean>
                </entry>
                <entry key="V">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamValidateDataCommand"></bean>
                </entry>
                <entry key="R">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamReloadDataCommand">
                        <property name="dataExtractorService" ref="dataExtractorService" />
                        <property name="configurationService" ref="configurationService" />
                        <property name="nodeService" ref="nodeService" />
                    </bean>
                </entry>
                <entry key="S">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamSQLDataCommand"></bean>
                </entry>
                <entry key="C">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamCreateDataCommand"></bean>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="dataExtractor13" class="org.jumpmind.symmetric.extract.csv.CsvExtractor13">
        <property name="dbDialect" ref="dbDialect" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="tablePrefix" value="${sync.table.prefix}" />
        <property name="dictionary">
            <map>
                <entry key="I">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamInsertDataCommand"></bean>
                </entry>
                <entry key="U">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamUpdateDataCommand"></bean>
                </entry>
                <entry key="D">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamDeleteDataCommand"></bean>
                </entry>
                <entry key="V">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamValidateDataCommand"></bean>
                </entry>
                <entry key="R">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamReloadDataCommand">
                        <property name="dataExtractorService" ref="dataExtractorService" />
                        <property name="configurationService" ref="configurationService" />
                        <property name="nodeService" ref="nodeService" />
                    </bean>
                </entry>
                <entry key="S">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamSQLDataCommand"></bean>
                </entry>
                <entry key="C">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamCreateDataCommand"></bean>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="dataExtractor10" class="org.jumpmind.symmetric.extract.csv.CsvExtractor10">
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="tablePrefix" value="${sync.table.prefix}" />
        <property name="dictionary">
            <map>
                <entry key="I">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamInsertDataCommand"></bean>
                </entry>
                <entry key="U">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamUpdateDataCommand"></bean>
                </entry>
                <entry key="D">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamDeleteDataCommand"></bean>
                </entry>
                <entry key="V">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamValidateDataCommand"></bean>
                </entry>
                <entry key="R">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamReloadDataCommand">
                        <property name="dataExtractorService" ref="dataExtractorService" />
                        <property name="configurationService" ref="configurationService" />
                        <property name="nodeService" ref="nodeService" />
                    </bean>
                </entry>
                <entry key="S">
                    <bean class="org.jumpmind.symmetric.extract.csv.StreamSQLDataCommand"></bean>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="upgradeService" class="org.jumpmind.symmetric.service.impl.UpgradeService">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="nodeService" ref="nodeService" />
        <property name="upgradeTaskMap" ref="upgradeTaskMap" />
    </bean>

    <bean id="clusterService" class="org.jumpmind.symmetric.service.impl.ClusterService">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="nodeService" ref="nodeService" />
        <property name="lockTimeoutInMilliseconds"
            value="${symmetric.runtime.cluster.lock.timeout.ms}" />
        <property name="lockDuringPurge" value="${symmetric.runtime.cluster.lock.during.purge}" />
        <property name="lockDuringPull" value="${symmetric.runtime.cluster.lock.during.pull}" />
        <property name="lockDuringPush" value="${symmetric.runtime.cluster.lock.during.push}" />
        <property name="lockDuringHeartbeat"
            value="${symmetric.runtime.cluster.lock.during.heartbeat}" />
        <property name="lockDuringSyncTriggers"
            value="${symmetric.runtime.cluster.lock.during.sync.triggers}" />
        <property name="sql" ref="clusterServiceSql"/>
    </bean>

    <bean id="purgeService" class="org.jumpmind.symmetric.service.impl.PurgeService">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="sql" ref="purgeServiceSql" />
        <property name="runtimeConfiguration" ref="runtimeConfiguration" />
        <property name="clusterService" ref="clusterService" />
        <property name="dbDialect" ref="dbDialect" />
        <property name="retentionInMinutes" value="${symmetric.runtime.purge.retention.minutes}" />
        <property name="maxNumOfDataIdsToPurgeInTx"
            value="${symmetric.runtime.job.purge.max.num.data.events.to.delete.in.tx}" />
        <property name="deleteIncomingBatchesByNodeIdSql" ref="deleteIncomingBatchesByNodeIdSql"/>
        <property name="incomingPurgeSql" ref="incomingPurgeSql"/>
    </bean>
    

</beans>