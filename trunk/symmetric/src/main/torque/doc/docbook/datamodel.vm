<?xml version="1.0" encoding="UTF-8"?>
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
#set ( $database = $dataModel )

<section version="5.0" xml:id="ch03-concepts" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns="http://docbook.org/ns/docbook"
    xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml">
    <title>Data Model</title>
    <para> Having done a brief introduction to some fundamental terms, what follows is the complete SymmetricDS data model.
        Note that all tables are prepended with a configurable prefix so that multiple instances of SymmetricDS may coexist in the
        same database. The default prefix is
        <emphasis>sym_</emphasis>
        .
    </para>
    <simplesect>
        <title>Configuration Data</title>
        <para> The configuration is entered by the user into the data model to control the behavior of what data is synchronized
            to which nodes. To ease management of several databases, nodes are put into groups, and groups are linked together for
            synchronization. A trigger captures data for a table, which can include conditions and criteria for subsets. Triggers
            are grouped into channels for prioritization and control of data flow.</para>
        <para>
            <figure>
                <title>Configuration Data Model</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="images/data-model-config.gif" format="GIF" />
                    </imageobject>
                </mediaobject>
            </figure>
        </para>
        
    </simplesect>
    <simplesect>
        <title>Runtime Data</title>
        <para> At runtime, the configuration is used to capture data changes and route them to nodes. The data changes are placed
            together in a single unit called a batch that can be loaded by another node. Outgoing batches are delivered to nodes
            and acknowledged. Incoming batches are received and loaded. History is recorded for batch status changes and
            statistics.</para>
        <para>
            <figure>
                <title>Runtime Data Model</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="images/data-model-runtime.gif" format="GIF" />
                    </imageobject>
                </mediaobject>
            </figure>
        </para>
    </simplesect>
		 
	  #foreach ($tbl in $database.tables)
	    $generator.parse("doc/docbook/table.vm",$outFile,"table",$tbl)
	  #end

</section>
