<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="    
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
  default-lazy-init="true">

  <util:map id="outgoingBatchServiceSql">
    <entry key="initialLoadStatusSql">
      <value>
        select status from $[sym.sync.table.prefix]_outgoing_batch where node_id=? and load_flag=?
      </value>
    </entry>
    <entry key="unsentBatchesForNodeIdChannelIdSql">
      <value>
        select count(*) from $[sym.sync.table.prefix]_outgoing_batch where node_id=? and channel_id=? and status != 'OK'
      </value>
    </entry>         
    <entry key="insertOutgoingBatchSql">
      <value>
        insert into $[sym.sync.table.prefix]_outgoing_batch 
          (batch_id, node_id, channel_id, status, load_flag, reload_event_count, other_event_count, last_update_hostname, last_update_time, create_time) 
           values (null, ?, ?, ?, ?, ?, ?, ?, current_timestamp, current_timestamp)
      </value>
    </entry>
    <entry key="updateOutgoingBatchSql">
      <value>
        update $[sym.sync.table.prefix]_outgoing_batch set status=?, load_flag=?, error_flag=?,
        byte_count=?, extract_count=?, sent_count=?, load_count=?, data_event_count=?, 
        reload_event_count=?, insert_event_count=?, update_event_count=?, delete_event_count=?, other_event_count=?, 
        router_millis=?, network_millis=?, filter_millis=?, 
        load_millis=?, extract_millis=?, sql_state=?, sql_code=?, sql_message=?, 
        failed_data_id=?, last_update_hostname=?, last_update_time=? where batch_id=?
      </value>
    </entry>    
    <entry key="findOutgoingBatchSql">
      <value>
        select node_id, channel_id, status,
        byte_count, extract_count, sent_count, load_count, data_event_count, 
        reload_event_count, insert_event_count, update_event_count, delete_event_count, other_event_count,
        router_millis, network_millis, filter_millis, load_millis, extract_millis, sql_state, sql_code, sql_message,
        failed_data_id, last_update_hostname, last_update_time, create_time, batch_id, load_flag, error_flag from
        $[sym.sync.table.prefix]_outgoing_batch where batch_id=?
      </value>
    </entry>
    <entry key="selectOutgoingBatchSql">
      <value>
        select node_id, channel_id, status,
        byte_count, extract_count, sent_count, load_count, data_event_count, 
        reload_event_count, insert_event_count, update_event_count, delete_event_count, other_event_count,
        router_millis, network_millis, filter_millis, load_millis, extract_millis, sql_state, sql_code, sql_message,
        failed_data_id, last_update_hostname, last_update_time, create_time, batch_id, load_flag, error_flag from
        $[sym.sync.table.prefix]_outgoing_batch where node_id = ? and status in (?, ?, ?, ?, ?) order by batch_id asc
      </value>
    </entry>
    <entry key="selectOutgoingBatchRangeSql">
      <value>
        select node_id, channel_id, status,
        byte_count, extract_count, sent_count, load_count, data_event_count, 
        reload_event_count, insert_event_count, update_event_count, delete_event_count, other_event_count,
        router_millis, network_millis, filter_millis, load_millis, extract_millis, sql_state, sql_code, sql_message,
        failed_data_id, last_update_hostname, last_update_time, create_time, batch_id, load_flag, error_flag from
        $[sym.sync.table.prefix]_outgoing_batch where batch_id between ? and ? order by batch_id
      </value>
    </entry>
    <entry key="selectOutgoingBatchErrorsSql">
      <value>
        select node_id, channel_id, status,
        byte_count, extract_count, sent_count, load_count, data_event_count, 
        reload_event_count, insert_event_count, update_event_count, delete_event_count, other_event_count,
        router_millis, network_millis, filter_millis, load_millis, extract_millis, sql_state, sql_code, sql_message,
        failed_data_id, last_update_hostname, last_update_time, create_time, batch_id, load_flag, error_flag from
        $[sym.sync.table.prefix]_outgoing_batch where error_flag=1 order by batch_id
      </value>
    </entry>
    <entry key="countOutgoingBatchesErrorsSql">
      <value>
        select count(*) from $[sym.sync.table.prefix]_outgoing_batch where error_flag=1
      </value>
    </entry>
    <entry key="selectOutgoingBatchSummaryByStatusSql">
      <value>
        select count(*) as batches, sum(data_event_count) as data, status, node_id, min(create_time) as oldest_batch_time
          from $[sym.sync.table.prefix]_outgoing_batch where status in (:STATUS_LIST) group by status, node_id order by oldest_batch_time asc
      </value>
    </entry>    
    <entry key="updateOutgoingBatchesStatusSql">
      <value>
        update $[sym.sync.table.prefix]_outgoing_batch set status=? where status = ?
      </value>
    </entry>        
  </util:map>

</beans>