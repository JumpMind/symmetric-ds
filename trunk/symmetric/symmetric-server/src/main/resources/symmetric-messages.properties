# Naming convention for keys
# Noun (Object), verb, condition (completed, failed, etc)
# Camel case
#
# If the string is related to a unit test, please prefix with "Test"

Option=Option: name=%s, value=%s
Launcher.Option.server=Start an embedded instance of SymmetricDS that accepts HTTP.
Launcher.Option.client=Start an embedded, client-only, instance of SymmetricDS.
Launcher.Option.secure-server=Start an embedded instance of SymmetricDS that accepts HTTPS.
Launcher.Option.mixed-server=Start an embedded instance of SymmetricDS that accepts HTTP/HTTPS.
Launcher.Option.host=Optionally pass in the network interface the server should bind to.  If this option is not provided, the server will bind to all interfaces.
Launcher.Option.port=Optionally pass in the HTTP port number to use for the server instance.
Launcher.Option.secure-port=Optionally pass in the HTTPS port number to use for the server instance.
Launcher.Option.max-idle-time=Max idle time in milliseconds when a connection is forced to close [900000].
Launcher.Option.generate-config-ddl=Output the DDL to create the symmetric tables.  Takes an argument of the name of the file to write the ddl to.
Launcher.Option.properties=Takes an argument with the path to the properties file that will drive symmetric.  If this is not provided, symmetric will use defaults, then override with the first symmetric.properties in your classpath, then override with symmetric.properties values in your user.home directory.
Launcher.Option.purge=Will simply run the purge process against the currently configured database.
Launcher.Option.generate-default-properties=Takes an argument with the path to a file which all the default overrideable properties will be written.
Launcher.Option.run-ddl=Takes an argument of a DdlUtils xml file and applies it to the database configured in your symmetric properties file.
Launcher.Option.run-sql=Takes an argument of a .sql file and runs it against the database configured in your symmetric properties file.
Launcher.Option.run-profile=Takes an argument of a profile name.  When run, SymmetricDS will be configured per the profile setup.  A profile is a SymmetricDS configuration for a specific application, topology, or domain.
Launcher.Option.auto-create=Attempts to create the symmetric tables in the configured database.
Launcher.Option.open-registration=Open registration for the passed in node group and external id.  Takes an argument of {groupId},{externalId}.
Launcher.Option.reload-node=Send an initial load of data to reload the passed in node id.
Launcher.Option.dump-batch=Print the contents of a batch out to the console.  Takes the batch id as an argument.
Launcher.Option.load-batch=Load the CSV contents of the specified file.
Launcher.Option.skip-db-validate=Don't test to see if the database connection is valid before starting the server.  Note that if the connection is invalid, then the server will continually try to connect if this is set.
Launcher.Option.generate-triggers=Run the sync triggers process and write the output the specified file.  If triggers should not be applied automatically then set the auto.sync.triggers property to false
Launcher.Option.generate-triggers-always=Run the sync triggers process even if the triggers already exist.
Launcher.Option.encrypt=Encrypts the given text for use with db.user and db.password properties.
Launcher.Option.verbose=The log file format will be used in the console output.
Launcher.Option.keystore-password=Takes an argument to be used as an override to the keystore password.
Launcher.Option.keystore-type=Takes an argument to be used as an override to the keystore type.
Launcher.Option.debug=Debug information will be enabled in the logger.
Launcher.Option.export-schema=Export the entire database schema for the configured database connection to XML.  Takes an argument of the file name.
Launcher.Option.no-nio=Do not use Non-blocking IO for the HTTP connector.
Launcher.Option.no-directbuffer=Do not use direct buffers for the NIO HTTP connector.
Launcher.Option.noconsole=No output will be sent to the console,
Launcher.Option.nologfile=The log file will not be created on the file system.
Launcher.Option.create-war=Generate a web archive that can be deployed to a web server like Tomcat.  The name of the output file must be provided.  If a properties file is designated, it will be renamed and packaged as symmetric.properties.  Other than the optional properties file, a war is made up of the contents of the web directory and the conf directory of the standalone installation.