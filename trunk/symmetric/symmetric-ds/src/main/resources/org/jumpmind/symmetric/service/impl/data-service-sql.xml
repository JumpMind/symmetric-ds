<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="    
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd"
  default-lazy-init="true">

  <util:map id="dataServiceSql">  
    <entry key="countDataInRangeSql">
      <value><![CDATA[
        select count(*) from $[sym.sync.table.prefix]_data where data_id > ? and data_id < ?
      ]]></value>
    </entry>  
    <entry key="insertIntoDataSql">
      <value>
        insert into $[sym.sync.table.prefix]_data (data_id, table_name, event_type, row_data, pk_data,
        old_data, trigger_hist_id, channel_id, create_time) values(null, ?, ?, ?, ?, ?, ?, ?, current_timestamp)
      </value>
    </entry>
    <entry key="insertIntoDataEventSql">
      <value>
        insert into $[sym.sync.table.prefix]_data_event (data_id, batch_id, router_id, create_time) values(?, ?, ?, current_timestamp)
      </value>
    </entry>  
    <entry key="findDataEventCreateTimeSql">
      <value>
        select max(create_time) from $[sym.sync.table.prefix]_data_event where data_id=?
      </value>
    </entry>    
    <entry key="findDataCreateTimeSql">
      <value>
        select create_time from $[sym.sync.table.prefix]_data where data_id=?
      </value>
    </entry>     
    <entry key="updateDataRefSql">
      <value>
       update $[sym.sync.table.prefix]_data_ref set ref_data_id=?, ref_time=?
      </value>
    </entry>
    <entry key="insertDataRefSql">
      <value>
       insert into $[sym.sync.table.prefix]_data_ref (ref_data_id, ref_time) values(?,?)
      </value>
    </entry> 
    <entry key="findDataRefSql">
      <value>
       select ref_data_id, ref_time from $[sym.sync.table.prefix]_data_ref
      </value>
    </entry>
    <entry key="findDataGapsByStatusSql">
      <value>
       select start_id, end_id, create_time from $[sym.sync.table.prefix]_data_gap where status=? order by start_id asc
      </value>
    </entry>
    <entry key="insertDataGapSql">
      <value>
       insert into $[sym.sync.table.prefix]_data_gap (status, last_update_hostname, start_id, end_id, last_update_time, create_time) values(?, ?, ?, ?, current_timestamp, current_timestamp)
      </value>
    </entry>          
    <entry key="updateDataGapSql">
      <value>
       update $[sym.sync.table.prefix]_data_gap set status=?, last_update_hostname=?, last_update_time=current_timestamp where start_id=? and end_id=?
      </value>
    </entry>                        
  </util:map>

</beans>