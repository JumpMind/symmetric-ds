import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.0'
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
    }
}

apply from: 'asciidoc.gradle'

allprojects {

    apply plugin: 'eclipse-wtp'

    group = 'org.jumpmind.symmetric'

    repositories {
        mavenCentral()
        maven { url "http://repository.codehaus.org" }
    }

    eclipse {
        classpath {
            downloadSources = true
            downloadJavadoc = false
        }
    }
}

subprojects { subproject ->

    apply plugin: 'java'
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-eclipse'

    sourceCompatibility=1.6
    targetCompatibility=1.6

    ext {
        commonsDbcpVersion = '1.3'
        commonsIoVersion = '2.4'
        commonsLangVersion = '2.6'
        commonsNetVersion = '3.3'
        commonsCodecVersion = '1.3'
        commonsCollectionVersion = '3.2'
        cglibVersion = '2.2'
        hamcrestVersion = '1.3'
        h2Version = '1.3.176'
        javaMailVersion = '1.4.7'
        jdomVersion = '2.0.5'
        junitVersion = '4.11'
        log4jVersion = '1.2.17'
        slf4jVersion = '1.7.7'
        mockitoVersion = '1.9.5'
        powerMockVersion = '1.5.3'
        mysqlVersion = '5.1.30'
        servletVersion = '3.0.1'
        springVersion = '4.0.5.RELEASE'
        jtdsVersion = '1.3.1'
        bouncyCastleVersion = '140'
        animalSnifferVersion = '1.10'

        env = System.getenv()
    }

    dependencies {
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
        compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
        compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"

        testCompile "junit:junit:$junitVersion"
        testCompile "log4j:log4j:$log4jVersion"
        testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion"
        testCompile "org.mockito:mockito-all:$mockitoVersion"
        testCompile "org.powermock:powermock-api-mockito:$powerMockVersion"
        testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
    }

    task develop {
        dependsOn tasks.cleanEclipse, tasks.cleanEclipseWtp, tasks.eclipse, tasks.eclipseWtp
    }
}

project('symmetric-util') {
    description = 'Utility classes that are used by several Symmetric libraries'

    dependencies {
        compile "commons-lang:commons-lang:$commonsLangVersion"
        compile "commons-io:commons-io:$commonsIoVersion"
        compile "commons-codec:commons-codec:$commonsCodecVersion"
        compile "commons-collections:commons-collections:$commonsCollectionVersion"        
        compile "bouncycastle:bcprov-jdk15:$bouncyCastleVersion"
        provided "org.codehaus.mojo:animal-sniffer-annotations:$animalSnifferVersion"
    }
}

project('symmetric-db') {
    description = 'Database classes that are used by several Symmetric libraries'

    dependencies {
        compile project(":symmetric-util")
        compile "net.sf.kxml:kxml2:2.3.0"
    }
}

task wrapper(type: Wrapper) { gradleVersion = '2.2.1' }
