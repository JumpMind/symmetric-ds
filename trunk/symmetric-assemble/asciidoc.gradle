apply plugin: 'org.asciidoctor.gradle.asciidoctor'

configurations{ generateAppendixesDependencies }

dependencies {
    generateAppendixesDependencies project(":symmetric-util")
    generateAppendixesDependencies project(":symmetric-db")
}

task generateAppendixes {
    doLast{
        javaexec {
            main = 'org.jumpmind.properties.DefaultParameterParser'
            classpath = configurations.generateAppendixesDependencies
            args = [
                ossDir + '/../symmetric-server/src/main/deploy/conf/symmetric-server.properties',
                ossDir + '/src/asciidoc/generated/server-parameters.ad',
                'false',
                'asciidoc'
            ]
        }

        javaexec {
            main = 'org.jumpmind.properties.DefaultParameterParser'
            classpath = configurations.generateAppendixesDependencies
            args = [
                ossDir + '/../symmetric-core/src/main/resources/symmetric-default.properties',
                ossDir + '/src/asciidoc/generated/startup-parameters.ad',
                'false',
                'asciidoc'
            ]
        }

        javaexec {
            main = 'org.jumpmind.properties.DefaultParameterParser'
            classpath = configurations.generateAppendixesDependencies
            args = [
                ossDir + '/../symmetric-core/src/main/resources/symmetric-default.properties',
                ossDir + '/src/asciidoc/generated/runtime-parameters.ad',
                'true',
                'asciidoc'
            ]
        }

        javaexec {
            main = 'org.jumpmind.db.io.DatabaseXmlAsciiDocBuilder'
            classpath = configurations.generateAppendixesDependencies
            args = [
                ossDir + '/../symmetric-core/src/main/resources/symmetric-schema.xml',
                ossDir + '/src/asciidoc/generated/schema.ad'
            ]
        }
    }
}

asciidoctor { (1)
    sourceDir = new File(ossDir + '/src/asciidoc')
    outputDir = new File("target/src/asciidoc")
    options = [
        doctype: 'book',
        sourceDocumentNames: [
            ossDir + 'user-guide.ad',
            ossDir + 'tutorials/tutorials.ad']
    ]    
    attributes 'source-highlighter':'coderay'
    if (project.properties.containsKey('pro')) {
       attributes['pro'] = 'true'  
    } 

    
}

asciidoctor.dependsOn { tasks.generateAppendixes }
