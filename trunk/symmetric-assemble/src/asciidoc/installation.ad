
== Installation

SymmetricDS at its core is a web application.  A SymmetricDS instance runs within the context of a web application container 
like Jetty or Tomcat, and uses web based protocols like http to communicate with other SymmetricDS instances.  

A SymmetricDS instance can be installed and run in three different ways:

. *<<Standalone Installation>>* - SymmetricDS is installed and run as a standalone process that includes and leverages
the Jetty embedded web server.  This is the simplest, and recommended way to install a SymmetricDS instance.  

. *<<Web Archive (WAR)>>* - A SymmetricDS WAR file is deployed to an existing web application container that is
separately installed, maintained and run.    

. *<<Embedded>>* - SymmetricDS is embedded within an existing application.  In this option, a custom wrapper program is
written that calls exposed SymmetricDS functions to synchronize data.

=== Standalone Installation

ifndef::pro[]
The `sym` command line utility starts a standalone web server with
SymmetricDS pre-deployed.  The standalone server uses an embedded instance of the
Jetty application server to handle web requests.  The web server can be configured
using command line options or the web server can be configured by changing properties in the
`conf/symmetric-server.properties` file.
           
The following example starts the SymmetricDS server on port 8080 with the startup
properties found in the `root.properties` file.
            
[source, cli]
----
/symmetric/bin/sym --properties root.properties --port 8080 --server
----

Even though the port and properties settings can be passed in on the command line, the preferred
configuration approach is to put each hosted node's properties file in the `engines` directory
and to modify port settings and enable secure mode using the `conf/symmetric-server.properties`.

It is also suggested that SymmetricDS be configured to run as a service according to the instructions 
for your platform as documented in the following section.

endif::pro[]

ifdef::pro[]
The SymmetricDS installer is packaged as an executable jar file named *symmetric-pro-<version>-setup.jar*.  
In order to run the installer and utilize SymmetricDS you must have the Java Runtime Environment (JRE)
version 6.0 or greater installed.  

[.float-group]
--
[.left.text-left]
image::install/install-first.png[]

To start the installer, either double-click on the .jar file (if the JRE is in your path and associated
with .jar files) or run `java -jar symmetric-pro-<version>-setup.jar` from a command prompt.

The first screen shown by the installer is a Welcome screen.  Press Next to continue.

--

[.float-group]
--
[.left.text-left]
image::install/install-second.png[]

The next screen allows you to specify whether you want to install a new version of SymmetricDS for the first time 
(_Install new software_) or upgrade an existing version of SymmetricDS that had previously been installed 
(_Upgrade existing software_).

Select the appropriate option and press Next.

--

[.float-group]
--
[.left.text-left]
image::install/install-third.png[]

Carefully read the SymmetricDS Pro License Agreement.  If you accept, select _I accept the terms of this license agreement._ 
and press Next.

--

[.float-group]
--
[.left.text-left]
image::install/install-fourth.png[]

Choose the installation location or path for SymmetricDS and press Next.

--

[.float-group]
--
[.left.text-left]
image::install/install-fifth.png[]

Select the packages you want to install and press Next.  By default, all packages are selected.  If you are integrating 
SymmetricDS with Android, you may uncheck the Android package.

--

[.float-group]
--
[.left.text-left]
image::install/install-sixth.png[]

A standalone installation of SymmetricDS can be installed to run as a service, or installed as a program to be started and stopped
manually by a user.  It is suggested that SymmetricDS be installed to run as a service so that it will automatically start when 
the computer is restarted.  Refer to <<Running SymmetricDS as a Service>> for more information on running SymmetricDS
as a service.  Click the _Install service to run autmatically_ checkbox to have SymmetricDS installed as a service.  

Click the _Run server after installing_ to have SymmetricDS automatically start upon completion of the install wizard.

Press Next.

--

[.float-group]
--
[.left.text-left]
image::install/install-seventh.png[]

As mentioned previously, SymmetricDS is a web application and communicates over HTTP or HTTPS utilizing TCP/IP ports.  The first two checkboxes,
_Enable HTTP_ and _Enable SSL_ determine whether SymmetricDS exchanges data with other SymmetricDS instances using HTTP or HTTPS.  HTTPS 
encrypts the data when being sent between nodes for security purposes, while HTTP does not.   

In addition to specifying HTTP or HTTPS you can also determine whether the SymmetricDS JMS management console should be run.  

When you have selected the desired options and ports, press Next.

--

[.float-group]
--
[.left.text-left]
image::install/install-eigth.png[]

Confirm your installation settings and press Next to begin the installation.

--

[.float-group]
--
[.left.text-left]
image::install/install-ninth.png[]

Once SymmetricDS finishes installing, press Next.

--

[.float-group]
--
[.left.text-left]
image::install/install-tenth.png[]

If you chose the option for the SymmetricDS Server to start after installation, wait for it to start and then press Next.

--

[.float-group]
--
[.left.text-left]
image::install/install-eleventh.png[]

The installation is now complete.  Choose if you want to open the SymmetricDS Pro Control Center and press Done.  The 
SymmetricDS Pro Control Center allows you to see the status of SymmetricDS, start and stop SymmetricDS, and install SymmetricDS
as a service if you haven't already done so.

--

[.float-group]
--
[.left.text-left]
image::install/install-twelth.png[]

If you chose to open the SymmetricDS Pro Control Center, you will be greeted by this screen.  From the SymmetricDS Pro Control Center, 
you may start/stop the server, open the web console, and choose to install SymmetricDS as a service if you have not already done so.  To
continue the installation and configuration of SymmetricDS, ensure the Server is running and click _Open Web Console_.  Refer to the 
<<Setup>> section of this guide to continue setup and configuration of SymmetricDS after the install is complete.

--

endif::pro[]


=== Running SymmetricDS as a Service
   
SymmetricDS can be configured to start automatically when the system boots, running as a Windows service or Linux/Unix daemon.
A wrapper process starts SymmetricDS and monitors it, so it can be restarted if it runs out of memory or exits unexpectedly.
The wrapper writes standard output and standard error to the `logs/wrapper.log` file.

ifdef::pro[]
For SymmetricDS Pro, you may have already installed as a service, so this section will show you how to manually install
the service from command line.
endif::pro[]

==== Running as a Windows Service
       
To install the service, run the following command as Administrator:

[source, cli]
----
bin\sym_service.bat install
----

Most configuration changes do not require the service to be re-installed.
To uninstall the service, run the following command as Administrator:

[source, cli]
----
bin\sym_service.bat uninstall
----
   
To start and stop the service manually, run the following commands as Administrator:
[source, cli]
----
bin\sym_service.bat start
bin\sym_service.bat stop
----

==== Running as a Linux/Unix daemon
       
An init script is written to the system `/etc/init.d` directory.
Symbolic links are created for starting on run levels 2, 3, and 5 and stopping on run levels 0, 1, and 6.
To install the script, running the following command as root:
[source, cli]
----
bin/sym_service install
----
   
Most configuration changes do not require the service to be re-installed.
To uninstall the service, run the following command as root:
[source, cli]
----
bin/sym_service uninstall
----
   
To start and stop the service manually, run the following commands:
[source, cli]
----
bin/sym_service start
bin/sym_service stop
----
    
=== Clustering
       
A single SymmetricDS node may be clustered across a series of instances, creating a web farm.  A node might be clustered to provide load balancing and failover, for example.

When clustered, a hardware load balancer is typically used
to round robin client requests to the cluster.  The load balancer should be configured for stateless connections.

ifndef::pro[]
Also, the `sync.url` (discussed in <<Engine Files>>) SymmetricDS property should be set to the URL of the load balancer.
endif::pro[]

ifdef::pro[]
Also, the `sync.url` (discussed in <<Registration URL>>) SymmetricDS property should be set to the URL of the load balancer.
endif::pro[]
   
If the cluster will be running any of the SymmetricDS jobs, then the `cluster.lock.enabled` property should be set to `true`.
By setting this property to true, SymmetricDS will use a row in the <<LOCK>> table as a semaphore to make sure that only one instance at a time
runs a job.  When a lock is acquired, a row is updated in the lock table with the time of the lock and the server id of the locking job.  The lock time is set back to null
when the job is finished running.  Another instance of SymmetricDS cannot acquire a lock until the locking instance (according to the server id) releases the lock.  If an
instance is terminated while the lock is still held, an instance with the same server id is allowed to reacquire the lock.  If the locking instance remains down, the lock can be
broken after a period of time, specified by the `cluster.lock.timeout.ms` property, has expired.  Note that if the job is still running and the lock
expires, two jobs could be running at the same time which could cause database deadlocks.
   
By default, the locking server id is the hostname of the server.  If two clustered instances are running on the same server, then the `cluster.server.id` property
may be set to indicate the name that the instance should use for its server id.
   
When deploying SymmetricDS to an application server like Tomcat or JBoss, no special session clustering needs to be configured for the application server.
    
=== Other Deployment Options

It is recommended that SymmetricDS is installed as a standalone service, however there are two other deployment options.

==== Web Archive (WAR)
           
           
This option means packaging a WAR file and deploying to your favorite
web server, like Apache Tomcat.  It's a little more work, but you
can configure the web server to do whatever you need.  SymmetricDS can also
be embedded in an existing web application, if desired.  As a web application archive, a WAR is deployed to an application server,
such as Tomcat, Jetty, or JBoss.  The structure of the archive will have a `web.xml`
file in the `WEB-INF` folder, an appropriately configured `symmetric.properties` file in the `WEB-INF/classes` folder,
and the required JAR files in the `WEB-INF/lib` folder.

.War
image::symmetric_war.gif[]

A war file can be generated using the standalone installation's `symadmin` utility and the
`create-war` subcommand.  The command requires the name of the war file to generate.  It
essentially packages up the web directory, the conf directory and includes an optional
properties file.  Note that if a properties file is included, it will be copied to
WEB-INF/classes/symmetric.properties.  This is the same location conf/symmetric.properties
would have been copied to.  The generated war distribution uses the same web.xml as the standalone
deployment.
            
[source, cli]           
----
bin/symadmin -p my-symmetric-ds.properties create-war /some/path/to/symmetric-ds.war
----

==== Embedded
           
This option means you must write a wrapper Java program that runs
SymmetricDS.  You would probably use Jetty web server, which is also embeddable.
You could bring up an embedded database like Derby or H2.  You could configure the
web server, database, or SymmetricDS to do whatever you needed, but it's also
the most work of the three options discussed thus far.
   
The deployment model you choose depends on how much flexibility you need versus how easy you
want it to be.  Both Jetty and Tomcat are excellent, scalable web servers that
compete with each other and have great performance.  Most people choose either
the _Standalone_ or _Web Archive_ with Tomcat 5.5 or 6.  Deploying to Tomcat
is a good middle-of-the-road decision that requires a little more work for more flexibility.

A Java application with the SymmetricDS Java Archive (JAR) library on its
classpath can use the `SymmetricWebServer` to start the server.
            
[source, java]
----
import org.jumpmind.symmetric.SymmetricWebServer;

public class StartSymmetricEngine {

    public static void main(String[] args) throws Exception {

        SymmetricWebServer node = new SymmetricWebServer(
                                   "classpath://my-application.properties", "conf/web_dir");

        // this will create the database, sync triggers, start jobs running
        node.start(8080);

        // this will stop the node
        node.stop();
    }
----
           
This example starts the SymmetricDS server on port 8080.
The configuration properties file, `my-application.properties`,
is packaged in the application to provide properties that override the SymmetricDS
default values.  The second parameter to the constructor points to the web directory.
The default location is `web`.  In this example the web directory is located
at `conf/web_dir`.  The web.xml is expected to be found at `conf/web_dir/WEB-INF/web.xml`.