
=== Routers

Routers are used to determine which targets will receive the captured data. The mapping between the set of triggers and set of routers is many-to-many. 
This means that one trigger can capture changes and route to multiple locations. It also means that one router can be defined an associated with many different triggers.

ifdef::pro[]
image::router.png[]

.Required Fields
endif::pro[]

Router Id:: Unique description of a specific router
Group Link:: The group link used for the source and target node groups of this router
Router Type:: The name of a specific type of router.  Custom routers can be configured as extension points.

.Router Types
[cols="<2,^1,<7", options="header"]
|===
|Type
|Provided
|Description

|default|x|A router that sends all data to all nodes that belong to the target node group defined in the router. See <<Default Router>>

|column|x|A router that compares old or new column values to a constant value or the value of a node's external id or node id.  See <<Column Match Router>>

|audit|x|A router that inserts into an automatically created audit table. It records captured changes to tables that it is linked to.  See <<Audit Table Router>>

|java|x|A router that executes a Java expression in order to select nodes to route to. The script can use the old and new column values.  See <<Java Router>>

|lookuptable|x|A router which can be configured to determine routing based on an existing or ancillary table specifically for the purpose of routing data.  See <<Lookup Table Router>>

|subselect|x|A router that executes a SQL expression against the database to select nodes to route to. This SQL expression can be passed values of old and new column values.  See <<Subselect Router>>

|bsh|x|A router that executes a Bean Shell script expression in order to select nodes to route to. The script can use the old and new column values.  See <<Beanshell Router>>

|xml||A router the publishes data changes directly to a messaging solution instead of transmitting changes to registered nodes.  See <<XML Publishing Router>>
This router must be configured manually in XML as an extension point.

|===
ifdef::pro[]
.Advanced Options
endif::pro[]

Router Expression:: An expression that is specific to the type of router that is configured in router type.  See the documentation for each router for more details.
Sync on Update:: Flag that indicates that this router should route updates.
Sync on Insert:: Flag that indicates that this router should route inserts.
Sync on Delete:: Flag that indicates that this router should route deletes.
Target Catalog:: Optional name for the catalog a target table is in. Only use this if the target table is not in the default catalog.  
If this field is left blank, then the source_catalog_name for the trigger will be used as the target name.  
If the target name should be left blank and the source name is set, then the token of $(none) may be used to force the target name to be blanked out.
Target Schema:: Optional name of the schema a target table is in. On use this if the target table is not in the default schema.  
If this field is left blank, then the source_schema_name for the trigger will be used as the target name.  
If the target name should be left blank and the source name is set, then the token of $(none) may be used to force the target name to be blanked out.
Use Source Catalog/Schema:: Whether or not to assume that the target catalog/schema name should be the same as the source catalog/schema name.  The target catalog or schema name will still override if not blank.
Target Table:: Optional name for a target table.  Only use this if the target table name is different than the source.

ifdef::pro[]
.Sample Routers
====
image::routers/routers-examples.png[]

* image:routers/link_break.png[] A router that is not linked to any triggers.
* image:routers/table.png[] A router that is linked to a single trigger.
* image:routers/table_multiple.png[] A router that is linked to multiple triggers.
====
endif::pro[]

include::routers/linking.ad[]
include::routers/types.ad[]
