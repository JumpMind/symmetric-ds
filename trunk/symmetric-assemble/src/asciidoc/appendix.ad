
[appendix]
== Data Model

What follows is the complete SymmetricDS data model. Note that all tables are prepended with a configurable prefix 
so that multiple instances of SymmetricDS may coexist in the same database. The default prefix is sym_.

SymmetricDS configuration is entered by the user into the data model to control the behavior of what data is 
synchronized to which nodes.

.Configuration Data Model
image::data-model-config.gif[]

At runtime, the configuration is used to capture data changes and route them to nodes. The data changes are placed 
together in a single unit called a batch that can be loaded by another node. Outgoing batches are delivered to nodes 
and acknowledged. Incoming batches are received and loaded. History is recorded for batch status changes and statistics.

.Runtime Data Model
image::data-model-runtime.gif[]

include::generated/schema.ad[]

[appendix]
== Parameters

There are two kinds of parameters that can be used to configure the behavior of SymmetricDS: Startup Parameters and Runtime Parameters . 
Startup Parameters are required to be in a system property or a property file, while Runtime Parameters can also be found in the Parameter 
table from the database. Parameters are re-queried from their source at a configured interval and can also be refreshed on demand by using the JMX API. 

The following table shows the source of parameters and the hierarchy of precedence.

.Parameter Discovery Precedence
[cols="5,^1,3"]
|===
|Location|Required|Description

|symmetric-default.properties  |Y   |Packaged inside symmetric-core jar file. This file has all the default settings along with descriptions.
|conf/symmetric.properties     |N   |Changes to this file in the conf directory of a standalone install apply to all engines in the JVM.
|symmetric-override.properties |N   |Changes to this file, provided by the end user in the JVM's classpath, apply to all engines in the JVM.
|engines/*.properties          |N   |Properties for a specific engine or node that is hosted in a standalone install.
|Java System Properties        |N   |Any SymmetricDS property can be passed in as a -D property to the runtime. It will take precedence over any properties file property.
|Parameter table               |N   |A table which contains SymmetricDS parameters. Parameters can be targeted at a specific node group and even at a specific external id. These settings will take precedence over all of the above.
|IParameterFilter              |N   |An extension point which allows parameters to be sourced from another location or customized. These settings will take precedence over all of the above.
|===

=== Startup Parameters

Startup parameters are read once from properties files and apply only during start up. The following properties are used:

include::generated/startup-parameters.ad[]

=== Runtime Parameters

Runtime parameters are read periodically from properties files or the database. The following properties are used:

include::generated/runtime-parameters.ad[]

=== Server Configuration

Server configuration is read from conf/symmetric-server.conf for settings needed by the server before the parameter system has been initialized.

include::generated/server-parameters.ad[]


[appendix]
== Database Notes
include::appendix/databases.ad[]


[appendix]
== Data Format

include::appendix/dataformat.ad[]

[appendix]
== Version Numbering
include::appendix/versioning.ad[]

[appendix]
== Upgrading

The upgrade process can either be a full upgrade of a new installation that copies in existing settings
or an incremental upgrade of an existing installation that copies in new library files.
A full upgrade is the cleanest method that ensures all new files are updated, while an incremental upgrade
changes a minimal number of files.
An incremental upgrade works best for patch releases and most minor releases.
When SymmetricDS is started after a major or minor software update, it will alter its database tables with any changes needed
for that release. 

=== Full Upgrade

For major releases and clean upgrades, copy old settings into a new installation using the following steps:

. Stop the old SymmetricDS.
. Backup the old SymmetricDS folder by renaming it.
. Unzip the SymmetricDS distribution. 
. Copy old files from "engines" folder.  (These files contain database connection information and engine settings.)
. Copy old files from "conf" folder.  (These files contain settings for ports, wrapper, and logging.)  Check to see if any new changes need merged.
. Copy old files from "security" folder.  (These files contain keys for encryption.)
. Restart SymmetricDS.
  
=== Incremental Upgrade 
 
For patch and minor releases, copy and replace the library folders of the installation using the following steps:

. Stop the old SymmetricDS.
. Backup the old "lib" and "web/WEB-INF/lib" folders by renaming them.
. Unzip the SymmetricDS distribution to a temporary folder.
. Copy the new "lib" and "web/WEB-INF/lib" folders into the old installation. 
. Restart SymmetricDS.

Most patch releases only change the JAR files named with "symmetric" in the "web/WEB-INF/lib" folder.
 